{"meta":{"title":"飞猪 Go","subtitle":null,"description":null,"author":"shelling","url":"https://mumu-1005.github.io/pishon"},"pages":[{"title":"算法分享","date":"2016-02-03T12:10:29.000Z","updated":"2020-04-28T10:07:36.000Z","comments":true,"path":"projects/index.html","permalink":"https://mumu-1005.github.io/pishon/projects/index.html","excerpt":"","keywords":null,"text":"排序算法 冒泡排序 选择排序 插入排序 希尔排序 归并排序 快速排序 基数排序 堆排序 查找算法逻辑题 列表去重保留最后面的元素 进制转换与通用转换器实现","raw":null,"content":null},{"title":"攒点BUG","date":"2019-07-06T08:10:01.000Z","updated":"2020-04-29T09:17:11.000Z","comments":false,"path":"bugs/index.html","permalink":"https://mumu-1005.github.io/pishon/bugs/index.html","excerpt":"","keywords":null,"text":"2019-04-20 2019-03-11 2019-01-12 2018-12-28 2018-11-23 2018-07-17 2018-05-12 2018-04-28 2018-04-24 2018-02-22 2018-01-23 2017-12-30 2017-08-06 2016-03-16 2014-04-24 2019-04-20 ISSUE1ERROR: more than one row returned by a subquery used as an expression SOLUTION123456789SELECT field1,field2, (select ARRAY_AGG(field3) from b where exp) FROM a WHERE expORDER BY field1; 2019-03-11 ISSUE1234# 连接中断，返回的相应大小被限制在127.86kbSIGPIPE: writing to a closed pipe/socket/fd (probably the client disconnected) on request /project/api/ !!!uwsgi_response_write_body_do(): Broken pipe [core/writer.c line 341] during GET /project/api/ IOError: write error SOLUTION12# 打开Nginx配置文件 调整默认的限制缓存大小 根据实际业务调整uwsgi_buffers 8 512k; 默认为8 4k 8为数量 2019-01-12 ISSUE123Crypto/PublicKey/RSA.py&quot;, line 375, in decrypt raise NotImplementedError(&quot;Use module Crypto.Cipher.PKCS1_OAEP instead&quot;)NotImplementedError: Use module Crypto.Cipher.PKCS1_OAEP instead SOLUTION123pip uninstall pycryptodomepip uninstall pycryptopip install pycrypto 2018-12-28 ISSUE-dpkg删除&#x2F;安装未完全安装的软件包1installed python-lockfile package post-installation script subprocess returned error exit status 127 SOLUTION1sudo apt-get install -f --reinstall coreutils init-system-helpers 2018-11-23 ISSUE-强制关闭Redis快照导致不能持久化123MISCONF Redis is configured to save RDB snapshots, but is currently not able to persist on disk. Commands that may modify the data set are disabled. Please check Redis logs for details about the error. SOLUTION1127.0.0.1:6379&gt; config set stop-writes-on-bgsave-error no 2018-04-24 ISSUE1ValueError: Expecting property name enclosed in double quotes: line 1 column 2 (char 1) SOLUTION1# 将json中的单引号改成双引号 2018-04-24 ISSUE1selenium.common.exceptions.InvalidSelectorException: Message: Compound class names not permitted SOLUTION1在selenium元素定位中复合class，取一个class名即可 2018-04-28 ISSUE1Your password does not satisfy the current policy requirements SOLUTION123SHOW VARIABLES LIKE &#x27;validate_password%&#x27;;set global validate_password_policy=LOW; ALTER USER &#x27;root&#x27;@&#x27;localhost&#x27; IDENTIFIED BY &#x27;123456&#x27;; 2018-04-24 ISSUE1NameError: name &#x27;__main__&#x27; is not defined SOLUTION1if __name__ == &#x27;__main__&#x27;: 2018-02-22 ISSUE12345&gt;&gt;&gt; eval(a)Traceback (most recent call last): File &quot;&lt;stdin&gt;&quot;, line 1, in &lt;module&gt; File &quot;&lt;string&gt;&quot;, line 1, in &lt;module&gt;NameError: name &#x27;null&#x27; is not defined SOLUTION1&gt;&gt;&gt; json.loads(a) 2018-01-23 ISSUE1SyntaxError: Non-ASCII character &#x27;\\xe4&#x27; in file SOLUTION12# Python将ASCII作为默认的标准编码，要定义源代码编码，必须在源文件中第一行放置一个魔术注释# -*- coding: utf-8 -*- 2017-12-30 ISSUE1Ubuntu安装包时报错 E:Unable to locate package xxx SOLUTION1apt-get update 2017-08-06 ISSUE-refusing to merge unrelated histories1fatal: refusing to merge unrelated histories SOLUTION1git pull origin master --allow-unrelated-histories 2016-03-16 ISSUE-端口占用无法启动Apache 12XAMPP: Starting Apache...fail.XAMPP: Another web server is already running. SOLUTION123in bash：// killed Apache server that was pre-installed on MAC OS X.sudo apachectl stop 2014-04-24 ISSUE12E/AndroidRuntime(439): Caused by: java.lang.ClassCastException: android.app SOLUTION 原因：应用的程序名称没指定具体的Application的类 步骤 在AndroidManifest.xml中的Application标签中添加名字&lt;application android:name=&quot;com.shelling.ans.AnsApplication&quot; Progject-&gt;clean 重新运行","raw":null,"content":null},{"title":"tags","date":"2020-04-28T09:12:02.000Z","updated":"2020-04-29T15:01:32.000Z","comments":true,"path":"tags/index.html","permalink":"https://mumu-1005.github.io/pishon/tags/index.html","excerpt":"","keywords":null,"text":"","raw":null,"content":null},{"title":"资源分享","date":"2016-02-03T12:10:35.000Z","updated":"2021-03-26T07:10:03.654Z","comments":true,"path":"share/index.html","permalink":"https://mumu-1005.github.io/pishon/share/index.html","excerpt":"","keywords":null,"text":"密钥 iState Menus - Email: 982092332@qq.com - SN: GAWAE-FCWQ3-P8NYB-C7GF7-NEDRT-Q5DTB-MFZG6-6NEQC-CRMUD-8MZ2K-66SRB-SU8EW-EDLZ9-TGH3S-8SGA VMware-Fusion-11 XKZYV-PK9CC-A1Y0X-K5HZL-Y65ZV OmniGraffle 7 Mac 账号：Appked 密码：MFWG-GHEB-HYTW-CGHT-CSXU-QCNC-SXU 书籍清单 航天系列 - 《小卫星星务管理技术》小红书 - 《星务小卫星技术》新版 - 《航天甲子年50讲》 架构系列 - 《微服务架构设计模式》 - 《企业应用架构模式》 - 《设计模式:可复用面向对象软件的基础》 - 《重构:改善既有代码的设计》 - 《Head First 设计模式》 Python系列 - 《Python语言参考》 - 《流畅的Python》 数据库系列 - 《高性能MySQL》 - 《MongoDB权威指南》 - 《Redis实战》 DevOps系列 - 《SRE Google运维解密》 软件工程 - 《人月神话》 - 《实现领域驱动设计》 - 《实现模式》 - 《代码整洁之道》 - 《程序员的职业素养》 - 《UML和模式应用》 - 《Thinking in UML》 - 《编写有效用例》 程序员热情探索 - 《数学之美》","raw":null,"content":null},{"title":"工具","date":"2016-07-05T12:10:41.000Z","updated":"2020-04-29T08:54:52.000Z","comments":true,"path":"tools/index.html","permalink":"https://mumu-1005.github.io/pishon/tools/index.html","excerpt":"","keywords":null,"text":"自定义工具 终端nano实现Mac支持ntfs磁盘读写 iMac自助加内存官方教程 蓝灯使用指南","raw":null,"content":null}],"posts":[{"title":"redis 4.2.0 merged aioredis-迁移小计","slug":"redis4-2-0包含aioredis-迁移小计","date":"2022-03-24T12:21:57.000Z","updated":"2022-03-24T12:21:57.000Z","comments":false,"path":"/articles/redis4-2-0包含aioredis-迁移小计.html","link":"","permalink":"https://mumu-1005.github.io/pishon/articles/redis4-2-0%E5%8C%85%E5%90%ABaioredis-%E8%BF%81%E7%A7%BB%E5%B0%8F%E8%AE%A1.html","excerpt":"","keywords":null,"text":"redis-py Add Async Support #1899https://github.com/redis/redis-py/pull/1899 redis-py Version 4.2.0-rc1https://github.com/redis/redis-py/releases/tag/v4.2.0rc1 aioredis-pyhttps://github.com/aio-libs/aioredis-py 代码迁移 — 从调用aioredis迁移到redis123456789101112131415# 引入库import aioredis # delimport redis.asyncio as redis # addfrom aioredis.exceptions import DataError, ResponseError # oldfrom redis.exceptions import DataError, ResponseError # add# 建立连接pool = aioredis.ConnectionPool.from_url(url, decode_responses=True) # delconnection = aioredis.Redis(connection_pool=pool) # delpool = redis.ConnectionPool.from_url(url, decode_responses=True) # addconnection = redis.Redis(connection_pool=pool) # add","raw":null,"content":null,"categories":[{"name":"REDIS","slug":"REDIS","permalink":"https://mumu-1005.github.io/pishon/categories/REDIS/"}],"tags":[{"name":"nosql","slug":"nosql","permalink":"https://mumu-1005.github.io/pishon/tags/nosql/"},{"name":"migrate","slug":"migrate","permalink":"https://mumu-1005.github.io/pishon/tags/migrate/"},{"name":"aioredis","slug":"aioredis","permalink":"https://mumu-1005.github.io/pishon/tags/aioredis/"},{"name":"asyncio","slug":"asyncio","permalink":"https://mumu-1005.github.io/pishon/tags/asyncio/"}]},{"title":"航天甲子50讲笔记","slug":"航天甲子年50讲笔记","date":"2021-03-22T09:23:59.000Z","updated":"2021-03-22T09:23:59.000Z","comments":false,"path":"/articles/航天甲子年50讲笔记.html","link":"","permalink":"https://mumu-1005.github.io/pishon/articles/%E8%88%AA%E5%A4%A9%E7%94%B2%E5%AD%90%E5%B9%B450%E8%AE%B2%E7%AC%94%E8%AE%B0.html","excerpt":"","keywords":null,"text":"","raw":null,"content":null,"categories":[{"name":"航天","slug":"航天","permalink":"https://mumu-1005.github.io/pishon/categories/%E8%88%AA%E5%A4%A9/"}],"tags":[]},{"title":"PSQL序","slug":"psql序","date":"2019-08-26T15:53:18.000Z","updated":"2019-08-26T15:53:18.000Z","comments":false,"path":"/articles/psql序.html","link":"","permalink":"https://mumu-1005.github.io/pishon/articles/psql%E5%BA%8F.html","excerpt":"psql常用命令","keywords":null,"text":"psql常用命令 切换到postgres用户进入数据库控制台hightlight:true1sudo -u postgres psql 创建新数据库hightlight:true1create database newdbname [owner username] 赋予用户数据库所有权限hightlight:true1grant all privileges on database dbname to username 更改数据库ownerhightlight:true1alter database dbname owner to username 查看所有数据库列表hightlight:true1\\l 连接数据库hightlight:true1\\c dbname 显示所有的schemahightlight:true1\\dn 显示所有的用户hightlight:true1\\du 显示表的权限分配情况hightlight:true1\\dp 显示当前的模式hightlight:true1show search_path 更改模式hightlight:true1set search_path to myschema 已列的形式展示或取消hightlight:true1\\x 查看所有表hightlight:true1\\dt 显示执行时间hightlight:true1\\timing on 关闭显示执行时间hightlight:true1\\timing off 禁用全表扫描hightlight:true12alter role rolename set enable_seqscan = off;set enable_seqscan = off;","raw":null,"content":null,"categories":[{"name":"SQL","slug":"SQL","permalink":"https://mumu-1005.github.io/pishon/categories/SQL/"}],"tags":[{"name":"tools","slug":"tools","permalink":"https://mumu-1005.github.io/pishon/tags/tools/"},{"name":"Postgre SQL","slug":"Postgre-SQL","permalink":"https://mumu-1005.github.io/pishon/tags/Postgre-SQL/"}]},{"title":"PSQL COMMANDS","slug":"PsqlCommands","date":"2019-04-27T14:49:59.000Z","updated":"2019-04-27T14:49:59.000Z","comments":false,"path":"/articles/PsqlCommands.html","link":"","permalink":"https://mumu-1005.github.io/pishon/articles/PsqlCommands.html","excerpt":"psql控制台所有命令","keywords":null,"text":"psql控制台所有命令 General1234567891011121314151617181920212223\\copyright # show PostgreSQL usage and distribution terms\\errverbose # show most recent error message at maximum verbosity\\g [FILE] or ; # execute query (and send results to file or |pipe)\\gexec # execute query, then execute each value in its result\\gset [PREFIX] # execute query and store results in psql variables\\q # quit psql\\crosstabview [COLUMNS] # execute query and display results in crosstab\\watch [SEC] # execute query every SEC seconds Help1234567891011\\? [commands] # show help on backslash commands\\? options # show help on psql command-line options\\? variables # show help on special variables\\h [NAME] # help on syntax of SQL commands, * for all commands Query Buffer1234567891011121314151617181920\\e [FILE] [LINE] # edit the query buffer (or file) with external editor\\ef [FUNCNAME [LINE]] # edit function definition with external editor\\ev [VIEWNAME [LINE]] # edit view definition with external editor\\p # show the contents of the query buffer\\r # reset (clear) the query buffer\\s [FILE] # display history or save it to file\\w FILE # write query buffer to file Input&#x2F;Output1234567891011121314151617\\copy ... # perform SQL COPY with data stream to the client host\\echo [STRING] # write string to standard output\\i FILE # execute commands from file\\ir FILE # as \\i, but relative to location of current script\\o [FILE] # send all query results to file or |pipe\\qecho [STRING] # write string to query output stream (see \\o) Informational123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124(options: S = show system objects, + = additional detail)\\d[S+] # list tables, views, and sequences\\d[S+] NAME # describe table, view, sequence, or index\\da[S] [PATTERN] # list aggregates\\dA[+] [PATTERN] # list access methods\\db[+] [PATTERN] # list tablespaces\\dc[S+] [PATTERN] # list conversions\\dC[+] [PATTERN] # list casts\\dd[S] [PATTERN] # show object descriptions not displayed elsewhere\\ddp [PATTERN] # list default privileges\\dD[S+] [PATTERN] # list domains\\det[+] [PATTERN] # list foreign tables\\des[+] [PATTERN] # list foreign servers\\deu[+] [PATTERN] # list user mappings\\dew[+] [PATTERN] # list foreign-data wrappers\\df[antw][S+] [PATRN] # list [only agg/normal/trigger/window] functions\\dF[+] [PATTERN] # list text search configurations\\dFd[+] [PATTERN] # list text search dictionaries\\dFp[+] [PATTERN] # list text search parsers\\dFt[+] [PATTERN] # list text search templates\\dg[S+] [PATTERN] # list roles\\di[S+] [PATTERN] # list indexes\\dl # list large objects, same as \\lo_list\\dL[S+] [PATTERN] # list procedural languages\\dm[S+] [PATTERN] # list materialized views\\dn[S+] [PATTERN] # list schemas\\do[S] [PATTERN] # list operators\\dO[S+] [PATTERN] # list collations\\dp [PATTERN] # list table, view, and sequence access privileges\\drds [PATRN1 [PATRN2]] # list per-database role settings\\ds[S+] [PATTERN] # list sequences\\dt[S+] [PATTERN] # list tables\\dT[S+] [PATTERN] # list data types\\du[S+] [PATTERN] # list roles\\dv[S+] [PATTERN] # list views\\dE[S+] [PATTERN] # list foreign tables\\dx[+] [PATTERN] # list extensions\\dy [PATTERN] # list event triggers\\l[+] [PATTERN] # list databases\\sf[+] FUNCNAME # show a function&#x27;s definition\\sv[+] VIEWNAME # show a view&#x27;s definition\\z [PATTERN] # same as \\dp Formatting12345678910111213141516171819202122232425262728\\a # toggle between unaligned and aligned output mode\\C [STRING] # set table title, or unset if none\\f [STRING] # show or set field separator for unaligned query output\\H # toggle HTML output mode (currently off)\\pset [NAME [VALUE]] # set table output option# (NAME := &#123;border|columns|expanded|fieldsep|fieldsep_zero|# footer|format|linestyle|null|numericlocale|pager|# pager_min_lines|recordsep|recordsep_zero|tableattr|title|# tuples_only|unicode_border_linestyle|# unicode_column_linestyle|unicode_header_linestyle&#125;)\\t [on|off] # show only rows (currently off)\\T [STRING] # set HTML &lt;table&gt; tag attributes, or unset if none\\x [on|off|auto] # toggle expanded output (currently off) Connection1234567891011\\c[onnect] &#123;[DBNAME|- USER|- HOST|- PORT|-] | conninfo&#125;# connect to new database (currently &quot;crm_online_test&quot;)\\encoding [ENCODING] # show or set client encoding\\password [USERNAME] # securely change the password for a user\\conninfo # display information about current connection Operating System1234567891011\\cd [DIR] # change the current working directory\\setenv NAME [VALUE] # set or unset environment variable\\timing [on|off] # toggle timing of commands (currently on)\\! [COMMAND] # execute command in shell or start interactive shell Variables12345678\\prompt [TEXT] NAME # prompt user to set internal variable\\set [NAME [VALUE]] # set internal variable, or list all if no parameters\\unset NAME # unset (delete) internal variable Large Objects12345678\\lo_export LOBOID FILE\\lo_import FILE [COMMENT]\\lo_list\\lo_unlink LOBOID # large object operations","raw":null,"content":null,"categories":[{"name":"SQL","slug":"SQL","permalink":"https://mumu-1005.github.io/pishon/categories/SQL/"}],"tags":[{"name":"tools","slug":"tools","permalink":"https://mumu-1005.github.io/pishon/tags/tools/"},{"name":"Postgre SQL","slug":"Postgre-SQL","permalink":"https://mumu-1005.github.io/pishon/tags/Postgre-SQL/"}]},{"title":"SQL Commands","slug":"commands","date":"2019-04-27T08:14:59.000Z","updated":"2022-03-28T15:06:54.182Z","comments":false,"path":"/articles/commands.html","link":"","permalink":"https://mumu-1005.github.io/pishon/articles/commands.html","excerpt":"SQL所有命令","keywords":null,"text":"SQL所有命令 全览图 命令表 ABORT COMMENT DECLARE EXECUTE ALTER AGGREGATE COMMIT DELETE EXPLAIN ALTER COLLATION COMMIT PREPARED DISCARD FETCH ALTER CONVERSION COPY DO GRANT ALTER DATABASE CREATE ACCESS METHOD DROP ACCESS METHOD IMPORT FOREIGN SCHEMA ALTER DEFAULT PRIVILEGES CREATE AGGREGATE DROP AGGREGATE INSERT ALTER DOMAIN CREATE CAST DROP CAST LISTEN ALTER EVENT TRIGGER CREATE COLLATION DROP COLLATION LOAD ALTER EXTENSION CREATE CONVERSION DROP CONVERSION LOCK ALTER FOREIGN DATA WRAPPER CREATE DATABASE DROP DATABASE MOVE ALTER FOREIGN TABLE CREATE DOMAIN DROP DOMAIN NOTIFY ALTER FUNCTION CREATE EVENT TRIGGER DROP EVENT TRIGGER PREPARE ALTER GROUP CREATE EXTENSION DROP EXTENSION PREPARE TRANSACTION ALTER INDEX CREATE FOREIGN DATA WRAPPER DROP FOREIGN DATA WRAPPER REASSIGN OWNED ALTER LANGUAGE CREATE FOREIGN TABLE DROP FOREIGN TABLE REFRESH MATERIALIZED VIEW ALTER LARGE OBJECT CREATE FUNCTION DROP FUNCTION REINDEX ALTER MATERIALIZED VIEW CREATE GROUP DROP GROUP RELEASE SAVEPOINT ALTER OPERATOR CREATE INDEX DROP INDEX RESET ALTER OPERATOR CLASS CREATE LANGUAGE DROP LANGUAGE REVOKE ALTER OPERATOR FAMILY CREATE MATERIALIZED VIEW DROP MATERIALIZED VIEW ROLLBACK ALTER POLICY CREATE OPERATOR DROP OPERATOR ROLLBACK PREPARED ALTER ROLE CREATE OPERATOR CLASS DROP OPERATOR CLASS ROLLBACK TO SAVEPOINT ALTER RULE CREATE OPERATOR FAMILY DROP OPERATOR FAMILY SAVEPOINT ALTER SCHEMA CREATE POLICY DROP OWNED SECURITY LABEL ALTER SEQUENCE CREATE ROLE DROP POLICY SELECT ALTER SERVER CREATE RULE DROP ROLE SELECT INTO ALTER SYSTEM CREATE SCHEMA DROP RULE SET ALTER TABLE CREATE SEQUENCE DROP SCHEMA SET CONSTRAINTS ALTER TABLESPACE CREATE SERVER DROP SEQUENCE SET ROLE ALTER TEXT SEARCH CONFIGURATION CREATE TABLE DROP SERVER SET SESSION AUTHORIZATION ALTER TEXT SEARCH DICTIONARY CREATE TABLE AS DROP TABLE SET TRANSACTION ALTER TEXT SEARCH PARSER CREATE TABLESPACE DROP TABLESPACE SHOW ALTER TEXT SEARCH TEMPLATE CREATE TEXT SEARCH CONFIGURATION DROP TEXT SEARCH CONFIGURATION START TRANSACTION ALTER TRIGGER CREATE TEXT SEARCH DICTIONARY DROP TEXT SEARCH DICTIONARY TABLE ALTER TYPE CREATE TEXT SEARCH PARSER DROP TEXT SEARCH PARSER TRUNCATE ALTER USER CREATE TEXT SEARCH TEMPLATE DROP TEXT SEARCH TEMPLATE UNLISTEN ALTER USER MAPPING CREATE TRANSFORM DROP TRANSFORM UPDATE ALTER VIEW CREATE TRIGGER DROP TRIGGER VACUUM ANALYZE CREATE TYPE DROP TYPE VALUES BEGIN CREATE USER DROP USER WITH CHECKPOINT CREATE USER MAPPING DROP USER MAPPING CLOSE CREATE VIEW DROP VIEW CLUSTER DEALLOCATE END","raw":null,"content":null,"categories":[{"name":"SQL","slug":"SQL","permalink":"https://mumu-1005.github.io/pishon/categories/SQL/"}],"tags":[{"name":"tools","slug":"tools","permalink":"https://mumu-1005.github.io/pishon/tags/tools/"}]},{"title":"Lantern","slug":"lantern","date":"2019-04-24T03:33:53.000Z","updated":"2019-04-26T03:33:53.000Z","comments":false,"path":"/articles/lantern.html","link":"","permalink":"https://mumu-1005.github.io/pishon/articles/lantern.html","excerpt":"免费使用蓝灯指南","keywords":null,"text":"免费使用蓝灯指南 操作界面 每个月开放免费的高速流量有500M足够平常的代码更新下载，Facebook、Twitter、Instagram的使用，如果大量访问YouTube 估计就得升级专业版了 下载地址https://github.com/getlantern/download 结合自己的系统下载对应的版本进行安装即可 设置管理 取消勾选开机自动启动 有的时候免费线路信号不好，连接不上，会影响原本网络的正常使用，所以在需要用到的时候再开启蓝灯，点击连接。","raw":null,"content":null,"categories":[{"name":"TOOLS","slug":"TOOLS","permalink":"https://mumu-1005.github.io/pishon/categories/TOOLS/"}],"tags":[{"name":"tools","slug":"tools","permalink":"https://mumu-1005.github.io/pishon/tags/tools/"}]},{"title":"终端nano实现Mac支持ntfs磁盘读写","slug":"终端nano实现Mac支持ntfs磁盘读写","date":"2019-01-28T07:05:26.000Z","updated":"2019-01-28T07:05:26.000Z","comments":false,"path":"/articles/终端nano实现Mac支持ntfs磁盘读写.html","link":"","permalink":"https://mumu-1005.github.io/pishon/articles/%E7%BB%88%E7%AB%AFnano%E5%AE%9E%E7%8E%B0Mac%E6%94%AF%E6%8C%81ntfs%E7%A3%81%E7%9B%98%E8%AF%BB%E5%86%99.html","excerpt":"无需安装第三方软件（如：Paragon NTFS、Mounty）实现Mac支持ntfs磁盘读写","keywords":null,"text":"无需安装第三方软件（如：Paragon NTFS、Mounty）实现Mac支持ntfs磁盘读写 无需安装第三方软件（如：Paragon NTFS、Mounty）实现Mac支持ntfs磁盘读写 之前已经实现了cc盘的可读写挂载，现在进行另外三个盘的修改 先获取三个磁盘的UUID关于本机 选取 系统报告 记下磁盘对应的UUID 在nano中添加设置在终端输入sudo nano &#x2F;etc&#x2F;fstab 进入编辑界面 现在你看到了一个编辑界面 分别输入三个磁盘的设置 UUID&#x3D;硬盘对应的UUID号码 none ntfs rw,auto,nobrowse 换行回车 Ctrl+X保存 确认保存操作 敲击Y 回车 退出当前编辑窗口 设置成功 查看磁盘读写效果推出磁盘 重新插入，发现Finder中没有显示这几个盘Finder左上角工具栏中选择 前往 -&gt; 前往文件夹输入&#x2F;Volumes&#x2F; 出现所有的磁盘信息 将磁盘拉到左边边栏列表中 设置磁盘快捷访问 查看效果 已经可以进行写操作了","raw":null,"content":null,"categories":[{"name":"TOOLS","slug":"TOOLS","permalink":"https://mumu-1005.github.io/pishon/categories/TOOLS/"}],"tags":[{"name":"tools","slug":"tools","permalink":"https://mumu-1005.github.io/pishon/tags/tools/"},{"name":"macOS","slug":"macOS","permalink":"https://mumu-1005.github.io/pishon/tags/macOS/"},{"name":"NTFS","slug":"NTFS","permalink":"https://mumu-1005.github.io/pishon/tags/NTFS/"}]},{"title":"Supervisor配置管理Python项目","slug":"Supervisor配置管理Python项目","date":"2018-11-21T08:42:31.000Z","updated":"2018-11-21T08:42:31.000Z","comments":false,"path":"/articles/Supervisor配置管理Python项目.html","link":"","permalink":"https://mumu-1005.github.io/pishon/articles/Supervisor%E9%85%8D%E7%BD%AE%E7%AE%A1%E7%90%86Python%E9%A1%B9%E7%9B%AE.html","excerpt":"Supervisor配置uwsgi基础示例，附加进程管理控制台常用命令","keywords":null,"text":"Supervisor配置uwsgi基础示例，附加进程管理控制台常用命令 supervisord.confhightlight:true1234567891011121314151617181920212223242526272829303132333435363738394041424344454647[unix_http_server]file=/tmp/supervisor.sock ; (the path to the socket file)chmod=0700 ; socket file mode (default 0700)[inet_http_server] ; inet (TCP) server disabled by defaultport=*:8001username=your_username ; (default is no username (open server))password=your_password ; (default is no password (open server))[supervisord]logfile=/tmp/supervisord.log ; (main log file;default $CWD/supervisord.log)logfile_maxbytes=50MB ; (max main logfile bytes b4 rotation;default 50MB)logfile_backups=10 ; (num of main logfile rotation backups;default 10)loglevel=info ; (log level;default info; others: debug,warn,trace)pidfile=/tmp/supervisord.pid ; (supervisord pidfile;default supervisord.pid)nodaemon=false ; (start in foreground if true;default false)minfds=1024 ; (min. avail startup file descriptors;default 1024)minprocs=200 ; (min. avail process descriptors;default 200)environment=MONGO_URL=&quot;mongodb://reminder:geN-aud-veff@127.0.0.1:27017/reminder&quot;[rpcinterface:supervisor]supervisor.rpcinterface_factory = supervisor.rpcinterface:make_main_rpcinterface[supervisorctl]serverurl=unix:///tmp/supervisor.sock ; use a unix:// URL for a unix socket[program:program_name]directory=/program_dircommand=uwsgi -w program_name_product --ini program_name.ini --uid rolestartsecs=2numproces=2stopasgroup=trueautostart=falseautorestart=truestderr_logfile=/tmp/log/program_name_error.logstdout_logfile=/tmp/log/program_name_access.log[program:program_name_n]directory=/program_n_dircommand=command_nstartsecs=2numproces=2stopasgroup=trueautostart=falseautorestart=truestderr_logfile=/tmp/log/program_name_n_error.logstdout_logfile=/tmp/log/program_name_n_access.log 进程管理控制台常用命令hightlight:true123456789101112131415161718192021222324- supervisorctl # 进入控制台- start all # 启动配置文件中的所有进程- stop all # 停止配置文件中的所有进程- restart all # 重启配置文件中的所有进程- start program_name # 启动进程- stop program_name # 停止进程- restart program_name # 重启进程- start groupworker: # 启动所有属于名为 groupworker 这个分组的进程- stop groupworker: # 结束所有属于名为 groupworker 这个分组的进程- restart groupworker: # 重启所有属于名为 groupworker 这个分组的进程- start groupworker:name1 # 启动 groupworker:name1 这个进程- stop groupworker:name1 # 结束 groupworker:name1 这个进程 - restart groupworker:name1 # 重启 groupworker:name1 这个进程- reload # 载入最新的配置文件，停止原有进程并按新的配置启动、管理所有进程- update # 根据最新的配置文件，启动新配置或有改动的进程，配置没有改动的进程不会受影响而重启遇到问题注：start、restartUnlinking stale socket /tmp/supervisor.sock、stop 都不会载入最新的配置文件- exit # 退出supervisor控制台","raw":null,"content":null,"categories":[{"name":"SERVER","slug":"SERVER","permalink":"https://mumu-1005.github.io/pishon/categories/SERVER/"}],"tags":[{"name":"Python","slug":"Python","permalink":"https://mumu-1005.github.io/pishon/tags/Python/"},{"name":"Supervisor","slug":"Supervisor","permalink":"https://mumu-1005.github.io/pishon/tags/Supervisor/"}]},{"title":"Nginx+uWSGI部署多个Django项目","slug":"nginx-uwsgi","date":"2018-11-21T03:02:33.000Z","updated":"2018-11-21T03:12:33.000Z","comments":false,"path":"/articles/nginx-uwsgi.html","link":"","permalink":"https://mumu-1005.github.io/pishon/articles/nginx-uwsgi.html","excerpt":"","keywords":null,"text":"uWSGI配置project_1 的 uWSGI 的配置文件 project_1.ini123456789101112131415161718[uwsgi]chdir = /project_1/module = project_1.wsgimaster = trueprocesses = 10socket = /project_1/project_1.sockchmod-socket = 666chown-socket = role_1:role_1enable-threads=truedie-on-term = true project_n 的 uWSGI 的配置文件 project_n.ini123456789101112131415161718[uwsgi]chdir = /project_n/module = project_n.wsgimaster = trueprocesses = 10socket = /project_n/project_n.sockchmod-socket = 666chown-socket = role_n:role_nenable-threads=truedie-on-term = true Nginx配置nginx.conf12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758server &#123; listen 80; root /usr/share/nginx/www/public; index index.php index.html index.htm; server_name 127.0.0.1 x.x.x.x; include blocksip.conf; location / &#123; try_files $uri $uri/ /index.html; &#125; error_page 404 /404.html; location /project_1 &#123; include uwsgi_params; # the uwsgi_params file you installed uwsgi_pass unix:/project_1/project_1.sock; uwsgi_param SCRIPT_NAME /project_1; uwsgi_param UWSGI_SCRIPT project_1.wsgi; uwsgi_modifier1 30; uwsgi_read_timeout 1800s; uwsgi_send_timeout 1800s; &#125; location /project_1/media/ &#123; alias /usr/share/nginx/www/django_static/project_1/media/; &#125; location /project_1/static/ &#123; alias /usr/share/nginx/www/django_static/project_1/; &#125; location /apk/ &#123; alias /usr/share/nginx/www/django_static/project_1/apk/online/; &#125; location /project_n &#123; include uwsgi_params; # the uwsgi_params file you installed uwsgi_pass unix:/project_n/project_n.sock; uwsgi_param SCRIPT_NAME /project_n; uwsgi_param UWSGI_SCRIPT project_n.wsgi; uwsgi_modifier1 30; uwsgi_read_timeout 1800s; uwsgi_send_timeout 1800s; &#125; location /project_n/media/ &#123; alias /usr/share/nginx/www/django_static/project_n/media/; &#125; location /project_n/static/ &#123; alias /usr/share/nginx/www/django_static/project_n/; &#125; location /apk_project_n/ &#123; alias /usr/share/nginx/www/django_static/project_n/apk/online/; &#125;&#125;","raw":null,"content":null,"categories":[{"name":"SERVER","slug":"SERVER","permalink":"https://mumu-1005.github.io/pishon/categories/SERVER/"}],"tags":[{"name":"Nginx","slug":"Nginx","permalink":"https://mumu-1005.github.io/pishon/tags/Nginx/"},{"name":"uWSGI","slug":"uWSGI","permalink":"https://mumu-1005.github.io/pishon/tags/uWSGI/"}]},{"title":"django后台运行","slug":"django后台运行","date":"2018-10-21T08:21:25.000Z","updated":"2018-10-21T08:21:25.000Z","comments":false,"path":"/articles/django后台运行.html","link":"","permalink":"https://mumu-1005.github.io/pishon/articles/django%E5%90%8E%E5%8F%B0%E8%BF%90%E8%A1%8C.html","excerpt":"","keywords":null,"text":"生效命令12345nohup python manage.py runserver &amp; #后台运行django serverexit #退出控制台tail -f nohup.out #监控运行过程中的输出 命令解释12345nohup # (no hang up) 不挂断地运行命令&amp; # 在后台运行命令nohup.out # 会自动在当前目录创建该文件，记录原控制台输出内容","raw":null,"content":null,"categories":[{"name":"PYTHON","slug":"PYTHON","permalink":"https://mumu-1005.github.io/pishon/categories/PYTHON/"}],"tags":[{"name":"Python","slug":"Python","permalink":"https://mumu-1005.github.io/pishon/tags/Python/"},{"name":"Django","slug":"Django","permalink":"https://mumu-1005.github.io/pishon/tags/Django/"}]},{"title":"OS.PATH","slug":"os-path","date":"2018-08-01T06:59:53.000Z","updated":"2019-01-01T11:59:53.000Z","comments":false,"path":"/articles/os-path.html","link":"","permalink":"https://mumu-1005.github.io/pishon/articles/os-path.html","excerpt":"","keywords":null,"text":"1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556- __all__- __builtins__- __cached__- __doc__- __file__- __loader__- __name__- __package__- __spec__- _get_sep- _joinrealpath- _varprog- _varprogb- abspath- altsep- basename- commonpath- commonprefix- curdir- defpath- devnull- dirname- exists- expanduser- expandvars- extsep- genericpath- getatime- getctime- getmtime- getsize- isabs- isdir- isfile- islink- ismount- join- lexists- normcase- normpath- os- pardir- pathsep- realpath- relpath- samefile- sameopenfile- samestat- sep- split- splitdrive- splitext- stat- supports_unicode_filenames- sys","raw":null,"content":null,"categories":[{"name":"PYTHON","slug":"PYTHON","permalink":"https://mumu-1005.github.io/pishon/categories/PYTHON/"}],"tags":[{"name":"os","slug":"os","permalink":"https://mumu-1005.github.io/pishon/tags/os/"}]},{"title":"数据分析","slug":"数据分析","date":"2018-07-06T04:05:56.000Z","updated":"2022-03-27T09:38:01.664Z","comments":false,"path":"/articles/数据分析.html","link":"","permalink":"https://mumu-1005.github.io/pishon/articles/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90.html","excerpt":"","keywords":null,"text":"自定义数据清洗 ngram模型","raw":null,"content":null,"categories":[{"name":"PYTHON","slug":"PYTHON","permalink":"https://mumu-1005.github.io/pishon/categories/PYTHON/"}],"tags":[{"name":"Python","slug":"Python","permalink":"https://mumu-1005.github.io/pishon/tags/Python/"}]},{"title":"uwsgi命令","slug":"uwsgi-help","date":"2018-05-05T03:00:38.000Z","updated":"2019-02-05T13:00:02.000Z","comments":false,"path":"/articles/uwsgi-help.html","link":"","permalink":"https://mumu-1005.github.io/pishon/articles/uwsgi-help.html","excerpt":"","keywords":null,"text":"UWSGI-CORE12NAME - uwsgi-core - fast (pure C), self-healing, developer-friendly WSGI server User |--socket bind to the specified UNIX/TCP socket using default protocol 指定socket，使用默认协议-s|--uwsgi-socket bind to the specified UNIX/TCP socket using uwsgi protocol 指定socket，使用uwsgi协议--suwsgi-socket bind to the specified UNIX/TCP socket using uwsgi protocol over SSL 指定socket，使用uwsgi绑定通过SSL安全套接字层--ssl-socket bind to the specified UNIX/TCP socket using uwsgi protocol over SSL 指定socket，使用uwsgi协议通过SSL安全套接字层--http-socket bind to the specified UNIX/TCP socket using HTTP protocol 指定socket，使用HTTP协议--http-socket-modifier1 force the specified modifier1 when using HTTP protocol--http-socket-modifier2 force the specified modifier2 when using HTTP protocol--https-socket bind to the specified UNIX/TCP socket using HTTPS protocol--https-socket-modifier1 force the specified modifier1 when using HTTPS protocol--https-socket-modifier2 force the specified modifier2 when using HTTPS protocol--fastcgi-socket bind to the specified UNIX/TCP socket using FastCGI protocol--fastcgi-nph-socket bind to the specified UNIX/TCP socket using FastCGI protocol (nph mode)--fastcgi-modifier1 force the specified modifier1 when using FastCGI protocol--fastcgi-modifier2 force the specified modifier2 when using FastCGI protocol--scgi-socket bind to the specified UNIX/TCP socket using SCGI protocol--scgi-nph-socket bind to the specified UNIX/TCP socket using SCGI protocol (nph mode)--scgi-modifier1 force the specified modifier1 when using SCGI protocol--scgi-modifier2 force the specified modifier2 when using SCGI protocol--raw-socket bind to the specified UNIX/TCP socket using RAW protocol--raw-modifier1 force the specified modifier1 when using RAW protocol--raw-modifier2 force the specified modifier2 when using RAW protocol--puwsgi-socket bind to the specified UNIX/TCP socket using persistent uwsgi protocol (puwsgi)--protocol force the specified protocol for default sockets--socket-protocol force the specified protocol for default sockets--shared-socket create a shared socket for advanced jailing or ipc--undeferred-shared-socket create a shared socket for advanced jailing or ipc (undeferred mode)-p|--processes spawn the specified number of workers/processes-p|--workers spawn the specified number of workers/processes--thunder-lock serialize accept() usage (if possible)-t|--harakiri set harakiri timeout--harakiri-verbose enable verbose mode for harakiri--harakiri-no-arh do not enable harakiri during after-request-hook--no-harakiri-arh do not enable harakiri during after-request-hook--no-harakiri-after-req-hook do not enable harakiri during after-request-hook--backtrace-depth set backtrace depth--mule-harakiri set harakiri timeout for mule tasks-x|--xmlconfig load config from xml file-x|--xml load config from xml file--config load configuration using the pluggable system--fallback-config re-exec uwsgi with the specified config when exit code is 1--strict enable strict mode (placeholder cannot be used)--skip-zero skip check of file descriptor 0--skip-atexit skip atexit hooks (ignored by the master)--skip-atexit-teardown skip atexit teardown (ignored by the master)-S|--set set a placeholder or an option--set-placeholder set a placeholder--set-ph set a placeholder--get print the specified option value and exit--declare-option declare a new uWSGI custom option--declare-option2 declare a new uWSGI custom option (non-immediate)--resolve place the result of a dns query in the specified placeholder, sytax: placeholder=name (immediate option)--for (opt logic) for cycle--for-glob (opt logic) for cycle (expand glob)--for-times (opt logic) for cycle (expand the specified num to a list starting from 1)--for-readline (opt logic) for cycle (expand the specified file to a list of lines)--endfor (opt logic) end for cycle--end-for (opt logic) end for cycle--if-opt (opt logic) check for option--if-not-opt (opt logic) check for option--if-env (opt logic) check for environment variable--if-not-env (opt logic) check for environment variable--ifenv (opt logic) check for environment variable--if-reload (opt logic) check for reload--if-not-reload (opt logic) check for reload--if-hostname (opt logic) check for hostname--if-not-hostname (opt logic) check for hostname--if-hostname-match (opt logic) try to match hostname against a regular expression--if-not-hostname-match (opt logic) try to match hostname against a regular expression--if-exists (opt logic) check for file/directory existence--if-not-exists (opt logic) check for file/directory existence--ifexists (opt logic) check for file/directory existence--if-plugin (opt logic) check for plugin--if-not-plugin (opt logic) check for plugin--ifplugin (opt logic) check for plugin--if-file (opt logic) check for file existance--if-not-file (opt logic) check for file existance--if-dir (opt logic) check for directory existance--if-not-dir (opt logic) check for directory existance--ifdir (opt logic) check for directory existance--if-directory (opt logic) check for directory existance--endif (opt logic) end if--end-if (opt logic) end if--blacklist set options blacklist context--end-blacklist clear options blacklist context--whitelist set options whitelist context--end-whitelist clear options whitelist context--ignore-sigpipe do not report (annoying) SIGPIPE--ignore-write-errors do not report (annoying) write()/writev() errors--write-errors-tolerance set the maximum number of allowed write errors (default: no tolerance)--write-errors-exception-only only raise an exception on write errors giving control to the app itself--disable-write-exception disable exception generation on write()/writev()--inherit use the specified file as config template--include include the specified file as immediate configuration--inject-before inject a text file before the config file (advanced templating)--inject-after inject a text file after the config file (advanced templating)-d|--daemonize daemonize uWSGI--daemonize2 daemonize uWSGI after app loading--stop stop an instance--reload reload an instance--pause pause an instance--suspend suspend an instance--resume resume an instance--connect-and-read connect to a socket and wait for data from it--extract fetch/dump any supported address to stdout-l|--listen set the socket listen queue size-v|--max-vars set the amount of internal iovec/vars structures--max-apps set the maximum number of per-worker applications-b|--buffer-size set internal buffer size-m|--memory-report enable memory report--profiler enable the specified profiler-c|--cgi-mode force CGI-mode for plugins supporting it-a|--abstract-socket force UNIX socket in abstract mode (Linux only)-C|--chmod-socket chmod-socket-C|--chmod chmod-socket--chown-socket chown unix sockets--umask set umask--freebind put socket in freebind mode--map-socket map sockets to specific workers-T|--enable-threads enable threads--no-threads-wait do not wait for threads cancellation on quit/reload--auto-procname automatically set processes name to something meaningful--procname-prefix add a prefix to the process names--procname-prefix-spaced add a spaced prefix to the process names--procname-append append a string to process names--procname set process names--procname-master set master process name-i|--single-interpreter do not use multiple interpreters (where available)--need-app exit if no app can be loaded-M|--master enable master process--honour-stdin do not remap stdin to /dev/null--emperor run the Emperor--emperor-proxy-socket force the vassal to became an Emperor proxy--emperor-wrapper set a binary wrapper for vassals--emperor-wrapper-override set a binary wrapper for vassals to try before the default one--emperor-wrapper-fallback set a binary wrapper for vassals to try as a last resort--emperor-nofollow do not follow symlinks when checking for mtime--emperor-procname set the Emperor process name--emperor-freq set the Emperor scan frequency (default 3 seconds)--emperor-required-heartbeat set the Emperor tolerance about heartbeats--emperor-curse-tolerance set the Emperor tolerance about cursed vassals--emperor-pidfile write the Emperor pid in the specified file--emperor-tyrant put the Emperor in Tyrant mode--emperor-tyrant-nofollow do not follow symlinks when checking for uid/gid in Tyrant mode--emperor-stats run the Emperor stats server--emperor-stats-server run the Emperor stats server--early-emperor spawn the emperor as soon as possibile--emperor-broodlord run the emperor in BroodLord mode--emperor-throttle set throttling level (in milliseconds) for bad behaving vassals (default 1000)--emperor-max-throttle set max throttling level (in milliseconds) for bad behaving vassals (default 3 minutes)--emperor-magic-exec prefix vassals config files with exec:// if they have the executable bit--emperor-on-demand-extension search for text file (vassal name + extension) containing the on demand socket name--emperor-on-demand-ext search for text file (vassal name + extension) containing the on demand socket name--emperor-on-demand-directory enable on demand mode binding to the unix socket in the specified directory named like the vassal + .socket--emperor-on-demand-dir enable on demand mode binding to the unix socket in the specified directory named like the vassal + .socket--emperor-on-demand-exec use the output of the specified command as on demand socket name (the vassal name is passed as the only argument)--emperor-extra-extension allows the specified extension in the Emperor (vassal will be called with --config)--emperor-extra-ext allows the specified extension in the Emperor (vassal will be called with --config)--emperor-no-blacklist disable Emperor blacklisting subsystem--emperor-use-clone use clone() instead of fork() passing the specified unshare() flags--emperor-cap set vassals capability--vassals-cap set vassals capability--vassal-cap set vassals capability--imperial-monitor-list list enabled imperial monitors--imperial-monitors-list list enabled imperial monitors--vassals-inherit add config templates to vassals config (uses --inherit)--vassals-include include config templates to vassals config (uses --include instead of --inherit)--vassals-inherit-before add config templates to vassals config (uses --inherit, parses before the vassal file)--vassals-include-before include config templates to vassals config (uses --include instead of --inherit, parses before the vassal file)--vassals-start-hook run the specified command before each vassal starts--vassals-stop-hook run the specified command after vassal&#x27;s death--vassal-sos ask emperor for reinforcement when overloaded--vassal-sos-backlog ask emperor for sos if backlog queue has more items than the value specified--vassals-set automatically set the specified option (via --set) for every vassal--vassal-set automatically set the specified option (via --set) for every vassal--heartbeat announce healthiness to the emperor--reload-mercy set the maximum time (in seconds) we wait for workers and other processes to die during reload/shutdown--worker-reload-mercy set the maximum time (in seconds) a worker can take to reload/shutdown (default is 60)--mule-reload-mercy set the maximum time (in seconds) a mule can take to reload/shutdown (default is 60)--exit-on-reload force exit even if a reload is requested--die-on-term exit instead of brutal reload on SIGTERM--force-gateway force the spawn of the first registered gateway without a master-h|--help show this help-h|--usage show this help--print-sym print content of the specified binary symbol--print-symbol print content of the specified binary symbol-r|--reaper call waitpid(-1,...) after each request to get rid of zombies-R|--max-requests reload workers after the specified amount of managed requests--min-worker-lifetime number of seconds worker must run before being reloaded (default is 60)--max-worker-lifetime reload workers after the specified amount of seconds (default is disabled)-z|--socket-timeout set internal sockets timeout--no-fd-passing disable file descriptor passing--locks create the specified number of shared locks--lock-engine set the lock engine--ftok set the ipcsem key via ftok() for avoiding duplicates--persistent-ipcsem do not remove ipcsem&#x27;s on shutdown-A|--sharedarea create a raw shared memory area of specified pages (note: it supports keyval too)--safe-fd do not close the specified file descriptor--fd-safe do not close the specified file descriptor--cache create a shared cache containing given elements--cache-blocksize set cache blocksize--cache-store enable persistent cache to disk--cache-store-sync set frequency of sync for persistent cache--cache-no-expire disable auto sweep of expired items--cache-expire-freq set the frequency of cache sweeper scans (default 3 seconds)--cache-report-freed-items constantly report the cache item freed by the sweeper (use only for debug)--cache-udp-server bind the cache udp server (used only for set/update/delete) to the specified socket--cache-udp-node send cache update/deletion to the specified cache udp server--cache-sync copy the whole content of another uWSGI cache server on server startup--cache-use-last-modified update last_modified_at timestamp on every cache item modification (default is disabled)--add-cache-item add an item in the cache--load-file-in-cache load a static file in the cache--load-file-in-cache-gzip load a static file in the cache with gzip compression--cache2 create a new generation shared cache (keyval syntax)--queue enable shared queue--queue-blocksize set queue blocksize--queue-store enable persistent queue to disk--queue-store-sync set frequency of sync for persistent queue-Q|--spooler run a spooler on the specified directory--spooler-external map spoolers requests to a spooler directory managed by an external instance--spooler-ordered try to order the execution of spooler tasks--spooler-chdir chdir() to specified directory before each spooler task--spooler-processes set the number of processes for spoolers--spooler-quiet do not be verbose with spooler tasks--spooler-max-tasks set the maximum number of tasks to run before recycling a spooler--spooler-harakiri set harakiri timeout for spooler tasks--spooler-frequency set spooler frequency--spooler-freq set spooler frequency--mule add a mule--mules add the specified number of mules--farm add a mule farm--mule-msg-size set mule message buffer size--signal send a uwsgi signal to a server--signal-bufsize set buffer size for signal queue--signals-bufsize set buffer size for signal queue--signal-timer add a timer (syntax: &lt;signal&gt; &lt;seconds&gt;)--timer add a timer (syntax: &lt;signal&gt; &lt;seconds&gt;)--signal-rbtimer add a redblack timer (syntax: &lt;signal&gt; &lt;seconds&gt;)--rbtimer add a redblack timer (syntax: &lt;signal&gt; &lt;seconds&gt;)--rpc-max maximum number of rpc slots (default: 64)-L|--disable-logging disable request logging--flock lock the specified file before starting, exit if locked--flock-wait lock the specified file before starting, wait if locked--flock2 lock the specified file after logging/daemon setup, exit if locked--flock-wait2 lock the specified file after logging/daemon setup, wait if locked--pidfile create pidfile (before privileges drop)--pidfile2 create pidfile (after privileges drop)--chroot chroot() to the specified directory--pivot-root pivot_root() to the specified directories (new_root and put_old must be separated with a space)--pivot_root pivot_root() to the specified directories (new_root and put_old must be separated with a space)--uid setuid to the specified user/uid--gid setgid to the specified group/gid--add-gid add the specified group id to the process credentials--immediate-uid setuid to the specified user/uid IMMEDIATELY--immediate-gid setgid to the specified group/gid IMMEDIATELY--no-initgroups disable additional groups set via initgroups()--cap set process capability--unshare unshare() part of the processes and put it in a new namespace--unshare2 unshare() part of the processes and put it in a new namespace after rootfs change--setns-socket expose a unix socket returning namespace fds from /proc/self/ns--setns-socket-skip skip the specified entry when sending setns file descriptors--setns-skip skip the specified entry when sending setns file descriptors--setns join a namespace created by an external uWSGI instance--setns-preopen open /proc/self/ns as soon as possible and cache fds--jailed mark the instance as jailed (force the execution of post_jail hooks)--refork fork() again after privileges drop. Useful for jailing systems--re-fork fork() again after privileges drop. Useful for jailing systems--refork-as-root fork() again before privileges drop. Useful for jailing systems--re-fork-as-root fork() again before privileges drop. Useful for jailing systems--refork-post-jail fork() again after jailing. Useful for jailing systems--re-fork-post-jail fork() again after jailing. Useful for jailing systems--hook-asap run the specified hook as soon as possible--hook-pre-jail run the specified hook before jailing--hook-post-jail run the specified hook after jailing--hook-in-jail run the specified hook in jail after initialization--hook-as-root run the specified hook before privileges drop--hook-as-user run the specified hook after privileges drop--hook-as-user-atexit run the specified hook before app exit and reload--hook-pre-app run the specified hook before app loading--hook-post-app run the specified hook after app loading--hook-post-fork run the specified hook after each fork--hook-accepting run the specified hook after each worker enter the accepting phase--hook-accepting1 run the specified hook after the first worker enters the accepting phase--hook-accepting-once run the specified hook after each worker enter the accepting phase (once per-instance)--hook-accepting1-once run the specified hook after the first worker enters the accepting phase (once per instance)--hook-master-start run the specified hook when the Master starts--hook-touch run the specified hook when the specified file is touched (syntax: &lt;file&gt; &lt;action&gt;)--hook-emperor-start run the specified hook when the Emperor starts--hook-emperor-stop run the specified hook when the Emperor send a stop message--hook-emperor-reload run the specified hook when the Emperor send a reload message--hook-emperor-lost run the specified hook when the Emperor connection is lost--hook-as-vassal run the specified hook before exec()ing the vassal--hook-as-emperor run the specified hook in the emperor after the vassal has been started--hook-as-mule run the specified hook in each mule--hook-as-gateway run the specified hook in each gateway--after-request-hook run the specified function/symbol after each request--after-request-call run the specified function/symbol after each request--exec-asap run the specified command as soon as possible--exec-pre-jail run the specified command before jailing--exec-post-jail run the specified command after jailing--exec-in-jail run the specified command in jail after initialization--exec-as-root run the specified command before privileges drop--exec-as-user run the specified command after privileges drop--exec-as-user-atexit run the specified command before app exit and reload--exec-pre-app run the specified command before app loading--exec-post-app run the specified command after app loading--exec-as-vassal run the specified command before exec()ing the vassal--exec-as-emperor run the specified command in the emperor after the vassal has been started--mount-asap mount filesystem as soon as possible--mount-pre-jail mount filesystem before jailing--mount-post-jail mount filesystem after jailing--mount-in-jail mount filesystem in jail after initialization--mount-as-root mount filesystem before privileges drop--mount-as-vassal mount filesystem before exec()ing the vassal--mount-as-emperor mount filesystem in the emperor after the vassal has been started--umount-asap unmount filesystem as soon as possible--umount-pre-jail unmount filesystem before jailing--umount-post-jail unmount filesystem after jailing--umount-in-jail unmount filesystem in jail after initialization--umount-as-root unmount filesystem before privileges drop--umount-as-vassal unmount filesystem before exec()ing the vassal--umount-as-emperor unmount filesystem in the emperor after the vassal has been started--wait-for-interface wait for the specified network interface to come up before running root hooks--wait-for-interface-timeout set the timeout for wait-for-interface--wait-interface wait for the specified network interface to come up before running root hooks--wait-interface-timeout set the timeout for wait-for-interface--wait-for-iface wait for the specified network interface to come up before running root hooks--wait-for-iface-timeout set the timeout for wait-for-interface--wait-iface wait for the specified network interface to come up before running root hooks--wait-iface-timeout set the timeout for wait-for-interface--wait-for-fs wait for the specified filesystem item to appear before running root hooks--wait-for-file wait for the specified file to appear before running root hooks--wait-for-dir wait for the specified directory to appear before running root hooks--wait-for-mountpoint wait for the specified mountpoint to appear before running root hooks--wait-for-fs-timeout set the timeout for wait-for-fs/file/dir--wait-for-socket wait for the specified socket to be ready before loading apps--wait-for-socket-timeout set the timeout for wait-for-socket--call-asap call the specified function as soon as possible--call-pre-jail call the specified function before jailing--call-post-jail call the specified function after jailing--call-in-jail call the specified function in jail after initialization--call-as-root call the specified function before privileges drop--call-as-user call the specified function after privileges drop--call-as-user-atexit call the specified function before app exit and reload--call-pre-app call the specified function before app loading--call-post-app call the specified function after app loading--call-as-vassal call the specified function() before exec()ing the vassal--call-as-vassal1 call the specified function(char *) before exec()ing the vassal--call-as-vassal3 call the specified function(char *, uid_t, gid_t) before exec()ing the vassal--call-as-emperor call the specified function() in the emperor after the vassal has been started--call-as-emperor1 call the specified function(char *) in the emperor after the vassal has been started--call-as-emperor2 call the specified function(char *, pid_t) in the emperor after the vassal has been started--call-as-emperor4 call the specified function(char *, pid_t, uid_t, gid_t) in the emperor after the vassal has been started--ini load config from ini file-y|--yaml load config from yaml file-y|--yml load config from yaml file-j|--json load config from json file-j|--js load config from json file--weight weight of the instance (used by clustering/lb/subscriptions)--auto-weight set weight of the instance (used by clustering/lb/subscriptions) automatically--no-server force no-server mode--command-mode force command mode--no-defer-accept disable deferred-accept on sockets--tcp-nodelay enable TCP NODELAY on each request--so-keepalive enable TCP KEEPALIVEs--so-send-timeout set SO_SNDTIMEO--socket-send-timeout set SO_SNDTIMEO--so-write-timeout set SO_SNDTIMEO--socket-write-timeout set SO_SNDTIMEO--socket-sndbuf set SO_SNDBUF--socket-rcvbuf set SO_RCVBUF--limit-as limit processes address space/vsz--limit-nproc limit the number of spawnable processes--reload-on-as reload if address space is higher than specified megabytes--reload-on-rss reload if rss memory is higher than specified megabytes--evil-reload-on-as force the master to reload a worker if its address space is higher than specified megabytes--evil-reload-on-rss force the master to reload a worker if its rss memory is higher than specified megabytes--mem-collector-freq set the memory collector frequency when evil reloads are in place--reload-on-fd reload if the specified file descriptor is ready--brutal-reload-on-fd brutal reload if the specified file descriptor is ready--ksm enable Linux KSM--pcre-jit enable pcre jit (if available)--never-swap lock all memory pages avoiding swapping--touch-reload reload uWSGI if the specified file is modified/touched--touch-workers-reload trigger reload of (only) workers if the specified file is modified/touched--touch-mules-reload reload mules if the specified file is modified/touched--touch-spoolers-reload reload spoolers if the specified file is modified/touched--touch-chain-reload trigger chain reload if the specified file is modified/touched--touch-logrotate trigger logrotation if the specified file is modified/touched--touch-logreopen trigger log reopen if the specified file is modified/touched--touch-exec run command when the specified file is modified/touched (syntax: file command)--touch-signal signal when the specified file is modified/touched (syntax: file signal)--fs-reload graceful reload when the specified filesystem object is modified--fs-brutal-reload brutal reload when the specified filesystem object is modified--fs-signal raise a uwsgi signal when the specified filesystem object is modified (syntax: file sig‐ nal)--check-mountpoint destroy the instance if a filesystem is no more reachable (useful for reliable Fuse man‐ agement)--mountpoint-check destroy the instance if a filesystem is no more reachable (useful for reliable Fuse man‐ agement)--check-mount destroy the instance if a filesystem is no more reachable (useful for reliable Fuse man‐ agement)--mount-check destroy the instance if a filesystem is no more reachable (useful for reliable Fuse man‐ agement)--propagate-touch over-engineering option for system with flaky signal management--limit-post limit request body--no-orphans automatically kill workers if master dies (can be dangerous for availability)--prio set processes/threads priority--cpu-affinity set cpu affinity--post-buffering set size in bytes after which will buffer to disk instead of memory--post-buffering-bufsize set buffer size for read() in post buffering mode--body-read-warning set the amount of allowed memory allocation (in megabytes) for request body before start‐ ing printing a warning--upload-progress enable creation of .json files in the specified directory during a file upload--no-default-app do not fallback to default app--manage-script-name automatically rewrite SCRIPT_NAME and PATH_INFO--ignore-script-name ignore SCRIPT_NAME--catch-exceptions report exception as http output (discouraged, use only for testing)--reload-on-exception reload a worker when an exception is raised--reload-on-exception-type reload a worker when a specific exception type is raised--reload-on-exception-value reload a worker when a specific exception value is raised--reload-on-exception-repr reload a worker when a specific exception type+value (language-specific) is raised--exception-handler add an exception handler--enable-metrics enable metrics subsystem--metric add a custom metric--metric-threshold add a metric threshold/alarm--metric-alarm add a metric threshold/alarm--alarm-metric add a metric threshold/alarm--metrics-dir export metrics as text files to the specified directory--metrics-dir-restore restore last value taken from the metrics dir--metric-dir export metrics as text files to the specified directory--metric-dir-restore restore last value taken from the metrics dir--metrics-no-cores disable generation of cores-related metrics--udp run the udp server on the specified address--stats enable the stats server on the specified address--stats-server enable the stats server on the specified address--stats-http prefix stats server json output with http headers--stats-minified minify statistics json output--stats-min minify statistics json output--stats-push push the stats json to the specified destination--stats-pusher-default-freq set the default frequency of stats pushers--stats-pushers-default-freq set the default frequency of stats pushers--stats-no-cores disable generation of cores-related stats--stats-no-metrics do not include metrics in stats output--multicast subscribe to specified multicast group--multicast-ttl set multicast ttl--multicast-loop set multicast loop (default 1)--master-fifo enable the master fifo--notify-socket enable the notification socket--subscription-notify-socket set the notification socket for subscriptions--legion became a member of a legion--legion-mcast became a member of a legion (shortcut for multicast)--legion-node add a node to a legion--legion-freq set the frequency of legion packets--legion-tolerance set the tolerance of legion subsystem--legion-death-on-lord-error declare itself as a dead node for the specified amount of seconds if one of the lord hooks fails--legion-skew-tolerance set the clock skew tolerance of legion subsystem (default 30 seconds)--legion-lord action to call on Lord election--legion-unlord action to call on Lord dismiss--legion-setup action to call on legion setup--legion-death action to call on legion death (shutdown of the instance)--legion-join action to call on legion join (first time quorum is reached)--legion-node-joined action to call on new node joining legion--legion-node-left action to call node leaving legion--legion-quorum set the quorum of a legion--legion-scroll set the scroll of a legion--legion-scroll-max-size set max size of legion scroll buffer--legion-scroll-list-max-size set max size of legion scroll list buffer--subscriptions-sign-check set digest algorithm and certificate directory for secured subscription system--subscriptions-sign-check-tolerance set the maximum tolerance (in seconds) of clock skew for secured subscription system--subscriptions-sign-skip-uid skip signature check for the specified uid when using unix sockets credentials--subscriptions-credentials-check add a directory to search for subscriptions key credentials--subscriptions-use-credentials enable management of SCM_CREDENTIALS in subscriptions UNIX sockets--subscription-algo set load balancing algorithm for the subscription system--subscription-dotsplit try to fallback to the next part (dot based) in subscription key--subscribe-to subscribe to the specified subscription server--st subscribe to the specified subscription server--subscribe subscribe to the specified subscription server--subscribe2 subscribe to the specified subscription server using advanced keyval syntax--subscribe-freq send subscription announce at the specified interval--subscription-tolerance set tolerance for subscription servers--unsubscribe-on-graceful-reload force unsubscribe request even during graceful reload--start-unsubscribed configure subscriptions but do not send them (useful with master fifo)--subscribe-with-modifier1 force the specififed modifier1 when subscribing--snmp enable the embedded snmp server--snmp-community set the snmp community string--ssl-verbose be verbose about SSL errors--sni add an SNI-governed SSL context--sni-dir check for cert/key/client_ca file in the specified directory and create a sni/ssl context on demand--sni-dir-ciphers set ssl ciphers for sni-dir option--ssl-enable3 enable SSLv3 (insecure)--ssl-option set a raw ssl option (numeric value)--sni-regexp add an SNI-governed SSL context (the key is a regexp)--ssl-tmp-dir store ssl-related temp files in the specified directory--check-interval set the interval (in seconds) of master checks--forkbomb-delay sleep for the specified number of seconds when a forkbomb is detected--binary-path force binary path--privileged-binary-patch patch the uwsgi binary with a new command (before privileges drop)--unprivileged-binary-patch patch the uwsgi binary with a new command (after privileges drop)--privileged-binary-patch-arg patch the uwsgi binary with a new command and arguments (before privileges drop)--unprivileged-binary-patch-arg patch the uwsgi binary with a new command and arguments (after privileges drop)--async enable async mode with specified cores--max-fd set maximum number of file descriptors (requires root privileges)--logto set logfile/udp address--logto2 log to specified file or udp address after privileges drop--log-format set advanced format for request logging--logformat set advanced format for request logging--logformat-strftime apply strftime to logformat output--log-format-strftime apply strftime to logformat output--logfile-chown chown logfiles--logfile-chmod chmod logfiles--log-syslog log to syslog--log-socket send logs to the specified socket--req-logger set/append a request logger--logger-req set/append a request logger--logger set/append a logger--logger-list list enabled loggers--loggers-list list enabled loggers--threaded-logger offload log writing to a thread--log-encoder add an item in the log encoder chain--log-req-encoder add an item in the log req encoder chain--log-drain drain (do not show) log lines matching the specified regexp--log-filter show only log lines matching the specified regexp--log-route log to the specified named logger if regexp applied on logline matches--log-req-route log requests to the specified named logger if regexp applied on logline matches--use-abort call abort() on segfault/fpe, could be useful for generating a core dump--alarm create a new alarm, syntax: &lt;alarm&gt; &lt;plugin:args&gt;--alarm-cheap use main alarm thread rather than create dedicated threads for curl-based alarms--alarm-freq tune the anti-loop alarm system (default 3 seconds)--alarm-fd raise the specified alarm when an fd is read for read (by default it reads 1 byte, set 8 for eventfd)--alarm-segfault raise the specified alarm when the segmentation fault handler is executed--segfault-alarm raise the specified alarm when the segmentation fault handler is executed--alarm-backlog raise the specified alarm when the socket backlog queue is full--backlog-alarm raise the specified alarm when the socket backlog queue is full--lq-alarm raise the specified alarm when the socket backlog queue is full--alarm-lq raise the specified alarm when the socket backlog queue is full--alarm-listen-queue raise the specified alarm when the socket backlog queue is full--listen-queue-alarm raise the specified alarm when the socket backlog queue is full--log-alarm raise the specified alarm when a log line matches the specified regexp, syntax: &lt;alarm&gt;[,alarm...] &lt;regexp&gt;--alarm-log raise the specified alarm when a log line matches the specified regexp, syntax: &lt;alarm&gt;[,alarm...] &lt;regexp&gt;--not-log-alarm skip the specified alarm when a log line matches the specified regexp, syntax: &lt;alarm&gt;[,alarm...] &lt;regexp&gt;--not-alarm-log skip the specified alarm when a log line matches the specified regexp, syntax: &lt;alarm&gt;[,alarm...] &lt;regexp&gt;--alarm-list list enabled alarms--alarms-list list enabled alarms--alarm-msg-size set the max size of an alarm message (default 8192)--log-master delegate logging to master process--log-master-bufsize set the buffer size for the master logger. bigger log messages will be truncated--log-master-stream create the master logpipe as SOCK_STREAM--log-master-req-stream create the master requests logpipe as SOCK_STREAM--log-reopen reopen log after reload--log-truncate truncate log on startup--log-maxsize set maximum logfile size--log-backupname set logfile name after rotation--logdate prefix logs with date or a strftime string--log-date prefix logs with date or a strftime string--log-prefix prefix logs with a string--log-zero log responses without body--log-slow log requests slower than the specified number of milliseconds--log-4xx log requests with a 4xx response--log-5xx log requests with a 5xx response--log-big log requestes bigger than the specified size--log-sendfile log sendfile requests--log-ioerror log requests with io errors--log-micros report response time in microseconds instead of milliseconds--log-x-forwarded-for use the ip from X-Forwarded-For header instead of REMOTE_ADDR--master-as-root leave master process running as root--drop-after-init run privileges drop after plugin initialization, superseded by drop-after-apps--drop-after-apps run privileges drop after apps loading, superseded by master-as-root--force-cwd force the initial working directory to the specified value--binsh override /bin/sh (used by exec hooks, it always fallback to /bin/sh)--chdir chdir to specified directory before apps loading--chdir2 chdir to specified directory after apps loading--lazy set lazy mode (load apps in workers instead of master)--lazy-apps load apps in each worker instead of the master--cheap set cheap mode (spawn workers only after the first request)--cheaper set cheaper mode (adaptive process spawning)--cheaper-initial set the initial number of processes to spawn in cheaper mode--cheaper-algo choose to algorithm used for adaptive process spawning--cheaper-step number of additional processes to spawn at each overload--cheaper-overload increase workers after specified overload--cheaper-algo-list list enabled cheapers algorithms--cheaper-algos-list list enabled cheapers algorithms--cheaper-list list enabled cheapers algorithms--cheaper-rss-limit-soft don&#x27;t spawn new workers if total resident memory usage of all workers is higher than this limit--cheaper-rss-limit-hard if total workers resident memory usage is higher try to stop workers--idle set idle mode (put uWSGI in cheap mode after inactivity)--die-on-idle shutdown uWSGI when idle--mount load application under mountpoint--worker-mount load application under mountpoint in the specified worker or after workers spawn--threads run each worker in prethreaded mode with the specified number of threads--thread-stacksize set threads stacksize--threads-stacksize set threads stacksize--thread-stack-size set threads stacksize--threads-stack-size set threads stacksize--vhost enable virtualhosting mode (based on SERVER_NAME variable)--vhost-host enable virtualhosting mode (based on HTTP_HOST variable)--route add a route--route-host add a route based on Host header--route-uri add a route based on REQUEST_URI--route-qs add a route based on QUERY_STRING--route-remote-addr add a route based on REMOTE_ADDR--route-user-agent add a route based on HTTP_USER_AGENT--route-remote-user add a route based on REMOTE_USER--route-referer add a route based on HTTP_REFERER--route-label add a routing label (for use with goto)--route-if add a route based on condition--route-if-not add a route based on condition (negate version)--route-run always run the specified route action--final-route add a final route--final-route-status add a final route for the specified status--final-route-host add a final route based on Host header--final-route-uri add a final route based on REQUEST_URI--final-route-qs add a final route based on QUERY_STRING--final-route-remote-addr add a final route based on REMOTE_ADDR--final-route-user-agent add a final route based on HTTP_USER_AGENT--final-route-remote-user add a final route based on REMOTE_USER--final-route-referer add a final route based on HTTP_REFERER--final-route-label add a final routing label (for use with goto)--final-route-if add a final route based on condition--final-route-if-not add a final route based on condition (negate version)--final-route-run always run the specified final route action--error-route add an error route--error-route-status add an error route for the specified status--error-route-host add an error route based on Host header--error-route-uri add an error route based on REQUEST_URI--error-route-qs add an error route based on QUERY_STRING--error-route-remote-addr add an error route based on REMOTE_ADDR--error-route-user-agent add an error route based on HTTP_USER_AGENT--error-route-remote-user add an error route based on REMOTE_USER--error-route-referer add an error route based on HTTP_REFERER--error-route-label add an error routing label (for use with goto)--error-route-if add an error route based on condition--error-route-if-not add an error route based on condition (negate version)--error-route-run always run the specified error route action--response-route add a response route--response-route-status add a response route for the specified status--response-route-host add a response route based on Host header--response-route-uri add a response route based on REQUEST_URI--response-route-qs add a response route based on QUERY_STRING--response-route-remote-addr add a response route based on REMOTE_ADDR--response-route-user-agent add a response route based on HTTP_USER_AGENT--response-route-remote-user add a response route based on REMOTE_USER--response-route-referer add a response route based on HTTP_REFERER--response-route-label add a response routing label (for use with goto)--response-route-if add a response route based on condition--response-route-if-not add a response route based on condition (negate version)--response-route-run always run the specified response route action--router-list list enabled routers--routers-list list enabled routers--error-page-403 add an error page (html) for managed 403 response--error-page-404 add an error page (html) for managed 404 response--error-page-500 add an error page (html) for managed 500 response--websockets-ping-freq set the frequency (in seconds) of websockets automatic ping packets--websocket-ping-freq set the frequency (in seconds) of websockets automatic ping packets--websockets-pong-tolerance set the tolerance (in seconds) of websockets ping/pong subsystem--websocket-pong-tolerance set the tolerance (in seconds) of websockets ping/pong subsystem--websockets-max-size set the max allowed size of websocket messages (in Kbytes, default 1024)--websocket-max-size set the max allowed size of websocket messages (in Kbytes, default 1024)--chunked-input-limit set the max size of a chunked input part (default 1MB, in bytes)--chunked-input-timeout set default timeout for chunked input--clock set a clock source--clock-list list enabled clocks--clocks-list list enabled clocks--add-header automatically add HTTP headers to response--rem-header automatically remove specified HTTP header from the response--del-header automatically remove specified HTTP header from the response--collect-header store the specified response header in a request var (syntax: header var)--response-header-collect store the specified response header in a request var (syntax: header var)--pull-header store the specified response header in a request var and remove it from the response (syntax: header var)--check-static check for static files in the specified directory--check-static-docroot check for static files in the requested DOCUMENT_ROOT--static-check check for static files in the specified directory--static-map map mountpoint to static directory (or file)--static-map2 like static-map but completely appending the requested resource to the docroot--static-skip-ext skip specified extension from staticfile checks--static-index search for specified file if a directory is requested--static-safe skip security checks if the file is under the specified path--static-cache-paths put resolved paths in the uWSGI cache for the specified amount of seconds--static-cache-paths-name use the specified cache for static paths--mimefile set mime types file path (default /etc/mime.types)--mime-file set mime types file path (default /etc/mime.types)--static-expires-type set the Expires header based on content type--static-expires-type-mtime set the Expires header based on content type and file mtime--static-expires set the Expires header based on filename regexp--static-expires-mtime set the Expires header based on filename regexp and file mtime--static-expires-uri set the Expires header based on REQUEST_URI regexp--static-expires-uri-mtime set the Expires header based on REQUEST_URI regexp and file mtime--static-expires-path-info set the Expires header based on PATH_INFO regexp--static-expires-path-info-mtime set the Expires header based on PATH_INFO regexp and file mtime--static-gzip if the supplied regexp matches the static file translation it will search for a gzip ver‐ sion--static-gzip-all check for a gzip version of all requested static files--static-gzip-dir check for a gzip version of all requested static files in the specified dir/prefix--static-gzip-prefix check for a gzip version of all requested static files in the specified dir/prefix--static-gzip-ext check for a gzip version of all requested static files with the specified ext/suffix--static-gzip-suffix check for a gzip version of all requested static files with the specified ext/suffix--honour-range enable support for the HTTP Range header--offload-threads set the number of offload threads to spawn (per-worker, default 0)--offload-thread set the number of offload threads to spawn (per-worker, default 0)--file-serve-mode set static file serving mode--fileserve-mode set static file serving mode--disable-sendfile disable sendfile() and rely on boring read()/write()--check-cache check for response data in the specified cache (empty for default cache)--close-on-exec set close-on-exec on connection sockets (could be required for spawning processes in requests)--close-on-exec2 set close-on-exec on server sockets (could be required for spawning processes in requests)--mode set uWSGI custom mode--env set environment variable--envdir load a daemontools compatible envdir--early-envdir load a daemontools compatible envdir ASAP--unenv unset environment variable--vacuum try to remove all of the generated file/sockets--file-write write the specified content to the specified file (syntax: file=value) before privileges drop--cgroup put the processes in the specified cgroup--cgroup-opt set value in specified cgroup option--cgroup-dir-mode set permission for cgroup directory (default is 700)--namespace run in a new namespace under the specified rootfs--namespace-keep-mount keep the specified mountpoint in your namespace--ns run in a new namespace under the specified rootfs--namespace-net add network namespace--ns-net add network namespace--enable-proxy-protocol enable PROXY1 protocol support (only for http parsers)--reuse-port enable REUSE_PORT flag on socket (BSD only)--tcp-fast-open enable TCP_FASTOPEN flag on TCP sockets with the specified qlen value--tcp-fastopen enable TCP_FASTOPEN flag on TCP sockets with the specified qlen value--tcp-fast-open-client use sendto(..., MSG_FASTOPEN, ...) instead of connect() if supported--tcp-fastopen-client use sendto(..., MSG_FASTOPEN, ...) instead of connect() if supported--zerg attach to a zerg server--zerg-fallback fallback to normal sockets if the zerg server is not available--zerg-server enable the zerg server on the specified UNIX socket--cron add a cron task--cron2 add a cron task (key=val syntax)--unique-cron add a unique cron task--cron-harakiri set the maximum time (in seconds) we wait for cron command to complete--legion-cron add a cron task runnable only when the instance is a lord of the specified legion--cron-legion add a cron task runnable only when the instance is a lord of the specified legion--unique-legion-cron add a unique cron task runnable only when the instance is a lord of the specified legion--unique-cron-legion add a unique cron task runnable only when the instance is a lord of the specified legion--loop select the uWSGI loop engine--loop-list list enabled loop engines--loops-list list enabled loop engines--worker-exec run the specified command as worker--worker-exec2 run the specified command as worker (after post_fork hook)--attach-daemon attach a command/daemon to the master process (the command has to not go in background)--attach-control-daemon attach a command/daemon to the master process (the command has to not go in background), when the daemon dies, the master dies too--smart-attach-daemon attach a command/daemon to the master process managed by a pidfile (the command has to daemonize)--smart-attach-daemon2 attach a command/daemon to the master process managed by a pidfile (the command has to NOT daemonize)--legion-attach-daemon same as --attach-daemon but daemon runs only on legion lord node--legion-smart-attach-daemon same as --smart-attach-daemon but daemon runs only on legion lord node--legion-smart-attach-daemon2 same as --smart-attach-daemon2 but daemon runs only on legion lord node--daemons-honour-stdin do not change the stdin of external daemons to /dev/null--attach-daemon2 attach-daemon keyval variant (supports smart modes too)--plugins load uWSGI plugins--plugin load uWSGI plugins--need-plugins load uWSGI plugins (exit on error)--need-plugin load uWSGI plugins (exit on error)--plugins-dir add a directory to uWSGI plugin search path--plugin-dir add a directory to uWSGI plugin search path--plugins-list list enabled plugins--plugin-list list enabled plugins--autoload try to automatically load plugins when unknown options are found--dlopen blindly load a shared library--allowed-modifiers comma separated list of allowed modifiers--remap-modifier remap request modifier from one id to another--dump-options dump the full list of available options 装在所有可用的选项--show-config show the current config reformatted as ini 显示当前重新初始化时的设置--binary-append-data return the content of a resource to stdout for appending to a uwsgi binary (for data://usage)--print simple print 简易输出--iprint simple print (immediate version) 建议输出（当前生效）--exit force exit() of the instance 强制退出当前运行实例--cflags report uWSGI CFLAGS (useful for building external plugins) 创建拓展插件是报告uwsgi编译器选项--dot-h dump the uwsgi.h used for building the core (useful for building external plugins) 创建时使用uwsgi.h--config-py dump the uwsgiconfig.py used for building the core (useful for building external plugins) 创建时使用uwsgiconfig.py--build-plugin build a uWSGI plugin for the current binary 为当前的执行文件中创建一个uwsgi的插件，即加载插件到uwsgi服务器上--version print uWSGI version 查看当前uwsgi版本","raw":null,"content":null,"categories":[{"name":"SERVER","slug":"SERVER","permalink":"https://mumu-1005.github.io/pishon/categories/SERVER/"}],"tags":[{"name":"server","slug":"server","permalink":"https://mumu-1005.github.io/pishon/tags/server/"},{"name":"help","slug":"help","permalink":"https://mumu-1005.github.io/pishon/tags/help/"},{"name":"uwsgi","slug":"uwsgi","permalink":"https://mumu-1005.github.io/pishon/tags/uwsgi/"}]},{"title":"链表","slug":"链表","date":"2018-04-30T09:33:26.000Z","updated":"2022-03-27T09:38:01.672Z","comments":false,"path":"/articles/链表.html","link":"","permalink":"https://mumu-1005.github.io/pishon/articles/%E9%93%BE%E8%A1%A8.html","excerpt":"","keywords":null,"text":"单链表123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130class Node: def __init__(self, data=None, next=None): self.data = data self.next = next def __str__(self): return str(self.data) def delete(self): self.data = None self.next = Noneclass LNode: def __init__(self, has_head=True): self.node = None if has_head: self.head = None self.length = 0 def if_has_head(self): if hasattr(self, &#x27;head&#x27;): return True else: return False def is_empty(self): if self.length == 0: return True return False def append(self, data): current = self.node if self.is_empty(): self.node = Node(data) else: while current.next: current = current.next current.next = Node(data) self.length += 1 def insert(self, pos, data): if pos &gt; self.length + 1 or pos &lt;=0: return False if pos == 1: self.push(data) else: current = self.node for i in range(pos-2): current = current.next temp = current.next current.next = Node(data,temp) self.length += 1 return True def push(self, data): temp = self.node self.node = Node(data,temp) self.length += 1 def pop(self): last = self.node for i in range(self.length-2): last = last.next data = last.next.data last.next.delete() last.next = None self.length -= 1 return data def remove(self, pos): if pos &gt; self.length or pos &lt;= 0: return False else: if pos == 1: next = self.node.next self.node.delete() self.node = next else: last = self.node for i in range(pos-2): last = last.next current = last.next next = current.next last.next = next current.delete() self.length -= 1 return True def get_node(self, pos): if pos &gt; self.length or pos &lt;= 0: return None current = self.node for i in range(pos-1): current = current.next return current.data def find_node(self, data): current = self.node pos = 1 while current: if current.data == data: return pos else: pos += 1 current = current.next return -1 def get_lnode(self): current = self.node result = [] while current: result.append(current.data) current = current.next return result def clear(self): if self.if_has_head: self.head = None current = self.node self.node = None while current: temp = current.next current.next = None current.delete() current = temp self.length = 0 def __len__(self): return self.length 单链表的反转1","raw":null,"content":null,"categories":[{"name":"算法","slug":"算法","permalink":"https://mumu-1005.github.io/pishon/categories/%E7%AE%97%E6%B3%95/"}],"tags":[{"name":"算法","slug":"算法","permalink":"https://mumu-1005.github.io/pishon/tags/%E7%AE%97%E6%B3%95/"},{"name":"PYTHON","slug":"PYTHON","permalink":"https://mumu-1005.github.io/pishon/tags/PYTHON/"}]},{"title":"Git序","slug":"git序","date":"2018-04-25T13:05:47.000Z","updated":"2020-04-25T13:05:47.000Z","comments":false,"path":"/articles/git序.html","link":"","permalink":"https://mumu-1005.github.io/pishon/articles/git%E5%BA%8F.html","excerpt":"","keywords":null,"text":"配置设置12345git config --list #查看git配置信息git config user.name #查看git用户名git config user.email #查看邮箱配置git config --global user.name &quot;username&quot; #全局配置用户名git config --global user.email &quot;email&quot; #全局配置邮箱 清空git缓存123git rm -r --cached . #不删除本地文件 （git rm -r --f . 删除本地文件）git add .git commit -m &#x27;update .gitignore&#x27; 删除在git add中添加的文件123git reset HEAD file git rm –cached file #删除暂存区的文件，工作区的不受影响git rm --f file #删除暂存区与工作区的文件 更新忽略规则.gitignore12345# .gitignore只能忽略那些原来没有被track的文件（Untracked Files）# 更新规则生效步骤先把本地缓存删除（改变成未track状态），然后再提交：git rm -r --cached .git add .git commit -m &#x27;update .gitignore&#x27; refusing to merge unrelated histories123456# 拉取合并两个没有共同祖先的分支git pull origin master --allow-unrelated-histories# 先fetch之后再合并git fetch origin mastergit merge origin/master --allow-unrelated-histories 放弃本地修改，强制拉取fetch更新12git fetch –all #下载远程的库的内容不做合并git reset –hard origin/master #把HEAD指向master最新版本 取回更新并合并123456git pull #和git fetch的区别：git pull = git fetch + git mergegit pull --rebase # 相当于 git fetch + git rebase# 设置rebase为pull时候默认执行的动作git config --global pull.rebase true 改变分支依赖12#将当前分支基于依赖分支git rebase 依赖分支 #对所有涉及的commit（&quot;pick&quot;）执行默认操作，将历史记录回滚到最后一个公共父节点，并重新生成两个分支的commit。 failed to push some refs to git1234# 远程库中部分文件件不在本地库中造成冲突git pull --rebase origin master或git push -u origin master -f Untracked working tree file ‘xxx’ would be overwritten by merge1234# 需要执行下面的命令才能修复：git reset --hard HEAD git clean -f -d git pull 解决冲突文件12345678910111213141516171819202122232425# 远程库文件覆盖本地文件git pullgit checkout file# 暂存本地修改后拉取最新文件git stashgit pullgit stash list #查看暂存记录列表git stash apply stash@&#123;0&#125;# 冲突文件修改git commit git push# 本地提交冲突文件commit后拉取最新文件git add filegit commitgit pull# 冲突文件修改git commitgit push# 使用rebase情况下，完成冲突解决git rebase --continuegit rebase --skip #忽略此次提交 修改commit注释123456789# 查看提交的信息git show# 修改最近一次的提交git commit --amend #--amend会将更改添加到最近一个提交中# 修改最近n次提交历史(合并多次提交或拆分提交)git rebase -i HEAD~n # -i表示用交互式打开 撤销commit12345git reset --soft HEAD^ #不删除工作空间改动代码，撤销commit，不撤销git add . git reset --soft HEAD~1 #同上git reset --soft HEAD~2 #撤销近两次commitgit reset --mixed HEAD^ #同git reset HEAD^ 效果是一样的git reset --hard HEAD^ #删除工作空间改动代码，撤销commit，撤销git add . 还原到某一版本1234git tag backup_commit #备份当前的分支到backup_commitgit push origin backup_commitgit reset --hard commit_idgit push origin branch -f 删除commit12git reset --hard commit_idgit push origin HEAD --force 恢复已删除commit12git reflog #查看带hash值的历史操作，记录了某分支的每次操作git reset --hard hash 查询文件中每一行代码的 commit ID、提交者和提交日期1git blame filename 从其它分支抓取指定commit合入当前分支中1git cherry-pick -x commit_id","raw":null,"content":null,"categories":[{"name":"TOOLS","slug":"TOOLS","permalink":"https://mumu-1005.github.io/pishon/categories/TOOLS/"}],"tags":[{"name":"tools","slug":"tools","permalink":"https://mumu-1005.github.io/pishon/tags/tools/"},{"name":"git","slug":"git","permalink":"https://mumu-1005.github.io/pishon/tags/git/"}]},{"title":"Python进制转换与通用转换器实现","slug":"Python进制转换与通用转换器实现","date":"2018-03-19T12:11:35.000Z","updated":"2018-03-19T12:11:35.000Z","comments":false,"path":"/articles/Python进制转换与通用转换器实现.html","link":"","permalink":"https://mumu-1005.github.io/pishon/articles/Python%E8%BF%9B%E5%88%B6%E8%BD%AC%E6%8D%A2%E4%B8%8E%E9%80%9A%E7%94%A8%E8%BD%AC%E6%8D%A2%E5%99%A8%E5%AE%9E%E7%8E%B0.html","excerpt":"","keywords":null,"text":"进制通用转换器进制通用转换器 line_numbers:true hightlight:true123456789101112131415161718192021222324def get_num_common(original_num, base_num): result = [] while(original_num/base_num &gt; base_num): result.append(original_num%base_num) original_num = original_num//base_num result.append(original_num%base_num) result.append(original_num//base_num) result.reverse() new_num = &#x27;&#x27;.join(str(i) for i in result) if base_num == 2: return &#x27;0b&#x27; + new_num elif base_num == 8: return &#x27;0o&#x27; + new_num elif base_num == 16: return &#x27;0x&#x27; + new_num elif base_num == 10: return int(new_num) else: return None 十进制转换成16进制十进制转换成16进制 line_numbers:true hightlight:true123456789101112131415def get_num(original_num): &#x27;&#x27;&#x27;hex(original_num)&#x27;&#x27;&#x27; result = [] while(original_num*1.0/16 &gt; 16): result.append(original_num%16) original_num = original_num//16 result.append(original_num%16) result.append(original_num//16) result.reverse() return &#x27;0x&#x27; + &#x27;&#x27;.join(str(i) for i in result) 延伸Python内置函数转换器1、十进制数转换成N进制数 内置函数转换器 二进制数 八进制数 十六进制数 十进制数 bin(num) oct(num) hex(num) 2、N进制数转换成十进制数 内置函数转换器 十进制数 二进制数 int(num,2) 八进制数 int(num,8) 十六进制数 int(num,16)","raw":null,"content":null,"categories":[{"name":"PYTHON","slug":"PYTHON","permalink":"https://mumu-1005.github.io/pishon/categories/PYTHON/"}],"tags":[{"name":"Python","slug":"Python","permalink":"https://mumu-1005.github.io/pishon/tags/Python/"},{"name":"进制转换","slug":"进制转换","permalink":"https://mumu-1005.github.io/pishon/tags/%E8%BF%9B%E5%88%B6%E8%BD%AC%E6%8D%A2/"}]},{"title":"os_help（已更新）","slug":"os-help","date":"2018-03-03T16:09:52.000Z","updated":"2022-03-27T09:38:01.677Z","comments":false,"path":"/articles/os-help.html","link":"","permalink":"https://mumu-1005.github.io/pishon/articles/os-help.html","excerpt":"","keywords":null,"text":"Help on module OSMODULE REFERENCE1234567https://docs.python.org/3.7/library/osThe following documentation is automatically generated from the Pythonsource files. It may be incomplete, incorrect or include features thatare considered implementation detail and may vary between Pythonimplementations. When in doubt, consult the module reference at thelocation listed above. DESCRIPTION12345678910111213141516171819This exports: - all functions from posix or nt, e.g. unlink, stat, etc. - os.path is either posixpath or ntpath - os.name is either &#x27;posix&#x27; or &#x27;nt&#x27; - os.curdir is a string representing the current directory (always &#x27;.&#x27;) - os.pardir is a string representing the parent directory (always &#x27;..&#x27;) - os.sep is the (or a most common) pathname separator (&#x27;/&#x27; or &#x27;\\\\&#x27;) - os.extsep is the extension separator (always &#x27;.&#x27;) - os.altsep is the alternate pathname separator (None or &#x27;/&#x27;) - os.pathsep is the component separator used in $PATH etc - os.linesep is the line separator in text files (&#x27;\\r&#x27; or &#x27;\\n&#x27; or &#x27;\\r\\n&#x27;) - os.defpath is the default search path for executables - os.devnull is the file path of the null device (&#x27;/dev/null&#x27;, etc.)Programs that import and use &#x27;os&#x27; stand a better chance of beingportable between different platforms. Of course, they must thenonly use functions that are defined by all platforms (e.g., unlinkand opendir), and leave all pathname manipulation to os.path(e.g., split and join). CLASSES12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879808182838485868788899091929394959697989910010110210310410510610710810911011111211311411511611711811912012112212312412512612712812913013113213313413513613713813914014114214314414514614714814915015115215315415515615715815916016116216316416516616716816917017117217317417517617717817918018118218318418518618718818919019119219319419519619719819920020120220320420520620720820921021121221321421521621721821922022122222322422522622722822923023123223323423523623723823924024124224324424524624724824925025125225325425525625725825926026126226326426526626726826927027127227327427527627727827928028128228328428528628728828929029129229329429529629729829930030130230330430530630730830931031131231331431531631731831932032132232332432532632732832933033133233333433533633733833934034134234334434534634734834935035135235335435535635735835936036136236336436536636736836937037137237337437537637737837938038138238338438538638738838939039139239339439539639739839940040140240340440540640740840941041141241341441541641741841942042142242342442542642742842943043143243343443543643743843944044144244344444544644744844945045145245345445545645745845946046146246346446546646746846947047147247347447547647747847948048148248348448548648748848949049149249349449549649749849950050150250350450550650750850951051151251351451551651751851952052152252352452552652752852953053153253353453553653753853954054154254354454554654754854955055155255355455555655755855956056156256356456556656756856957057157257357457557657757857958058158258358458558658758858959059159259359459559659759859960060160260360460560660760860961061161261361461561661761861962062162262362462562662762862963063163263363463563663763863964064164264364464564664764864965065165265365465565665765865966066166266366466566666766866967067167267367467567667767867968068168268368468568668768868969069169269369469569669769869970070170270370470570670770870971071171271371471571671771871972072172272372472572672772872973073173273373473573673773873974074174274374474574674774874975075175275375475575675775875976076176276376476576676776876977077177277377477577677777877978078178278378478578678778878979079179279379479579679779879980080180280380480580680780880981081181281381481581681781881982082182282382482582682782882983083183283383483583683783883984084184284384484584684784884985085185285385485585685785885986086186286386486586686786886987087187287387487587687787887988088188288388488588688788888989089189289389489589689789889990090190290390490590690790890991091191291391491591691791891992092192292392492592692792892993093193293393493593693793893994094194294394494594694794894995095195295395495595695795895996096196296396496596696796896997097197297397497597697797897998098198298398498598698798898999099199299399499599699799899910001001100210031004100510061007100810091010101110121013101410151016101710181019102010211022102310241025102610271028102910301031103210331034103510361037103810391040104110421043104410451046104710481049105010511052105310541055105610571058105910601061106210631064106510661067106810691070107110721073107410751076107710781079108010811082108310841085108610871088108910901091109210931094109510961097109810991100110111021103110411051106110711081109111011111112111311141115111611171118111911201121112211231124112511261127112811291130113111321133113411351136113711381139114011411142114311441145114611471148114911501151115211531154115511561157115811591160116111621163116411651166116711681169117011711172117311741175117611771178117911801181118211831184118511861187118811891190119111921193119411951196119711981199120012011202120312041205120612071208120912101211121212131214121512161217121812191220122112221223122412251226122712281229123012311232123312341235123612371238123912401241124212431244124512461247124812491250125112521253125412551256125712581259126012611262126312641265126612671268126912701271127212731274127512761277127812791280128112821283128412851286128712881289129012911292129312941295129612971298129913001301130213031304130513061307130813091310131113121313131413151316131713181319132013211322132313241325132613271328132913301331133213331334133513361337133813391340134113421343134413451346134713481349135013511352135313541355135613571358135913601361136213631364136513661367136813691370137113721373137413751376137713781379138013811382138313841385138613871388138913901391139213931394139513961397139813991400140114021403140414051406140714081409141014111412141314141415141614171418141914201421142214231424142514261427142814291430143114321433143414351436143714381439144014411442144314441445144614471448144914501451145214531454145514561457145814591460146114621463146414651466146714681469147014711472147314741475147614771478147914801481148214831484148514861487148814891490149114921493149414951496149714981499150015011502150315041505150615071508150915101511151215131514151515161517151815191520152115221523152415251526152715281529153015311532153315341535153615371538153915401541154215431544154515461547154815491550155115521553155415551556155715581559156015611562156315641565156615671568156915701571157215731574157515761577157815791580158115821583158415851586158715881589159015911592159315941595159615971598159916001601160216031604160516061607160816091610161116121613161416151616161716181619162016211622162316241625162616271628162916301631163216331634163516361637163816391640164116421643164416451646164716481649165016511652165316541655165616571658165916601661166216631664166516661667166816691670167116721673167416751676167716781679168016811682168316841685168616871688168916901691169216931694169516961697169816991700170117021703170417051706170717081709171017111712171317141715171617171718171917201721172217231724172517261727172817291730173117321733173417351736173717381739174017411742174317441745174617471748174917501751175217531754175517561757175817591760176117621763176417651766176717681769177017711772177317741775177617771778177917801781178217831784178517861787178817891790179117921793179417951796179717981799180018011802180318041805180618071808180918101811181218131814181518161817181818191820182118221823182418251826182718281829183018311832183318341835183618371838183918401841184218431844184518461847184818491850185118521853185418551856185718581859186018611862186318641865186618671868186918701871187218731874187518761877187818791880188118821883188418851886188718881889189018911892189318941895189618971898189919001901190219031904190519061907190819091910191119121913191419151916191719181919192019211922192319241925192619271928192919301931193219331934193519361937193819391940194119421943194419451946194719481949195019511952195319541955195619571958195919601961196219631964196519661967196819691970197119721973197419751976197719781979198019811982198319841985198619871988198919901991199219931994199519961997199819992000200120022003200420052006200720082009201020112012201320142015201620172018201920202021202220232024202520262027202820292030203120322033203420352036203720382039204020412042204320442045204620472048204920502051205220532054205520562057205820592060206120622063206420652066206720682069207020712072207320742075207620772078207920802081208220832084 builtins.Exception(builtins.BaseException) builtins.OSError builtins.object posix.DirEntry builtins.tuple(builtins.object) stat_result statvfs_result terminal_size posix.times_result posix.uname_result class DirEntry(builtins.object) | Methods defined here: | | __fspath__(self, /) | Returns the path for the entry. | | __repr__(self, /) | Return repr(self). | | inode(self, /) | Return inode of the entry; cached per entry. | | is_dir(self, /, *, follow_symlinks=True) | Return True if the entry is a directory; cached per entry. | | is_file(self, /, *, follow_symlinks=True) | Return True if the entry is a file; cached per entry. | | is_symlink(self, /) | Return True if the entry is a symbolic link; cached per entry. | | stat(self, /, *, follow_symlinks=True) | Return stat_result object for the entry; cached per entry. | | ---------------------------------------------------------------------- | Data descriptors defined here: | | name | the entry&#x27;s base filename, relative to scandir() &quot;path&quot; argument | | path | the entry&#x27;s full path name; equivalent to os.path.join(scandir_path, entry.name) error = class OSError(Exception) | Base class for I/O related errors. | | Method resolution order: | OSError | Exception | BaseException | object | | Methods defined here: | | __init__(self, /, *args, **kwargs) | Initialize self. See help(type(self)) for accurate signature. | | __reduce__(...) | Helper for pickle. | | __str__(self, /) | Return str(self). | | ---------------------------------------------------------------------- | Static methods defined here: | | __new__(*args, **kwargs) from builtins.type | Create and return a new object. See help(type) for accurate signature. | | ---------------------------------------------------------------------- | Data descriptors defined here: | | characters_written | | errno | POSIX exception code | | filename | exception filename | | filename2 | second exception filename | | strerror | exception strerror | | ---------------------------------------------------------------------- | Methods inherited from BaseException: | | __delattr__(self, name, /) | Implement delattr(self, name). | | __getattribute__(self, name, /) | Return getattr(self, name). | | __repr__(self, /) | Return repr(self). | | __setattr__(self, name, value, /) | Implement setattr(self, name, value). | | __setstate__(...) | | with_traceback(...) | Exception.with_traceback(tb) -- | set self.__traceback__ to tb and return self. | | ---------------------------------------------------------------------- | Data descriptors inherited from BaseException: | | __cause__ | exception cause | | __context__ | exception context | | __dict__ | | __suppress_context__ | | __traceback__ | | args class stat_result(builtins.tuple) | stat_result(iterable=(), /) | | stat_result: Result from stat, fstat, or lstat. | | This object may be accessed either as a tuple of | (mode, ino, dev, nlink, uid, gid, size, atime, mtime, ctime) | or via the attributes st_mode, st_ino, st_dev, st_nlink, st_uid, and so on. | | Posix/windows: If your platform supports st_blksize, st_blocks, st_rdev, | or st_flags, they are available as attributes only. | | See os.stat for more information. | | Method resolution order: | stat_result | builtins.tuple | builtins.object | | Methods defined here: | | __reduce__(...) | Helper for pickle. | | __repr__(self, /) | Return repr(self). | | ---------------------------------------------------------------------- | Static methods defined here: | | __new__(*args, **kwargs) from builtins.type | Create and return a new object. See help(type) for accurate signature. | | ---------------------------------------------------------------------- | Data descriptors defined here: | | st_atime | time of last access | | st_atime_ns | time of last access in nanoseconds | | st_birthtime | time of creation | | st_blksize | blocksize for filesystem I/O | | st_blocks | number of blocks allocated | | st_ctime | time of last change | | st_ctime_ns | time of last change in nanoseconds | | st_dev | device | | st_flags | user defined flags for file | | st_gen | generation number | | st_gid | group ID of owner | | st_ino | inode | | st_mode | protection bits | | st_mtime | time of last modification | | st_mtime_ns | time of last modification in nanoseconds | | st_nlink | number of hard links | | st_rdev | device type (if inode device) | | st_size | total size, in bytes | | st_uid | user ID of owner | | ---------------------------------------------------------------------- | Data and other attributes defined here: | | n_fields = 22for NT or Posix depending on what system we&#x27;re on. | | n_sequence_fields = 10 | s://docs.python.org/3.7/library/os | n_unnamed_fields = 3 | following documentation is automatically generated from the Python | ---------------------------------------------------------------------- | Methods inherited from builtins.tuple:ay vary between Python | ementations. When in doubt, consult the module reference at the | __add__(self, value, /) | Return self+value. | ION | __contains__(self, key, /) | Return key in self.x or nt, e.g. unlink, stat, etc. | os.path is either posixpath or ntpath | __eq__(self, value, /)ix&#x27; or &#x27;nt&#x27; | Return self==value.epresenting the current directory (always &#x27;.&#x27;) | os.pardir is a string representing the parent directory (always &#x27;..&#x27;) | __ge__(self, value, /)st common) pathname separator (&#x27;/&#x27; or &#x27;\\\\&#x27;) | Return self&gt;=value.ion separator (always &#x27;.&#x27;) | os.altsep is the alternate pathname separator (None or &#x27;/&#x27;) | __getattribute__(self, name, /)arator used in $PATH etc | Return getattr(self, name).r in text files (&#x27;\\r&#x27; or &#x27;\\n&#x27; or &#x27;\\r\\n&#x27;) | os.defpath is the default search path for executables | __getitem__(self, key, /)th of the null device (&#x27;/dev/null&#x27;, etc.) | Return self[key]. | rams that import and use &#x27;os&#x27; stand a better chance of being | __getnewargs__(self, /)platforms. Of course, they must then | use functions that are defined by all platforms (e.g., unlink | __gt__(self, value, /)l pathname manipulation to os.path | Return self&gt;value. | | __hash__(self, /) | Return hash(self).s.BaseException) | builtins.OSError | __iter__(self, /) | Implement iter(self). | tins.tuple(builtins.object) | __le__(self, value, /) | Return self&lt;=value. | terminal_size | __len__(self, /)lt | Return len(self). | | __lt__(self, value, /)ject) | Return self&lt;value. | | __mul__(self, value, /) | Return self*value.or the entry. | | __ne__(self, value, /) | Return self!=value. | | __rmul__(self, value, /) | Return value*self.e entry; cached per entry. | | count(self, value, /) | Return number of occurrences of value. | | index(self, value, start=0, stop=9223372036854775807, /) | Return first index of value. | | Raises ValueError if the value is not present. class statvfs_result(builtins.tuple) | statvfs_result(iterable=(), /) | | statvfs_result: Result from statvfs or fstatvfs. | | This object may be accessed either as a tuple of | (bsize, frsize, blocks, bfree, bavail, files, ffree, favail, flag, namemax), | or via the attributes f_bsize, f_frsize, f_blocks, f_bfree, and so on. | | See os.statvfs for more information. | | Method resolution order: | statvfs_result | builtins.tuple | builtins.object | | Methods defined here: | | __reduce__(...) | Helper for pickle. | | __repr__(self, /) | Return repr(self). | | ---------------------------------------------------------------------- | Static methods defined here: | | __new__(*args, **kwargs) from builtins.type | Create and return a new object. See help(type) for accurate signature. | | ---------------------------------------------------------------------- | Data descriptors defined here: | | f_bavail | | f_bfree | | f_blocks | | f_bsize | | f_favail | | f_ffree | | f_files | | f_flag | | f_frsize | | f_fsid | | f_namemax | | ---------------------------------------------------------------------- | Data and other attributes defined here: | | n_fields = 11 | | n_sequence_fields = 10 | | n_unnamed_fields = 0 | | ---------------------------------------------------------------------- | Methods inherited from builtins.tuple: | | __add__(self, value, /) | Return self+value. | | __contains__(self, key, /) | Return key in self. | | __eq__(self, value, /) | Return self==value. | | __ge__(self, value, /) | Return self&gt;=value. | | __getattribute__(self, name, /) | Return getattr(self, name). | | __getitem__(self, key, /) | Return self[key]. | | __getnewargs__(self, /) | | __gt__(self, value, /) | Return self&gt;value. | | __hash__(self, /) | Return hash(self). | | __iter__(self, /) | Implement iter(self). | | __le__(self, value, /) | Return self&lt;=value. | | __len__(self, /) | Return len(self). | | __lt__(self, value, /) | Return self&lt;value. | | __mul__(self, value, /) | Return self*value. | | __ne__(self, value, /) | Return self!=value. | | __rmul__(self, value, /) | Return value*self. | | count(self, value, /) | Return number of occurrences of value. | | index(self, value, start=0, stop=9223372036854775807, /) | Return first index of value. | | Raises ValueError if the value is not present. class terminal_size(builtins.tuple) | terminal_size(iterable=(), /) | | A tuple of (columns, lines) for holding terminal window size | | Method resolution order: | terminal_size | builtins.tuple | builtins.object | | Methods defined here: | | __reduce__(...) | Helper for pickle. | | __repr__(self, /) | Return repr(self). | | ---------------------------------------------------------------------- | Static methods defined here: | | __new__(*args, **kwargs) from builtins.type | Create and return a new object. See help(type) for accurate signature. | | ---------------------------------------------------------------------- | Data descriptors defined here: | | columns | width of the terminal window in characters | | lines | height of the terminal window in characters | | ---------------------------------------------------------------------- | Data and other attributes defined here: | | n_fields = 2 | | n_sequence_fields = 2 | | n_unnamed_fields = 0 | | ---------------------------------------------------------------------- | Methods inherited from builtins.tuple: | | __add__(self, value, /) | Return self+value. | | __contains__(self, key, /) | Return key in self. | | __eq__(self, value, /) | Return self==value. | | __ge__(self, value, /) | Return self&gt;=value. | | __getattribute__(self, name, /) | Return getattr(self, name). | | __getitem__(self, key, /) | Return self[key]. | | __getnewargs__(self, /) | | __gt__(self, value, /) | Return self&gt;value. | | __hash__(self, /) | Return hash(self). | | __iter__(self, /) | Implement iter(self). | | __le__(self, value, /) | Return self&lt;=value. | | __len__(self, /) | Return len(self). | | __lt__(self, value, /) | Return self&lt;value. | | __mul__(self, value, /) | Return self*value. | | __ne__(self, value, /) | Return self!=value. | | __rmul__(self, value, /) | Return value*self. | | count(self, value, /) | Return number of occurrences of value. | | index(self, value, start=0, stop=9223372036854775807, /) | Return first index of value. | | Raises ValueError if the value is not present. class times_result(builtins.tuple) | times_result(iterable=(), /) | | times_result: Result from os.times(). | | This object may be accessed either as a tuple of | (user, system, children_user, children_system, elapsed), | or via the attributes user, system, children_user, children_system, | and elapsed. | | See os.times for more information. | | Method resolution order: | times_result | builtins.tuple | builtins.object | | Methods defined here: | | __reduce__(...) | Helper for pickle. | | __repr__(self, /) | Return repr(self). | | ---------------------------------------------------------------------- | Static methods defined here: | | __new__(*args, **kwargs) from builtins.type | Create and return a new object. See help(type) for accurate signature. | | ---------------------------------------------------------------------- | Data descriptors defined here: | | children_system | system time of children | | children_user | user time of children | | elapsed | elapsed time since an arbitrary point in the past | | system | system time | | user | user time | | ---------------------------------------------------------------------- | Data and other attributes defined here: | | n_fields = 5 | | n_sequence_fields = 5 | | n_unnamed_fields = 0 | | ---------------------------------------------------------------------- | Methods inherited from builtins.tuple: | | __add__(self, value, /) | Return self+value. | | __contains__(self, key, /) | Return key in self. | | __eq__(self, value, /) | Return self==value. | | __ge__(self, value, /) | Return self&gt;=value. | | __getattribute__(self, name, /) | Return getattr(self, name). | | __getitem__(self, key, /) | Return self[key]. | | __getnewargs__(self, /) | | __gt__(self, value, /) | Return self&gt;value. | | __hash__(self, /) | Return hash(self). | | __iter__(self, /) | Implement iter(self). | | __le__(self, value, /) | Return self&lt;=value. | | __len__(self, /) | Return len(self). | | __lt__(self, value, /) | Return self&lt;value. | | __mul__(self, value, /) | Return self*value. | | __ne__(self, value, /) | Return self!=value. | | __rmul__(self, value, /) | Return value*self. | | count(self, value, /) | Return number of occurrences of value. | | index(self, value, start=0, stop=9223372036854775807, /) | Return first index of value. | | Raises ValueError if the value is not present. class uname_result(builtins.tuple) | uname_result(iterable=(), /) | | uname_result: Result from os.uname(). | | This object may be accessed either as a tuple of | (sysname, nodename, release, version, machine), | or via the attributes sysname, nodename, release, version, and machine. | | See os.uname for more information. | | Method resolution order: | uname_result | builtins.tuple | builtins.object | | Methods defined here: | | __reduce__(...) | Helper for pickle. | | __repr__(self, /) | Return repr(self). | | ---------------------------------------------------------------------- | Static methods defined here: | | __new__(*args, **kwargs) from builtins.type | Create and return a new object. See help(type) for accurate signature. | | ---------------------------------------------------------------------- | Data descriptors defined here: | | machine | hardware identifier | | nodename | name of machine on network (implementation-defined) | | release | operating system release | | sysname | operating system name | | version | operating system version | | ---------------------------------------------------------------------- | Data and other attributes defined here: | | n_fields = 5 | | n_sequence_fields = 5 | | n_unnamed_fields = 0 | | ---------------------------------------------------------------------- | Methods inherited from builtins.tuple: | | __add__(self, value, /) | Return self+value. | | __contains__(self, key, /) | Return key in self. | | __eq__(self, value, /) | Return self==value. | | __ge__(self, value, /) | Return self&gt;=value. | | __getattribute__(self, name, /) | Return getattr(self, name). | | __getitem__(self, key, /) | Return self[key]. | | __getnewargs__(self, /) | | __gt__(self, value, /) | Return self&gt;value. | | __hash__(self, /) | Return hash(self). | | __iter__(self, /) | Implement iter(self). | | __le__(self, value, /) | Return self&lt;=value. | | __len__(self, /) | Return len(self). | | __lt__(self, value, /) | Return self&lt;value. | | __mul__(self, value, /) | Return self*value. | | __ne__(self, value, /) | Return self!=value. | | __rmul__(self, value, /) | Return value*self. | | count(self, value, /) | Return number of occurrences of value. | | index(self, value, start=0, stop=9223372036854775807, /) | Return first index of value. | | Raises ValueError if the value is not present.FUNCTIONS WCOREDUMP(status, /) Return True if the process returning status was dumped to a core file. WEXITSTATUS(status) Return the process return code from status. WIFCONTINUED(status) Return True if a particular process was continued from a job control stop. Return True if the process returning status was continued from a job control stop. WIFEXITED(status) Return True if the process returning status exited via the exit() system call. WIFSIGNALED(status) Return True if the process returning status was terminated by a signal. WIFSTOPPED(status) Return True if the process returning status was stopped. WSTOPSIG(status) Return the signal that stopped the process that provided the status value. WTERMSIG(status) Return the signal that terminated the process that provided the status value. _exit(status) Exit to the system with specified status, without normal exit processing. abort() Abort the interpreter immediately. This function &#x27;dumps core&#x27; or otherwise fails in the hardest way possible on the hosting operating system. This function never returns. access(path, mode, *, dir_fd=None, effective_ids=False, follow_symlinks=True) Use the real uid/gid to test for access to a path. path Path to be tested; can be string, bytes, or a path-like object. mode Operating-system mode bitfield. Can be F_OK to test existence, or the inclusive-OR of R_OK, W_OK, and X_OK. dir_fd If not None, it should be a file descriptor open to a directory, and path should be relative; path will then be relative to that directory. effective_ids If True, access will use the effective uid/gid instead of the real uid/gid. follow_symlinks If False, and the last element of the path is a symbolic link, access will examine the symbolic link itself instead of the file the link points to. dir_fd, effective_ids, and follow_symlinks may not be implemented on your platform. If they are unavailable, using them will raise a NotImplementedError. Note that most operations will use the effective uid/gid, therefore this routine can be used in a suid/sgid environment to test if the invoking user has the specified access to the path. chdir(path) Change the current working directory to the specified path. path may always be specified as a string. On some platforms, path may also be specified as an open file descriptor. If this functionality is unavailable, using it raises an exception. chflags(path, flags, follow_symlinks=True) Set file flags. If follow_symlinks is False, and the last element of the path is a symbolic link, chflags will change flags on the symbolic link itself instead of the file the link points to. follow_symlinks may not be implemented on your platform. If it is unavailable, using it will raise a NotImplementedError. chmod(path, mode, *, dir_fd=None, follow_symlinks=True) Change the access permissions of a file. path Path to be modified. May always be specified as a str, bytes, or a path-like object. On some platforms, path may also be specified as an open file descriptor. If this functionality is unavailable, using it raises an exception. mode Operating-system mode bitfield. dir_fd If not None, it should be a file descriptor open to a directory, and path should be relative; path will then be relative to that directory. follow_symlinks If False, and the last element of the path is a symbolic link, chmod will modify the symbolic link itself instead of the file the link points to. It is an error to use dir_fd or follow_symlinks when specifying path as an open file descriptor. dir_fd and follow_symlinks may not be implemented on your platform. If they are unavailable, using them will raise a NotImplementedError. chown(path, uid, gid, *, dir_fd=None, follow_symlinks=True) Change the owner and group id of path to the numeric uid and gid.\\ path Path to be examined; can be string, bytes, a path-like object, or open-file-descriptor int. dir_fd If not None, it should be a file descriptor open to a directory, and path should be relative; path will then be relative to that directory. follow_symlinks If False, and the last element of the path is a symbolic link, stat will examine the symbolic link itself instead of the file the link points to. path may always be specified as a string. On some platforms, path may also be specified as an open file descriptor. If this functionality is unavailable, using it raises an exception. If dir_fd is not None, it should be a file descriptor open to a directory, and path should be relative; path will then be relative to that directory. If follow_symlinks is False, and the last element of the path is a symbolic link, chown will modify the symbolic link itself instead of the file the link points to. It is an error to use dir_fd or follow_symlinks when specifying path as an open file descriptor. dir_fd and follow_symlinks may not be implemented on your platform. If they are unavailable, using them will raise a NotImplementedError. chroot(path) Change root directory to path. close(fd) Close a file descriptor. closerange(fd_low, fd_high, /) Closes all file descriptors in [fd_low, fd_high), ignoring errors. confstr(name, /) Return a string-valued system configuration variable. cpu_count() Return the number of CPUs in the system; return None if indeterminable. This number is not equivalent to the number of CPUs the current process can use. The number of usable CPUs can be obtained with ``len(os.sched_getaffinity(0))`` ctermid() Return the name of the controlling terminal for this process. device_encoding(fd) Return a string describing the encoding of a terminal&#x27;s file descriptor. The file descriptor must be attached to a terminal. If the device is not a terminal, return None. dup(fd, /) Return a duplicate of a file descriptor. dup2(fd, fd2, inheritable=True) Duplicate file descriptor. execl(file, *args) execl(file, *args) Execute the executable file with argument list args, replacing the current process. execle(file, *args) execle(file, *args, env) Execute the executable file with argument list args and environment env, replacing the current process. execlp(file, *args) execlp(file, *args) Execute the executable file (which is searched for along $PATH) with argument list args, replacing the current process. execlpe(file, *args) execlpe(file, *args, env) Execute the executable file (which is searched for along $PATH) with argument list args and environment env, replacing the current process. execv(path, argv, /) Execute an executable path with arguments, replacing current process. path Path of executable file. argv Tuple or list of strings. execve(path, argv, env) Execute an executable path with arguments, replacing current process. path Path of executable file. argv Tuple or list of strings. env Dictionary of strings mapping to strings. execvp(file, args) execvp(file, args) Execute the executable file (which is searched for along $PATH) with argument list args, replacing the current process. args may be a list or tuple of strings. execvpe(file, args, env) execvpe(file, args, env) Execute the executable file (which is searched for along $PATH) with argument list args and environment env , replacing the current process. args may be a list or tuple of strings. fchdir(fd) Change to the directory of the given file descriptor. fd must be opened on a directory, not a file. Equivalent to os.chdir(fd). fchmod(fd, mode) Change the access permissions of the file given by file descriptor fd. Equivalent to os.chmod(fd, mode). fchown(fd, uid, gid) Change the owner and group id of the file specified by file descriptor. Equivalent to os.chown(fd, uid, gid). fdopen(fd, *args, **kwargs) # Supply os.fdopen() fork() Fork a child process. Return 0 to child process and PID of child to parent process. forkpty() Fork a new process with a new pseudo-terminal as controlling tty. Returns a tuple of (pid, master_fd). Like fork(), return pid of 0 to the child process, and pid of child to the parent process. To both, return fd of newly opened pseudo-terminal. fpathconf(fd, name, /) Return the configuration limit name for the file descriptor fd. If there is no limit, return -1. fsdecode(filename) Decode filename (an os.PathLike, bytes, or str) from the filesystem encoding with &#x27;surrogateescape&#x27; error handler, return str unchanged. On Windows, use &#x27;strict&#x27; error handler if the file system encoding is &#x27;mbcs&#x27; (which is the default encoding). fsencode(filename) Encode filename (an os.PathLike, bytes, or str) to the filesystem encoding with &#x27;surrogateescape&#x27; error handler, return bytes unchanged. On Windows, use &#x27;strict&#x27; error handler if the file system encoding is &#x27;mbcs&#x27; (which is the default encoding). fspath(path) Return the file system path representation of the object. If the object is str or bytes, then allow it to pass through as-is. If the object defines __fspath__(), then return the result of that method. All other types raise a TypeError. fstat(fd) Perform a stat system call on the given file descriptor. Like stat(), but for an open file descriptor. Equivalent to os.stat(fd). fstatvfs(fd, /) Perform an fstatvfs system call on the given fd. Equivalent to statvfs(fd). fsync(fd) Force write of fd to disk. ftruncate(fd, length, /) Truncate a file, specified by file descriptor, to a specific length. fwalk(top=&#x27;.&#x27;, topdown=True, onerror=None, *, follow_symlinks=False, dir_fd=None) Directory tree generator. This behaves exactly like walk(), except that it yields a 4-tuple dirpath, dirnames, filenames, dirfd `dirpath`, `dirnames` and `filenames` are identical to walk() output, and `dirfd` is a file descriptor referring to the directory `dirpath`. The advantage of fwalk() over walk() is that it&#x27;s safe against symlink races (when follow_symlinks is False). If dir_fd is not None, it should be a file descriptor open to a directory, and top should be relative; top will then be relative to that directory. (dir_fd is always supported for fwalk.) Caution: Since fwalk() yields file descriptors, those are only valid until the next iteration step, so you should dup() them if you want to keep them for a longer period. Example: import os for root, dirs, files, rootfd in os.fwalk(&#x27;python/Lib/email&#x27;): print(root, &quot;consumes&quot;, end=&quot;&quot;) print(sum([os.stat(name, dir_fd=rootfd).st_size for name in files]), end=&quot;&quot;) print(&quot;bytes in&quot;, len(files), &quot;non-directory files&quot;) if &#x27;CVS&#x27; in dirs: dirs.remove(&#x27;CVS&#x27;) # don&#x27;t visit CVS directories get_blocking(...) get_blocking(fd) -&gt; bool Get the blocking mode of the file descriptor: False if the O_NONBLOCK flag is set, True if the flag is cleared. get_exec_path(env=None) Returns the sequence of directories that will be searched for the named executable (similar to a shell) when launching a process. *env* must be an environment variable dict or None. If *env* is None, os.environ will be used. get_inheritable(fd, /) Get the close-on-exe flag of the specified file descriptor. get_terminal_size(...) Return the size of the terminal window as (columns, lines). The optional argument fd (default standard output) specifies which file descriptor should be queried. If the file descriptor is not connected to a terminal, an OSError is thrown. This function will only be defined if an implementation is available for this system. shutil.get_terminal_size is the high-level function which should normally be used, os.get_terminal_size is the low-level implementation. getcwd() Return a unicode string representing the current working directory. getcwdb() Return a bytes string representing the current working directory. getegid() Return the current process&#x27;s effective group id. getenv(key, default=None) Get an environment variable, return None if it doesn&#x27;t exist. The optional second argument can specify an alternate default. key, default and the result are str. getenvb(key, default=None) Get an environment variable, return None if it doesn&#x27;t exist. The optional second argument can specify an alternate default. key, default and the result are bytes. geteuid() Return the current process&#x27;s effective user id. getgid() Return the current process&#x27;s group id. getgrouplist(...) getgrouplist(user, group) -&gt; list of groups to which a user belongs Returns a list of groups to which a user belongs. user: username to lookup group: base group id of the user getgroups() Return list of supplemental group IDs for the process. getloadavg() Return average recent system load information. Return the number of processes in the system run queue averaged over the last 1, 5, and 15 minutes as a tuple of three floats. Raises OSError if the load average was unobtainable. getlogin() Return the actual login name. getpgid(pid) Call the system call getpgid(), and return the result. getpgrp() Return the current process group id. getpid() Return the current process id. getppid() Return the parent&#x27;s process id. If the parent process has already exited, Windows machines will still return its id; others systems will return the id of the &#x27;init&#x27; process (1). getpriority(which, who) Return program scheduling priority. getsid(pid, /) Call the system call getsid(pid) and return the result. getuid() Return the current process&#x27;s user id. initgroups(...) initgroups(username, gid) -&gt; None Call the system initgroups() to initialize the group access list with all of the groups of which the specified username is a member, plus the specified group id. isatty(fd, /) Return True if the fd is connected to a terminal. Return True if the file descriptor is an open file descriptor connected to the slave end of a terminal. kill(pid, signal, /) Kill a process with a signal. killpg(pgid, signal, /) Kill a process group with a signal. lchflags(path, flags) Set file flags. This function will not follow symbolic links. Equivalent to chflags(path, flags, follow_symlinks=False). lchmod(path, mode) Change the access permissions of a file, without following symbolic links. If path is a symlink, this affects the link itself rather than the target. Equivalent to chmod(path, mode, follow_symlinks=False).&quot; lchown(path, uid, gid) Change the owner and group id of path to the numeric uid and gid. This function will not follow symbolic links. Equivalent to os.chown(path, uid, gid, follow_symlinks=False). link(src, dst, *, src_dir_fd=None, dst_dir_fd=None, follow_symlinks=True) Create a hard link to a file. If either src_dir_fd or dst_dir_fd is not None, it should be a file descriptor open to a directory, and the respective path string (src or dst) should be relative; the path will then be relative to that directory. If follow_symlinks is False, and the last element of src is a symbolic link, link will create a link to the symbolic link itself instead of the file the link points to. src_dir_fd, dst_dir_fd, and follow_symlinks may not be implemented on your platform. If they are unavailable, using them will raise a NotImplementedError. listdir(path=None) Return a list containing the names of the files in the directory. path can be specified as either str, bytes, or a path-like object. If path is bytes, the filenames returned will also be bytes; in all other circumstances the filenames returned will be str. If path is None, uses the path=&#x27;.&#x27;. On some platforms, path may also be specified as an open file descriptor;\\ the file descriptor must refer to a directory. If this functionality is unavailable, using it raises NotImplementedError. The list is in arbitrary order. It does not include the special entries &#x27;.&#x27; and &#x27;..&#x27; even if they are present in the directory. lockf(fd, command, length, /) Apply, test or remove a POSIX lock on an open file descriptor. fd An open file descriptor. command One of F_LOCK, F_TLOCK, F_ULOCK or F_TEST. length The number of bytes to lock, starting at the current position. lseek(fd, position, how, /) Set the position of a file descriptor. Return the new position. Return the new cursor position in number of bytes relative to the beginning of the file. lstat(path, *, dir_fd=None) Perform a stat system call on the given path, without following symbolic links. Like stat(), but do not follow symbolic links. Equivalent to stat(path, follow_symlinks=False). major(device, /) Extracts a device major number from a raw device number. makedev(major, minor, /) Composes a raw device number from the major and minor device numbers. makedirs(name, mode=511, exist_ok=False) makedirs(name [, mode=0o777][, exist_ok=False]) Super-mkdir; create a leaf directory and all intermediate ones. Works like mkdir, except that any intermediate path segment (not just the rightmost) will be created if it does not exist. If the target directory already exists, raise an OSError if exist_ok is False. Otherwise no exception is raised. This is recursive. minor(device, /) Extracts a device minor number from a raw device number. mkdir(path, mode=511, *, dir_fd=None) Create a directory. If dir_fd is not None, it should be a file descriptor open to a directory, and path should be relative; path will then be relative to that directory. dir_fd may not be implemented on your platform. If it is unavailable, using it will raise a NotImplementedError. The mode argument is ignored on Windows. mkfifo(path, mode=438, *, dir_fd=None) Create a &quot;fifo&quot; (a POSIX named pipe). If dir_fd is not None, it should be a file descriptor open to a directory, and path should be relative; path will then be relative to that directory. dir_fd may not be implemented on your platform. If it is unavailable, using it will raise a NotImplementedError. mknod(path, mode=384, device=0, *, dir_fd=None) Create a node in the file system. Create a node in the file system (file, device special file or named pipe) at path. mode specifies both the permissions to use and the type of node to be created, being combined (bitwise OR) with one of S_IFREG, S_IFCHR, S_IFBLK, and S_IFIFO. If S_IFCHR or S_IFBLK is set on mode, device defines the newly created device special file (probably using os.makedev()). Otherwise device is ignored. If dir_fd is not None, it should be a file descriptor open to a directory, and path should be relative; path will then be relative to that directory. dir_fd may not be implemented on your platform. If it is unavailable, using it will raise a NotImplementedError. nice(increment, /) Add increment to the priority of process and return the new priority. open(path, flags, mode=511, *, dir_fd=None) Open a file for low level IO. Returns a file descriptor (integer). If dir_fd is not None, it should be a file descriptor open to a directory, and path should be relative; path will then be relative to that directory. dir_fd may not be implemented on your platform. If it is unavailable, using it will raise a NotImplementedError. openpty() Open a pseudo-terminal. Return a tuple of (master_fd, slave_fd) containing open file descriptors for both the master and slave ends. pathconf(path, name) Return the configuration limit name for the file or directory path. If there is no limit, return -1. On some platforms, path may also be specified as an open file descriptor. If this functionality is unavailable, using it raises an exception. pipe() Create a pipe. Returns a tuple of two file descriptors: (read_fd, write_fd) popen(cmd, mode=&#x27;r&#x27;, buffering=-1) # Supply os.popen() pread(fd, length, offset, /) Read a number of bytes from a file descriptor starting at a particular offset. Read length bytes from file descriptor fd, starting at offset bytes from the beginning of the file. The file offset remains unchanged. putenv(name, value, /) Change or add an environment variable. pwrite(fd, buffer, offset, /) Write bytes to a file descriptor starting at a particular offset. Write buffer to fd, starting at offset bytes from the beginning of the file. Returns the number of bytes writte. Does not change the current file offset. read(fd, length, /) Read from a file descriptor. Returns a bytes object. readlink(...) readlink(path, *, dir_fd=None) -&gt; path Return a string representing the path to which the symbolic link points. If dir_fd is not None, it should be a file descriptor open to a directory, and path should be relative; path will then be relative to that directory. dir_fd may not be implemented on your platform. If it is unavailable, using it will raise a NotImplementedError. readv(fd, buffers, /) Read from a file descriptor fd into an iterable of buffers. The buffers should be mutable buffers accepting bytes. readv will transfer data into each buffer until it is full and then move on to the next buffer in the sequence to hold the rest of the data. readv returns the total number of bytes read, which may be less than the total capacity of all the buffers. register_at_fork(*, before=None, after_in_child=None, after_in_parent=None) Register callables to be called when forking a new process. before A callable to be called in the parent before the fork() syscall. after_in_child A callable to be called in the child after fork(). after_in_parent A callable to be called in the parent after fork(). &#x27;before&#x27; callbacks are called in reverse order. &#x27;after_in_child&#x27; and &#x27;after_in_parent&#x27; callbacks are called in order. remove(path, *, dir_fd=None) Remove a file (same as unlink()). If dir_fd is not None, it should be a file descriptor open to a directory, and path should be relative; path will then be relative to that directory. dir_fd may not be implemented on your platform. If it is unavailable, using it will raise a NotImplementedError. removedirs(name) removedirs(name) Super-rmdir; remove a leaf directory and all empty intermediate ones. Works like rmdir except that, if the leaf directory is successfully removed, directories corresponding to rightmost path segments will be pruned away until either the whole path is consumed or an error occurs. Errors during this latter phase are ignored -- they generally mean that a directory was not empty. rename(src, dst, *, src_dir_fd=None, dst_dir_fd=None) Rename a file or directory. If either src_dir_fd or dst_dir_fd is not None, it should be a file descriptor open to a directory, and the respective path string (src or dst) should be relative; the path will then be relative to that directory. src_dir_fd and dst_dir_fd, may not be implemented on your platform. If they are unavailable, using them will raise a NotImplementedError. renames(old, new) renames(old, new) Super-rename; create directories as necessary and delete any left empty. Works like rename, except creation of any intermediate directories needed to make the new pathname good is attempted first. After the rename, directories corresponding to rightmost path segments of the old name will be pruned until either the whole path is consumed or a nonempty directory is found. Note: this function can fail with the new directory structure made if you lack permissions needed to unlink the leaf directory or file. replace(src, dst, *, src_dir_fd=None, dst_dir_fd=None) Rename a file or directory, overwriting the destination. If either src_dir_fd or dst_dir_fd is not None, it should be a file descriptor open to a directory, and the respective path string (src or dst) should be relative; the path will then be relative to that directory. src_dir_fd and dst_dir_fd, may not be implemented on your platform. If they are unavailable, using them will raise a NotImplementedError. rmdir(path, *, dir_fd=None) Remove a directory. If dir_fd is not None, it should be a file descriptor open to a directory, and path should be relative; path will then be relative to that directory. dir_fd may not be implemented on your platform. If it is unavailable, using it will raise a NotImplementedError. scandir(path=None) Return an iterator of DirEntry objects for given path. path can be specified as either str, bytes, or a path-like object. If path is bytes, the names of yielded DirEntry objects will also be bytes; in all other circumstances they will be str. If path is None, uses the path=&#x27;.&#x27;. sched_get_priority_max(policy) Get the maximum scheduling priority for policy. sched_get_priority_min(policy) Get the minimum scheduling priority for policy. sched_yield() Voluntarily relinquish the CPU. sendfile(...) sendfile(out, in, offset, count) -&gt; byteswritten sendfile(out, in, offset, count[, headers][, trailers], flags=0) -&gt; byteswritten Copy count bytes from file descriptor in to file descriptor out. set_blocking(...) set_blocking(fd, blocking) Set the blocking mode of the specified file descriptor. Set the O_NONBLOCK flag if blocking is False, clear the O_NONBLOCK flag otherwise. set_inheritable(fd, inheritable, /) Set the inheritable flag of the specified file descriptor. setegid(egid, /) Set the current process&#x27;s effective group id. seteuid(euid, /) Set the current process&#x27;s effective user id. setgid(gid, /) Set the current process&#x27;s group id. setgroups(groups, /) Set the groups of the current process to list. setpgid(pid, pgrp, /) Call the system call setpgid(pid, pgrp). setpgrp() Make the current process the leader of its process group. setpriority(which, who, priority) Set program scheduling priority. setregid(rgid, egid, /) Set the current process&#x27;s real and effective group ids. setreuid(ruid, euid, /) Set the current process&#x27;s real and effective user ids. setsid() Call the system call setsid(). setuid(uid, /) Set the current process&#x27;s user id. spawnl(mode, file, *args) spawnl(mode, file, *args) -&gt; integer Execute file with arguments from args in a subprocess. If mode == P_NOWAIT return the pid of the process. If mode == P_WAIT return the process&#x27;s exit code if it exits normally; otherwise return -SIG, where SIG is the signal that killed it. spawnle(mode, file, *args) spawnle(mode, file, *args, env) -&gt; integer Execute file with arguments from args in a subprocess with the supplied environment. If mode == P_NOWAIT return the pid of the process. If mode == P_WAIT return the process&#x27;s exit code if it exits normally; otherwise return -SIG, where SIG is the signal that killed it. spawnlp(mode, file, *args) spawnlp(mode, file, *args) -&gt; integer Execute file (which is looked for along $PATH) with arguments from args in a subprocess with the supplied environment. If mode == P_NOWAIT return the pid of the process. If mode == P_WAIT return the process&#x27;s exit code if it exits normally; otherwise return -SIG, where SIG is the signal that killed it. spawnlpe(mode, file, *args) spawnlpe(mode, file, *args, env) -&gt; integer Execute file (which is looked for along $PATH) with arguments from args in a subprocess with the supplied environment. If mode == P_NOWAIT return the pid of the process. If mode == P_WAIT return the process&#x27;s exit code if it exits normally; otherwise return -SIG, where SIG is the signal that killed it. spawnv(mode, file, args) spawnv(mode, file, args) -&gt; integer Execute file with arguments from args in a subprocess. If mode == P_NOWAIT return the pid of the process. If mode == P_WAIT return the process&#x27;s exit code if it exits normally; otherwise return -SIG, where SIG is the signal that killed it. spawnve(mode, file, args, env) spawnve(mode, file, args, env) -&gt; integer Execute file with arguments from args in a subprocess with the specified environment. If mode == P_NOWAIT return the pid of the process. If mode == P_WAIT return the process&#x27;s exit code if it exits normally; otherwise return -SIG, where SIG is the signal that killed it. spawnvp(mode, file, args) spawnvp(mode, file, args) -&gt; integer Execute file (which is looked for along $PATH) with arguments from args in a subprocess. If mode == P_NOWAIT return the pid of the process. If mode == P_WAIT return the process&#x27;s exit code if it exits normally; otherwise return -SIG, where SIG is the signal that killed it. spawnvpe(mode, file, args, env) spawnvpe(mode, file, args, env) -&gt; integer Execute file (which is looked for along $PATH) with arguments from args in a subprocess with the supplied environment. If mode == P_NOWAIT return the pid of the process. If mode == P_WAIT return the process&#x27;s exit code if it exits normally; otherwise return -SIG, where SIG is the signal that killed it. stat(path, *, dir_fd=None, follow_symlinks=True) Perform a stat system call on the given path. path Path to be examined; can be string, bytes, a path-like object or open-file-descriptor int. dir_fd If not None, it should be a file descriptor open to a directory, and path should be a relative string; path will then be relative to that directory. follow_symlinks If False, and the last element of the path is a symbolic link, stat will examine the symbolic link itself instead of the file the link points to. dir_fd and follow_symlinks may not be implemented on your platform. If they are unavailable, using them will raise a NotImplementedError. It&#x27;s an error to use dir_fd or follow_symlinks when specifying path as an open file descriptor. statvfs(path) Perform a statvfs system call on the given path. path may always be specified as a string. On some platforms, path may also be specified as an open file descriptor. If this functionality is unavailable, using it raises an exception. strerror(code, /) Translate an error code to a message string. symlink(src, dst, target_is_directory=False, *, dir_fd=None) Create a symbolic link pointing to src named dst. target_is_directory is required on Windows if the target is to be interpreted as a directory. (On Windows, symlink requires Windows 6.0 or greater, and raises a NotImplementedError otherwise.) target_is_directory is ignored on non-Windows platforms. If dir_fd is not None, it should be a file descriptor open to a directory, and path should be relative; path will then be relative to that directory. dir_fd may not be implemented on your platform. If it is unavailable, using it will raise a NotImplementedError. sync() Force write of everything to disk. sysconf(name, /) Return an integer-valued system configuration variable. system(command) Execute the command in a subshell. tcgetpgrp(fd, /) Return the process group associated with the terminal specified by fd. tcsetpgrp(fd, pgid, /) Set the process group associated with the terminal specified by fd. times() Return a collection containing process timing information. The object returned behaves like a named tuple with these fields: (utime, stime, cutime, cstime, elapsed_time) All fields are floating point numbers. truncate(path, length) Truncate a file, specified by path, to a specific length. On some platforms, path may also be specified as an open file descriptor. If this functionality is unavailable, using it raises an exception. ttyname(fd, /) Return the name of the terminal device connected to &#x27;fd&#x27;. fd Integer file descriptor handle. umask(mask, /) Set the current numeric umask and return the previous umask. uname() Return an object identifying the current operating system. The object behaves like a named tuple with the following fields: (sysname, nodename, release, version, machine) unlink(path, *, dir_fd=None) Remove a file (same as remove()). If dir_fd is not None, it should be a file descriptor open to a directory, and path should be relative; path will then be relative to that directory. dir_fd may not be implemented on your platform. If it is unavailable, using it will raise a NotImplementedError. unsetenv(name, /) Delete an environment variable. urandom(size, /) Return a bytes object containing random bytes suitable for cryptographic use. utime(path, times=None, *, ns=None, dir_fd=None, follow_symlinks=True) Set the access and modified time of path. path may always be specified as a string. On some platforms, path may also be specified as an open file descriptor. If this functionality is unavailable, using it raises an exception. If times is not None, it must be a tuple (atime, mtime); atime and mtime should be expressed as float seconds since the epoch. If ns is specified, it must be a tuple (atime_ns, mtime_ns); atime_ns and mtime_ns should be expressed as integer nanoseconds since the epoch. If times is None and ns is unspecified, utime uses the current time. Specifying tuples for both times and ns is an error. If dir_fd is not None, it should be a file descriptor open to a directory, and path should be relative; path will then be relative to that directory. If follow_symlinks is False, and the last element of the path is a symbolic link, utime will modify the symbolic link itself instead of the file the link points to. It is an error to use dir_fd or follow_symlinks when specifying path as an open file descriptor. dir_fd and follow_symlinks may not be available on your platform. If they are unavailable, using them will raise a NotImplementedError. wait() Wait for completion of a child process. Returns a tuple of information about the child process: (pid, status) wait3(options) Wait for completion of a child process. Returns a tuple of information about the child process: (pid, status, rusage) wait4(pid, options) Wait for completion of a specific child process. Returns a tuple of information about the child process: (pid, status, rusage) waitpid(pid, options, /) Wait for completion of a given child process. Returns a tuple of information regarding the child process: (pid, status) The options argument is ignored on Windows. walk(top, topdown=True, onerror=None, followlinks=False) sched_get_priority_min(policy) Get the minimum scheduling priority for policy. sched_yield() Voluntarily relinquish the CPU. sendfile(...) sendfile(out, in, offset, count) -&gt; byteswritten sendfile(out, in, offset, count[, headers][, trailers], flags=0) -&gt; byteswritten Copy count bytes from file descriptor in to file descriptor out. set_blocking(...) set_blocking(fd, blocking) Set the blocking mode of the specified file descriptor. Set the O_NONBLOCK flag if blocking is False, clear the O_NONBLOCK flag otherwise. set_inheritable(fd, inheritable, /) Set the inheritable flag of the specified file descriptor. setegid(egid, /) Set the current process&#x27;s effective group id. seteuid(euid, /) Set the current process&#x27;s effective user id. setgid(gid, /) Set the current process&#x27;s group id. setgroups(groups, /) Set the groups of the current process to list. setpgid(pid, pgrp, /) Call the system call setpgid(pid, pgrp). setpgrp() Make the current process the leader of its process group. setpriority(which, who, priority) Set program scheduling priority. setregid(rgid, egid, /) Set the current process&#x27;s real and effective group ids. setreuid(ruid, euid, /) Set the current process&#x27;s real and effective user ids. setsid() Call the system call setsid(). setuid(uid, /) Set the current process&#x27;s user id. spawnl(mode, file, *args) spawnl(mode, file, *args) -&gt; integer Execute file with arguments from args in a subprocess. If mode == P_NOWAIT return the pid of the process. If mode == P_WAIT return the process&#x27;s exit code if it exits normally; otherwise return -SIG, where SIG is the signal that killed it. spawnle(mode, file, *args) spawnle(mode, file, *args, env) -&gt; integer Execute file with arguments from args in a subprocess with the supplied environment. If mode == P_NOWAIT return the pid of the process. If mode == P_WAIT return the process&#x27;s exit code if it exits normally; otherwise return -SIG, where SIG is the signal that killed it. spawnlp(mode, file, *args) spawnlp(mode, file, *args) -&gt; integer Execute file (which is looked for along $PATH) with arguments from args in a subprocess with the supplied environment. If mode == P_NOWAIT return the pid of the process. If mode == P_WAIT return the process&#x27;s exit code if it exits normally; otherwise return -SIG, where SIG is the signal that killed it. spawnlpe(mode, file, *args) spawnlpe(mode, file, *args, env) -&gt; integer Execute file (which is looked for along $PATH) with arguments from args in a subprocess with the supplied environment. If mode == P_NOWAIT return the pid of the process. If mode == P_WAIT return the process&#x27;s exit code if it exits normally; otherwise return -SIG, where SIG is the signal that killed it. spawnv(mode, file, args) spawnv(mode, file, args) -&gt; integer Execute file with arguments from args in a subprocess. If mode == P_NOWAIT return the pid of the process. If mode == P_WAIT return the process&#x27;s exit code if it exits normally; otherwise return -SIG, where SIG is the signal that killed it. spawnve(mode, file, args, env) spawnve(mode, file, args, env) -&gt; integer Execute file with arguments from args in a subprocess with the specified environment. If mode == P_NOWAIT return the pid of the process. If mode == P_WAIT return the process&#x27;s exit code if it exits normally; otherwise return -SIG, where SIG is the signal that killed it. spawnvp(mode, file, args) spawnvp(mode, file, args) -&gt; integer Execute file (which is looked for along $PATH) with arguments from args in a subprocess. If mode == P_NOWAIT return the pid of the process. If mode == P_WAIT return the process&#x27;s exit code if it exits normally; otherwise return -SIG, where SIG is the signal that killed it. spawnvpe(mode, file, args, env) spawnvpe(mode, file, args, env) -&gt; integer Execute file (which is looked for along $PATH) with arguments from args in a subprocess with the supplied environment. If mode == P_NOWAIT return the pid of the process. If mode == P_WAIT return the process&#x27;s exit code if it exits normally; otherwise return -SIG, where SIG is the signal that killed it. stat(path, *, dir_fd=None, follow_symlinks=True) Perform a stat system call on the given path. path Path to be examined; can be string, bytes, a path-like object or open-file-descriptor int. dir_fd If not None, it should be a file descriptor open to a directory, and path should be a relative string; path will then be relative to that directory. follow_symlinks If False, and the last element of the path is a symbolic link, stat will examine the symbolic link itself instead of the file the link points to. dir_fd and follow_symlinks may not be implemented on your platform. If they are unavailable, using them will raise a NotImplementedError. It&#x27;s an error to use dir_fd or follow_symlinks when specifying path as an open file descriptor. statvfs(path) Perform a statvfs system call on the given path. path may always be specified as a string. On some platforms, path may also be specified as an open file descriptor. If this functionality is unavailable, using it raises an exception. strerror(code, /) Translate an error code to a message string. symlink(src, dst, target_is_directory=False, *, dir_fd=None) Create a symbolic link pointing to src named dst. target_is_directory is required on Windows if the target is to be interpreted as a directory. (On Windows, symlink requires Windows 6.0 or greater, and raises a NotImplementedError otherwise.) target_is_directory is ignored on non-Windows platforms. If dir_fd is not None, it should be a file descriptor open to a directory, and path should be relative; path will then be relative to that directory. dir_fd may not be implemented on your platform. If it is unavailable, using it will raise a NotImplementedError. sync() Force write of everything to disk. sysconf(name, /) Return an integer-valued system configuration variable. system(command) Execute the command in a subshell. tcgetpgrp(fd, /) Return the process group associated with the terminal specified by fd. tcsetpgrp(fd, pgid, /) Set the process group associated with the terminal specified by fd. times() Return a collection containing process timing information. The object returned behaves like a named tuple with these fields: (utime, stime, cutime, cstime, elapsed_time) All fields are floating point numbers. truncate(path, length) Truncate a file, specified by path, to a specific length. On some platforms, path may also be specified as an open file descriptor. If this functionality is unavailable, using it raises an exception. ttyname(fd, /) Return the name of the terminal device connected to &#x27;fd&#x27;. fd Integer file descriptor handle. umask(mask, /) Set the current numeric umask and return the previous umask. uname() Return an object identifying the current operating system. The object behaves like a named tuple with the following fields: (sysname, nodename, release, version, machine) unlink(path, *, dir_fd=None) Remove a file (same as remove()). If dir_fd is not None, it should be a file descriptor open to a directory, and path should be relative; path will then be relative to that directory. dir_fd may not be implemented on your platform. If it is unavailable, using it will raise a NotImplementedError. unsetenv(name, /) Delete an environment variable. urandom(size, /) Return a bytes object containing random bytes suitable for cryptographic use. utime(path, times=None, *, ns=None, dir_fd=None, follow_symlinks=True) Set the access and modified time of path. path may always be specified as a string. On some platforms, path may also be specified as an open file descriptor. If this functionality is unavailable, using it raises an exception. If times is not None, it must be a tuple (atime, mtime); atime and mtime should be expressed as float seconds since the epoch. If ns is specified, it must be a tuple (atime_ns, mtime_ns); atime_ns and mtime_ns should be expressed as integer nanoseconds since the epoch. If times is None and ns is unspecified, utime uses the current time. Specifying tuples for both times and ns is an error. If dir_fd is not None, it should be a file descriptor open to a directory, and path should be relative; path will then be relative to that directory. If follow_symlinks is False, and the last element of the path is a symbolic link, utime will modify the symbolic link itself instead of the file the link points to. It is an error to use dir_fd or follow_symlinks when specifying path as an open file descriptor. dir_fd and follow_symlinks may not be available on your platform. If they are unavailable, using them will raise a NotImplementedError. wait() Wait for completion of a child process. Returns a tuple of information about the child process: (pid, status) wait3(options) Wait for completion of a child process. Returns a tuple of information about the child process: (pid, status, rusage) wait4(pid, options) Wait for completion of a specific child process. Returns a tuple of information about the child process: (pid, status, rusage) waitpid(pid, options, /) Wait for completion of a given child process. Returns a tuple of information regarding the child process: (pid, status) The options argument is ignored on Windows. walk(top, topdown=True, onerror=None, followlinks=False) Directory tree generator. For each directory in the directory tree rooted at top (including top itself, but excluding &#x27;.&#x27; and &#x27;..&#x27;), yields a 3-tuple dirpath, dirnames, filenames dirpath is a string, the path to the directory. dirnames is a list of the names of the subdirectories in dirpath (excluding &#x27;.&#x27; and &#x27;..&#x27;). filenames is a list of the names of the non-directory files in dirpath. Note that the names in the lists are just names, with no path components. To get a full path (which begins with top) to a file or directory in dirpath, do os.path.join(dirpath, name). If optional arg &#x27;topdown&#x27; is true or not specified, the triple for a directory is generated before the triples for any of its subdirectories (directories are generated top down). If topdown is false, the triple for a directory is generated after the triples for all of its subdirectories (directories are generated bottom up). When topdown is true, the caller can modify the dirnames list in-place (e.g., via del or slice assignment), and walk will only recurse into the subdirectories whose names remain in dirnames; this can be used to prune the search, or to impose a specific order of visiting. Modifying dirnames when topdown is false is ineffective, since the directories in dirnames have already been generated by the time dirnames itself is generated. No matter the value of topdown, the list of subdirectories is retrieved before the tuples for the directory and its subdirectories are generated. By default errors from the os.scandir() call are ignored. If optional arg &#x27;onerror&#x27; is specified, it should be a function; it will be called with one argument, an OSError instance. It can report the error to continue with the walk, or raise the exception to abort the walk. Note that the filename is available as the filename attribute of the exception object. By default, os.walk does not follow symbolic links to subdirectories on systems that support them. In order to get this functionality, set the optional argument &#x27;followlinks&#x27; to true. Caution: if you pass a relative pathname for top, don&#x27;t change the current working directory between resumptions of walk. walk never changes the current directory, and assumes that the client doesn&#x27;t either. Example: import os from os.path import join, getsize for root, dirs, files in os.walk(&#x27;python/Lib/email&#x27;): print(root, &quot;consumes&quot;, end=&quot;&quot;) print(sum([getsize(join(root, name)) for name in files]), end=&quot;&quot;) print(&quot;bytes in&quot;, len(files), &quot;non-directory files&quot;) if &#x27;CVS&#x27; in dirs: dirs.remove(&#x27;CVS&#x27;) # don&#x27;t visit CVS directories write(fd, data, /) Write a bytes object to a file descriptor. writev(fd, buffers, /) Iterate over buffers, and write the contents of each to a file descriptor. Returns the total number of bytes written. buffers must be a sequence of bytes-like objects. DATA1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980818283848586878889909192939495CLD_CONTINUED = 6CLD_DUMPED = 3CLD_EXITED = 1CLD_TRAPPED = 4EX_CANTCREAT = 73EX_CONFIG = 78EX_DATAERR = 65EX_IOERR = 74EX_NOHOST = 68EX_NOINPUT = 66EX_NOPERM = 77EX_NOUSER = 67EX_OK = 0EX_OSERR = 71EX_OSFILE = 72EX_PROTOCOL = 76EX_SOFTWARE = 70EX_TEMPFAIL = 75EX_UNAVAILABLE = 69EX_USAGE = 64F_LOCK = 1F_OK = 0F_TEST = 3F_TLOCK = 2F_ULOCK = 0NGROUPS_MAX = 16O_ACCMODE = 3O_APPEND = 8O_ASYNC = 64O_CLOEXEC = 16777216O_CREAT = 512O_DIRECTORY = 1048576O_DSYNC = 4194304O_EXCL = 2048O_EXLOCK = 32O_NDELAY = 4O_NOCTTY = 131072O_NOFOLLOW = 256O_NONBLOCK = 4O_RDONLY = 0O_RDWR = 2O_SHLOCK = 16O_SYNC = 128O_TRUNC = 1024O_WRONLY = 1PRIO_PGRP = 1PRIO_PROCESS = 0PRIO_USER = 2P_ALL = 0P_NOWAIT = 1P_NOWAITO = 1P_PGID = 2P_PID = 1P_WAIT = 0RTLD_GLOBAL = 8RTLD_LAZY = 1RTLD_LOCAL = 4RTLD_NODELETE = 128RTLD_NOLOAD = 16RTLD_NOW = 2R_OK = 4SCHED_FIFO = 4SCHED_OTHER = 1SCHED_RR = 2SEEK_CUR = 1SEEK_END = 2SEEK_SET = 0ST_NOSUID = 2ST_RDONLY = 1TMP_MAX = 308915776WCONTINUED = 16WEXITED = 4WNOHANG = 1WNOWAIT = 32WSTOPPED = 8WUNTRACED = 2W_OK = 2X_OK = 1__all__ = [&#x27;altsep&#x27;, &#x27;curdir&#x27;, &#x27;pardir&#x27;, &#x27;sep&#x27;, &#x27;pathsep&#x27;, &#x27;linesep&#x27;, ...altsep = Noneconfstr_names = &#123;&#x27;CS_PATH&#x27;: 1, &#x27;CS_XBS5_ILP32_OFF32_CFLAGS&#x27;: 20, &#x27;CS_X...curdir = &#x27;.&#x27;defpath = &#x27;:/bin:/usr/bin&#x27;devnull = &#x27;/dev/null&#x27;environ = environ(&#123;&#x27;TERM_PROGRAM&#x27;: &#x27;Apple_Terminal&#x27;, &#x27;SHEL...e&#x27;, &#x27;_&#x27;: ...environb = environ(&#123;b&#x27;TERM_PROGRAM&#x27;: b&#x27;Apple_Terminal&#x27;, b&#x27;S..., b&#x27;_&#x27;: ...extsep = &#x27;.&#x27;linesep = &#x27;\\n&#x27;name = &#x27;posix&#x27;pardir = &#x27;..&#x27;pathconf_names = &#123;&#x27;PC_ALLOC_SIZE_MIN&#x27;: 16, &#x27;PC_ASYNC_IO&#x27;: 17, &#x27;PC_CHOW...pathsep = &#x27;:&#x27;sep = &#x27;/&#x27;supports_bytes_environ = Truesysconf_names = &#123;&#x27;SC_2_CHAR_TERM&#x27;: 20, &#x27;SC_2_C_BIND&#x27;: 18, &#x27;SC_2_C_DEV&#x27;...","raw":null,"content":null,"categories":[{"name":"PYTHON","slug":"PYTHON","permalink":"https://mumu-1005.github.io/pishon/categories/PYTHON/"}],"tags":[{"name":"help","slug":"help","permalink":"https://mumu-1005.github.io/pishon/tags/help/"},{"name":"os","slug":"os","permalink":"https://mumu-1005.github.io/pishon/tags/os/"}]},{"title":"列表去重保留最后面的元素","slug":"列表去重保留最后面的元素","date":"2018-02-27T11:55:07.000Z","updated":"2018-02-27T11:55:07.000Z","comments":false,"path":"/articles/列表去重保留最后面的元素.html","link":"","permalink":"https://mumu-1005.github.io/pishon/articles/%E5%88%97%E8%A1%A8%E5%8E%BB%E9%87%8D%E4%BF%9D%E7%95%99%E6%9C%80%E5%90%8E%E9%9D%A2%E7%9A%84%E5%85%83%E7%B4%A0.html","excerpt":"","keywords":null,"text":"1234567new_list = []for i in old_list: if i not in new_list: new_list.append(i) else: new_list.remove(i) new_list.append(i)","raw":null,"content":null,"categories":[{"name":"PYTHON","slug":"PYTHON","permalink":"https://mumu-1005.github.io/pishon/categories/PYTHON/"}],"tags":[{"name":"Python","slug":"Python","permalink":"https://mumu-1005.github.io/pishon/tags/Python/"},{"name":"list","slug":"list","permalink":"https://mumu-1005.github.io/pishon/tags/list/"}]},{"title":"MySQL Connector/Python","slug":"mysql-connector-help","date":"2018-02-01T03:28:08.000Z","updated":"2019-03-05T13:16:54.000Z","comments":false,"path":"/articles/mysql-connector-help.html","link":"","permalink":"https://mumu-1005.github.io/pishon/articles/mysql-connector-help.html","excerpt":"","keywords":null,"text":"Help on package mysql.connector in mysqlNAME1# mysql.connector - MySQL Connector/Python - MySQL driver written in Python PACKAGE CONTENTS12345678910111213141516171819202122abstractsauthenticationcatch23charsetsconnectionconnection_cextconstantsconversioncursorcursor_cextcustom_typesdbapidjango (package)errorcodeerrorslocales (package)networkoptionfilespoolingprotocolutilsversion CLASSES123456789101112131415161718192021222324252627282930builtins.Exception(builtins.BaseException)- mysql.connector.errors.Error - mysql.connector.errors.DatabaseError - mysql.connector.errors.DataError - mysql.connector.errors.IntegrityError - mysql.connector.errors.InternalError - mysql.connector.errors.NotSupportedError - mysql.connector.errors.OperationalError - mysql.connector.errors.ProgrammingError - mysql.connector.errors.InterfaceError- mysql.connector.errors.Warningbuiltins.object- builtins.bytes- datetime.date - datetime.datetime- datetime.timemysql.connector.abstracts.MySQLConnectionAbstract(mysql.connector.abstracts.MySQLConnectionAbstract, builtins.object)- mysql.connector.connection.MySQLConnection- mysql.connector.connection_cext.CMySQLConnectionmysql.connector.constants._Constants(builtins.object)- mysql.connector.constants.CharacterSet- mysql.connector.constants.FieldType- mysql.connector.constants.RefreshOptionmysql.connector.constants._Flags(mysql.connector.constants._Constants)- mysql.connector.constants.ClientFlag- mysql.connector.constants.FieldFlag  = class bytes(object) | bytes(iterable_of_ints) -&gt; bytes | bytes(string, encoding[, errors]) -&gt; bytes | bytes(bytes_or_buffer) -&gt; immutable copy of bytes_or_buffer | bytes(int) -&gt; bytes object of size given by the parameter initialized with null bytes | bytes() -&gt; empty bytes object | | Construct an immutable array of bytes from: | - an iterable yielding integers in range(256) | - a text string encoded using the specified encoding | - any object implementing the buffer API. | - an integer | | Methods defined here: | | __add__(self, value, /) | Return self+value. | | __contains__(self, key, /) | Return key in self. | | __eq__(self, value, /) | Return self==value. | | __ge__(self, value, /) | Return self&gt;=value. | | __getattribute__(self, name, /) | Return getattr(self, name). | | __getitem__(self, key, /) | Return self[key]. | | __getnewargs__(...) | | __gt__(self, value, /) | Return self&gt;value. | | __hash__(self, /) | Return hash(self). | | __iter__(self, /) | Implement iter(self). | | __le__(self, value, /) | Return self&lt;=value. | | __len__(self, /) | Return len(self). | | __lt__(self, value, /) | Return self&lt;value. | | __mod__(self, value, /) | Return self%value. | | __mul__(self, value, /) | Return self*value. | | __ne__(self, value, /) | Return self!=value. | | __repr__(self, /) | Return repr(self). | | __rmod__(self, value, /) | Return value%self. | | __rmul__(self, value, /) | Return value*self. | | __str__(self, /) | Return str(self). | | capitalize(...) | B.capitalize() -&gt; copy of B | | Return a copy of B with only its first character capitalized (ASCII) | and the rest lower-cased. | | center(...) | B.center(width[, fillchar]) -&gt; copy of B | | Return B centered in a string of length width. Padding is | done using the specified fill character (default is a space). | | count(...) | B.count(sub[, start[, end]]) -&gt; int | | Return the number of non-overlapping occurrences of subsection sub in | bytes B[start:end]. Optional arguments start and end are interpreted | as in slice notation. | | decode(self, /, encoding=&#x27;utf-8&#x27;, errors=&#x27;strict&#x27;) | Decode the bytes using the codec registered for encoding. | | encoding | The encoding with which to decode the bytes. | errors | The error handling scheme to use for the handling of decoding errors. | The default is &#x27;strict&#x27; meaning that decoding errors raise a | UnicodeDecodeError. Other possible values are &#x27;ignore&#x27; and &#x27;replace&#x27; | as well as any other name registered with codecs.register_error that | can handle UnicodeDecodeErrors. | | endswith(...) | B.endswith(suffix[, start[, end]]) -&gt; bool | | Return True if B ends with the specified suffix, False otherwise. | With optional start, test B beginning at that position. | With optional end, stop comparing B at that position. | suffix can also be a tuple of bytes to try. | | expandtabs(...) | B.expandtabs(tabsize=8) -&gt; copy of B | | Return a copy of B where all tab characters are expanded using spaces. | If tabsize is not given, a tab size of 8 characters is assumed. | | find(...) | B.find(sub[, start[, end]]) -&gt; int | | Return the lowest index in B where subsection sub is found, | such that sub is contained within B[start,end]. Optional | arguments start and end are interpreted as in slice notation. | | Return -1 on failure. | | hex(...) | B.hex() -&gt; string | | Create a string of hexadecimal numbers from a bytes object. | Example: b&#x27;\\xb9\\x01\\xef&#x27;.hex() -&gt; &#x27;b901ef&#x27;. | | index(...) | B.index(sub[, start[, end]]) -&gt; int | | Return the lowest index in B where subsection sub is found, | such that sub is contained within B[start,end]. Optional | arguments start and end are interpreted as in slice notation. | | Raises ValueError when the subsection is not found. | | isalnum(...) | B.isalnum() -&gt; bool | | Return True if all characters in B are alphanumeric | and there is at least one character in B, False otherwise. | | isalpha(...) | B.isalpha() -&gt; bool | | Return True if all characters in B are alphabetic | and there is at least one character in B, False otherwise. | | isascii(...) | B.isascii() -&gt; bool | | Return True if B is empty or all characters in B are ASCII, | False otherwise. | | isdigit(...) | B.isdigit() -&gt; bool | | Return True if all characters in B are digits | and there is at least one character in B, False otherwise. | | islower(...) | B.islower() -&gt; bool | | Return True if all cased characters in B are lowercase and there is | at least one cased character in B, False otherwise. | | isspace(...) | B.isspace() -&gt; bool | | Return True if all characters in B are whitespace | and there is at least one character in B, False otherwise. | | istitle(...) | B.istitle() -&gt; bool | | Return True if B is a titlecased string and there is at least one | character in B, i.e. uppercase characters may only follow uncased | characters and lowercase characters only cased ones. Return False | otherwise. | | isupper(...) | B.isupper() -&gt; bool | | Return True if all cased characters in B are uppercase and there is | at least one cased character in B, False otherwise. | | join(self, iterable_of_bytes, /) | Concatenate any number of bytes objects. | | The bytes whose method is called is inserted in between each pair. | | The result is returned as a new bytes object. | | Example: b&#x27;.&#x27;.join([b&#x27;ab&#x27;, b&#x27;pq&#x27;, b&#x27;rs&#x27;]) -&gt; b&#x27;ab.pq.rs&#x27;. | | ljust(...) | B.ljust(width[, fillchar]) -&gt; copy of B | | Return B left justified in a string of length width. Padding is | done using the specified fill character (default is a space). | | lower(...) | B.lower() -&gt; copy of B | | Return a copy of B with all ASCII characters converted to lowercase. | | lstrip(self, bytes=None, /) | Strip leading bytes contained in the argument. | | If the argument is omitted or None, strip leading ASCII whitespace. | | partition(self, sep, /) | Partition the bytes into three parts using the given separator. | | This will search for the separator sep in the bytes. If the separator is found, | returns a 3-tuple containing the part before the separator, the separator | itself, and the part after it. | | If the separator is not found, returns a 3-tuple containing the original bytes | object and two empty bytes objects. | | replace(self, old, new, count=-1, /) | Return a copy with all occurrences of substring old replaced by new. | | count | Maximum number of occurrences to replace. | -1 (the default value) means replace all occurrences. | | If the optional argument count is given, only the first count occurrences are | replaced. | | rfind(...) | B.rfind(sub[, start[, end]]) -&gt; int | | Return the highest index in B where subsection sub is found, | such that sub is contained within B[start,end]. Optional | arguments start and end are interpreted as in slice notation. | | Return -1 on failure. | | rindex(...) | B.rindex(sub[, start[, end]]) -&gt; int | | Return the highest index in B where subsection sub is found, | such that sub is contained within B[start,end]. Optional | arguments start and end are interpreted as in slice notation. | | Raise ValueError when the subsection is not found. | | rjust(...) | B.rjust(width[, fillchar]) -&gt; copy of B | | Return B right justified in a string of length width. Padding is | done using the specified fill character (default is a space) | | rpartition(self, sep, /) | Partition the bytes into three parts using the given separator. | | This will search for the separator sep in the bytes, starting at the end. If | the separator is found, returns a 3-tuple containing the part before the | separator, the separator itself, and the part after it. | | If the separator is not found, returns a 3-tuple containing two empty bytes | objects and the original bytes object. | | rsplit(self, /, sep=None, maxsplit=-1) | Return a list of the sections in the bytes, using sep as the delimiter. | | sep | The delimiter according which to split the bytes. | None (the default value) means split on ASCII whitespace characters | (space, tab, return, newline, formfeed, vertical tab). | maxsplit | Maximum number of splits to do. | -1 (the default value) means no limit. | | Splitting is done starting at the end of the bytes and working to the front. | | rstrip(self, bytes=None, /) | Strip trailing bytes contained in the argument. | | If the argument is omitted or None, strip trailing ASCII whitespace. | | split(self, /, sep=None, maxsplit=-1) | Return a list of the sections in the bytes, using sep as the delimiter. | | sep | The delimiter according which to split the bytes. | None (the default value) means split on ASCII whitespace characters | (space, tab, return, newline, formfeed, vertical tab). | maxsplit | Maximum number of splits to do. | -1 (the default value) means no limit. | | splitlines(self, /, keepends=False) | Return a list of the lines in the bytes, breaking at line boundaries. | | Line breaks are not included in the resulting list unless keepends is given and | true. | | startswith(...) | B.startswith(prefix[, start[, end]]) -&gt; bool | | Return True if B starts with the specified prefix, False otherwise. | With optional start, test B beginning at that position. | With optional end, stop comparing B at that position. | prefix can also be a tuple of bytes to try. | | strip(self, bytes=None, /) | Strip leading and trailing bytes contained in the argument. | | If the argument is omitted or None, strip leading and trailing ASCII whitespace. | | swapcase(...) | B.swapcase() -&gt; copy of B | | Return a copy of B with uppercase ASCII characters converted | to lowercase ASCII and vice versa. | | title(...) | B.title() -&gt; copy of B | | Return a titlecased version of B, i.e. ASCII words start with uppercase | characters, all remaining cased characters have lowercase. | | translate(self, table, /, delete=b&#x27;&#x27;) | Return a copy with each character mapped by the given translation table. | | table | Translation table, which must be a bytes object of length 256. | | All characters occurring in the optional argument delete are removed. | The remaining characters are mapped through the given translation table. | | upper(...) | B.upper() -&gt; copy of B | | Return a copy of B with all ASCII characters converted to uppercase. | | zfill(...) | B.zfill(width) -&gt; copy of B | | Pad a numeric string B with zeros on the left, to fill a field | of the specified width. B is never truncated. | | ---------------------------------------------------------------------- | Class methods defined here: | | fromhex(string, /) from builtins.type | Create a bytes object from a string of hexadecimal numbers. | | Spaces between two numbers are accepted. | Example: bytes.fromhex(&#x27;B9 01EF&#x27;) -&gt; b&#x27;\\\\xb9\\\\x01\\\\xef&#x27;. | | ---------------------------------------------------------------------- | Static methods defined here: | | __new__(*args, **kwargs) from builtins.type | Create and return a new object. See help(type) for accurate signature. | | maketrans(frm, to, /) | Return a translation table useable for the bytes or bytearray translate method. | | The returned table will be one where each byte in frm is mapped to the byte at | the same position in to. | | The bytes objects frm and to must be of the same length. class CMySQLConnection(mysql.connector.abstracts.MySQLConnectionAbstract) | CMySQLConnection(**kwargs) | | Class initiating a MySQL Connection using Connector/C | | Method resolution order: | CMySQLConnection | mysql.connector.abstracts.MySQLConnectionAbstract | mysql.connector.abstracts.MySQLConnectionAbstract | builtins.object | | Methods defined here: | | __init__(self, **kwargs) | Initialization | | close(self) | Disconnect from the MySQL server | | cmd_change_user(self, username=&#x27;&#x27;, password=&#x27;&#x27;, database=&#x27;&#x27;, charset=45) | Change the current logged in user | | cmd_init_db(self, database) | Change the current database | | cmd_process_kill(self, mysql_pid) | Kill a MySQL process | | cmd_query(self, query, raw=None, buffered=False, raw_as_string=False) | Send a query to the MySQL server | | cmd_quit(self) | Close the current connection with the server | | cmd_refresh(self, options) | Send the Refresh command to the MySQL server | | cmd_shutdown(self, shutdown_type=None) | Shut down the MySQL Server | | cmd_statistics(self) | Return statistics from the MySQL server | | commit(self) | Commit current transaction | | consume_results(self) | Consume the current result | | This method consume the result by reading (consuming) all rows. | | cursor(self, buffered=None, raw=None, prepared=None, cursor_class=None, dictionary=None, named_tuple=None) | Instantiates and returns a cursor using C Extension | | By default, CMySQLCursor is returned. Depending on the options | while connecting, a buffered and/or raw cursor is instantiated | instead. Also depending upon the cursor options, rows can be | returned as dictionary or named tuple. | | Dictionary and namedtuple based cursors are available with buffered | output but not raw. | | It is possible to also give a custom cursor through the | cursor_class parameter, but it needs to be a subclass of | mysql.connector.cursor_cext.CMySQLCursor. | | Raises ProgrammingError when cursor_class is not a subclass of | CursorBase. Raises ValueError when cursor is not available. | | Returns instance of CMySQLCursor or subclass. | | :param buffered: Return a buffering cursor | :param raw: Return a raw cursor | :param prepared: Return a cursor which uses prepared statements | :param cursor_class: Use a custom cursor class | :param dictionary: Rows are returned as dictionary | :param named_tuple: Rows are returned as named tuple | :return: Subclass of CMySQLCursor | :rtype: CMySQLCursor or subclass | | disconnect = close(self) | | fetch_eof_columns(self) | Fetch EOF and column information | | fetch_eof_status(self) | Fetch EOF and status information | | free_result(self) | Frees the result | | get_row(self, binary=False, columns=None, raw=None) | Get the next rows returned by the MySQL server | | get_rows(self, count=None, binary=False, columns=None, raw=None) | Get all or a subset of rows returned by the MySQL server | | handle_unread_result(self) | Check whether there is an unread result | | info_query(self, query) | Send a query which only returns 1 row | | is_connected(self) | Reports whether the connection to MySQL Server is available | | next_result(self) | Reads the next result | | ping(self, reconnect=False, attempts=1, delay=0) | Check availability of the MySQL server | | When reconnect is set to True, one or more attempts are made to try | to reconnect to the MySQL server using the reconnect()-method. | | delay is the number of seconds to wait between each retry. | | When the connection is not available, an InterfaceError is raised. Use | the is_connected()-method if you just want to check the connection | without raising an error. | | Raises InterfaceError on errors. | | prepare_for_mysql(self, params) | Prepare parameters for statements | | This method is use by cursors to prepared parameters found in the | list (or tuple) params. | | Returns dict. | | rollback(self) | Rollback current transaction | | set_character_set_name(self, charset) | Sets the default character set name for current connection. | | set_unicode(self, value=True) | Toggle unicode mode | | Set whether we return string fields as unicode or not. | Default is True. | | ---------------------------------------------------------------------- | Data descriptors defined here: | | autocommit | Get whether autocommit is on or off | | connection_id | MySQL connection ID | | database | Get the current database | | in_transaction | MySQL session has started a transaction | | more_results | Check if there are more results | | num_rows | Returns number of rows of current result set | | result_set_available | Check if a result set is available | | unread_result | Check if there are unread results or rows | | warning_count | Returns number of warnings | | ---------------------------------------------------------------------- | Data and other attributes defined here: | | __abstractmethods__ = frozenset() | | ---------------------------------------------------------------------- | Methods inherited from mysql.connector.abstracts.MySQLConnectionAbstract: | | cmd_debug(self) | Send the DEBUG command | | cmd_ping(self) | Send the PING command | | cmd_process_info(self) | Get the process list of the MySQL Server | | This method is a placeholder to notify that the PROCESS_INFO command | is not supported by raising the NotSupportedError. The command | &quot;SHOW PROCESSLIST&quot; should be send using the cmd_query()-method or | using the INFORMATION_SCHEMA database. | | Raises NotSupportedError exception | | cmd_query_iter(self, statements) | Send one or more statements to the MySQL server | | cmd_reset_connection(self) | Resets the session state without re-authenticating | | cmd_stmt_close(self, statement_id) | Deallocate a prepared MySQL statement | | cmd_stmt_execute(self, statement_id, data=(), parameters=(), flags=0) | Execute a prepared MySQL statement | | cmd_stmt_prepare(self, statement) | Prepare a MySQL statement | | cmd_stmt_reset(self, statement_id) | Reset data for prepared statement sent as long data | | cmd_stmt_send_long_data(self, statement_id, param_id, data) | Send data for a column | | config(self, **kwargs) | Configure the MySQL Connection | | This method allows you to configure the MySQLConnection instance. | | Raises on errors. | | connect(self, **kwargs) | Connect to the MySQL server | | This method sets up the connection to the MySQL server. If no | arguments are given, it will use the already configured or default | values. | | get_server_info(self) | Get the original MySQL version information | | This method returns the original MySQL server as text. If not | previously connected, it will return None. | | Returns a string or None. | | get_server_version(self) | Get the MySQL version | | This method returns the MySQL server version as a tuple. If not | previously connected, it will return None. | | Returns a tuple or None. | | isset_client_flag(self, flag) | Check if a client flag is set | | reconnect(self, attempts=1, delay=0) | Attempt to reconnect to the MySQL server | | The argument attempts should be the number of times a reconnect | is tried. The delay argument is the number of seconds to wait between | each retry. | | You may want to set the number of attempts higher and use delay when | you expect the MySQL server to be down for maintenance or when you | expect the network to be temporary unavailable. | | Raises InterfaceError on errors. | | reset_session(self, user_variables=None, session_variables=None) | Clears the current active session | | This method resets the session state, if the MySQL server is 5.7.3 | or later active session will be reset without re-authenticating. | For other server versions session will be reset by re-authenticating. | | It is possible to provide a sequence of variables and their values to | be set after clearing the session. This is possible for both user | defined variables and session variables. | This method takes two arguments user_variables and session_variables | which are dictionaries. | | Raises OperationalError if not connected, InternalError if there are | unread results and InterfaceError on errors. | | set_charset_collation(self, charset=None, collation=None) | Sets the character set and collation for the current connection | | This method sets the character set and collation to be used for | the current connection. The charset argument can be either the | name of a character set as a string, or the numerical equivalent | as defined in constants.CharacterSet. | | When the collation is not given, the default will be looked up and | used. | | For example, the following will set the collation for the latin1 | character set to latin1_general_ci: | | set_charset(&#x27;latin1&#x27;,&#x27;latin1_general_ci&#x27;) | | set_client_flags(self, flags) | Set the client flags | | The flags-argument can be either an int or a list (or tuple) of | ClientFlag-values. If it is an integer, it will set client_flags | to flags as is. | If flags is a list (or tuple), each flag will be set or unset | when it is negative. | | set_client_flags([ClientFlag.FOUND_ROWS,-ClientFlag.LONG_FLAG]) | | Raises ProgrammingError when the flags argument is not a set or | an integer bigger than 0. | | Returns self.client_flags | | set_converter_class(self, convclass) | Set the converter class to be used. This should be a class overloading | methods and members of conversion.MySQLConverter. | | set_login(self, username=None, password=None) | Set login information for MySQL | | Set the username and/or password for the user connecting to | the MySQL Server. | | start_transaction(self, consistent_snapshot=False, isolation_level=None, readonly=None) | Start a transaction | | This method explicitly starts a transaction sending the | START TRANSACTION statement to the MySQL server. You can optionally | set whether there should be a consistent snapshot, which | isolation level you need or which access mode i.e. READ ONLY or | READ WRITE. | | For example, to start a transaction with isolation level SERIALIZABLE, | you would do the following: | &gt;&gt;&gt; cnx = mysql.connector.connect(..) | &gt;&gt;&gt; cnx.start_transaction(isolation_level=&#x27;SERIALIZABLE&#x27;) | | Raises ProgrammingError when a transaction is already in progress | and when ValueError when isolation_level specifies an Unknown | level. | | ---------------------------------------------------------------------- | Data descriptors inherited from mysql.connector.abstracts.MySQLConnectionAbstract: | | can_consume_results | Returns whether to consume results | | charset | Returns the character set for current connection | | This property returns the character set name of the current connection. | The server is queried when the connection is active. If not connected, | the configured character set name is returned. | | Returns a string. | | collation | Returns the collation for current connection | | This property returns the collation name of the current connection. | The server is queried when the connection is active. If not connected, | the configured collation name is returned. | | Returns a string. | | get_warnings | Get whether this connection retrieves warnings automatically | | This method returns whether this connection retrieves warnings | automatically. | | Returns True, or False when warnings are not retrieved. | | python_charset | Returns the Python character set for current connection | | This property returns the character set name of the current connection. | Note that, unlike property charset, this checks if the previously set | character set is supported by Python and if not, it returns the | equivalent character set that Python supports. | | Returns a string. | | raise_on_warnings | Get whether this connection raises an error on warnings | | This method returns whether this connection will raise errors when | MySQL reports warnings. | | Returns True or False. | | server_host | MySQL server IP address or name | | server_port | MySQL server TCP/IP port | | sql_mode | Get the SQL mode | | time_zone | Get the current time zone | | unix_socket | MySQL Unix socket file location | | user | User used while connecting to MySQL | | ---------------------------------------------------------------------- | Data descriptors inherited from mysql.connector.abstracts.MySQLConnectionAbstract: | | __dict__ | dictionary for instance variables (if defined) | | __weakref__ | list of weak references to the object (if defined) class CharacterSet(_Constants) | MySQL supported character sets and collations | | List of character sets with their collations supported by MySQL. This | maps to the character set we get from the server within the handshake | packet. | | The list is hardcode so we avoid a database query when getting the | name of the used character set or collation. | | Method resolution order: | CharacterSet | _Constants | builtins.object | | Class methods defined here: | | get_charset_info(charset=None, collation=None) from builtins.type | Get character set information using charset name and/or collation | | Retrieves character set and collation information given character | set name and/or a collation name. | If charset is an integer, it will look up the character set based | on the MySQL&#x27;s ID. | For example: | get_charset_info(&#x27;utf8&#x27;,None) | get_charset_info(collation=&#x27;utf8_general_ci&#x27;) | get_charset_info(47) | | Raises ProgrammingError when character set is not supported. | | Returns a tuple with (id, characterset name, collation) | | get_default_collation(charset) from builtins.type | Retrieves the default collation for given character set | | Raises ProgrammingError when character set is not supported. | | Returns list (collation, charset, index) | | get_desc(name) from builtins.type | Retrieves character set information as string using an ID | | Retrieves character set and collation information based on the | given MySQL ID. | | Returns a tuple. | | get_info(setid) from builtins.type | Retrieves character set information as tuple using an ID | | Retrieves character set and collation information based on the | given MySQL ID. | | Raises ProgrammingError when character set is not supported. | | Returns a tuple. | | get_supported() from builtins.type | Retrieves a list with names of all supproted character sets | | Returns a tuple. | | ---------------------------------------------------------------------- | Data and other attributes defined here: | | desc = [None, (&#x27;big5&#x27;, &#x27;big5_chinese_ci&#x27;, True), (&#x27;latin2&#x27;, &#x27;latin2_cz... | | slash_charsets = (1, 13, 28, 84, 87, 88) | | ---------------------------------------------------------------------- | Class methods inherited from _Constants: | | get_full_info() from builtins.type | get full information about given constant | | ---------------------------------------------------------------------- | Static methods inherited from _Constants: | | __new__(cls) | Create and return a new object. See help(type) for accurate signature. | | ---------------------------------------------------------------------- | Data descriptors inherited from _Constants: | | __dict__ | dictionary for instance variables (if defined) | | __weakref__ | list of weak references to the object (if defined) | | ---------------------------------------------------------------------- | Data and other attributes inherited from _Constants: | | prefix = &#x27;&#x27; class ClientFlag(_Flags) | MySQL Client Flags | | Client options as found in the MySQL sources mysql-src/include/mysql_com.h | | Method resolution order: | ClientFlag | _Flags | _Constants | builtins.object | | Class methods defined here: | | get_default() from builtins.type | Get the default client options set | | Returns a flag with all the default client options set | | ---------------------------------------------------------------------- | Data and other attributes defined here: | | CAN_HANDLE_EXPIRED_PASSWORDS = 4194304 | | COMPRESS = 32 | | CONNECT_ARGS = 1048576 | | CONNECT_WITH_DB = 8 | | DEPRECATE_EOF = 16777216 | | FOUND_ROWS = 2 | | IGNORE_SIGPIPE = 4096 | | IGNORE_SPACE = 256 | | INTERACTIVE = 1024 | | LOCAL_FILES = 128 | | LONG_FLAG = 4 | | LONG_PASSWD = 1 | | MULTI_RESULTS = 131072 | | MULTI_STATEMENTS = 65536 | | NO_SCHEMA = 16 | | ODBC = 64 | | PLUGIN_AUTH = 524288 | | PLUGIN_AUTH_LENENC_CLIENT_DATA = 2097152 | | PROTOCOL_41 = 512 | | PS_MULTI_RESULTS = 262144 | | REMEMBER_OPTIONS = 2147483648 | | RESERVED = 16384 | | SECURE_CONNECTION = 32768 | | SESION_TRACK = 8388608 | | SSL = 2048 | | SSL_VERIFY_SERVER_CERT = 1073741824 | | TRANSACTIONS = 8192 | | default = [1, 4, 8, 512, 8192, 32768, 65536, 131072] | | desc = &#123;&#x27;CAN_HANDLE_EXPIRED_PASSWORDS&#x27;: (4194304, &quot;Don&#x27;t close the con... | | ---------------------------------------------------------------------- | Class methods inherited from _Flags: | | get_bit_info(value) from builtins.type | Get the name of all bits set | | Returns a list of strings. | | ---------------------------------------------------------------------- | Class methods inherited from _Constants: | | get_desc(name) from builtins.type | Get description of given constant | | get_full_info() from builtins.type | get full information about given constant | | get_info(setid) from builtins.type | Get information about given constant | | ---------------------------------------------------------------------- | Static methods inherited from _Constants: | | __new__(cls) | Create and return a new object. See help(type) for accurate signature. | | ---------------------------------------------------------------------- | Data descriptors inherited from _Constants: | | __dict__ | dictionary for instance variables (if defined) | | __weakref__ | list of weak references to the object (if defined) | | ---------------------------------------------------------------------- | Data and other attributes inherited from _Constants: | | prefix = &#x27;&#x27; class DataError(DatabaseError) | DataError(msg=None, errno=None, values=None, sqlstate=None) | | Exception for errors reporting problems with processed data | | Method resolution order: | DataError | DatabaseError | Error | builtins.Exception | builtins.BaseException | builtins.object | | Methods inherited from Error: | | __init__(self, msg=None, errno=None, values=None, sqlstate=None) | Initialize self. See help(type(self)) for accurate signature. | | __str__(self) | Return str(self). | | ---------------------------------------------------------------------- | Data descriptors inherited from Error: | | __weakref__ | list of weak references to the object (if defined) | | ---------------------------------------------------------------------- | Static methods inherited from builtins.Exception: | | __new__(*args, **kwargs) from builtins.type | Create and return a new object. See help(type) for accurate signature. | | ---------------------------------------------------------------------- | Methods inherited from builtins.BaseException: | | __delattr__(self, name, /) | Implement delattr(self, name). | | __getattribute__(self, name, /) | Return getattr(self, name). | | __reduce__(...) | Helper for pickle. | | __repr__(self, /) | Return repr(self). | | __setattr__(self, name, value, /) | Implement setattr(self, name, value). | | __setstate__(...) | | with_traceback(...) | Exception.with_traceback(tb) -- | set self.__traceback__ to tb and return self. | | ---------------------------------------------------------------------- | Data descriptors inherited from builtins.BaseException: | | __cause__ | exception cause | | __context__ | exception context | | __dict__ | | __suppress_context__ | | __traceback__ | | args class DatabaseError(Error) | DatabaseError(msg=None, errno=None, values=None, sqlstate=None) | | Exception for errors related to the database | | Method resolution order: | DatabaseError | Error | builtins.Exception | builtins.BaseException | builtins.object | | Methods inherited from Error: | | __init__(self, msg=None, errno=None, values=None, sqlstate=None) | Initialize self. See help(type(self)) for accurate signature. | | __str__(self) | Return str(self). | | ---------------------------------------------------------------------- | Data descriptors inherited from Error: | | __weakref__ | list of weak references to the object (if defined) | | ---------------------------------------------------------------------- | Static methods inherited from builtins.Exception: | | __new__(*args, **kwargs) from builtins.type | Create and return a new object. See help(type) for accurate signature. | | ---------------------------------------------------------------------- | Methods inherited from builtins.BaseException: | | __delattr__(self, name, /) | Implement delattr(self, name). | | __getattribute__(self, name, /) | Return getattr(self, name). | | __reduce__(...) | Helper for pickle. | | __repr__(self, /) | Return repr(self). | | __setattr__(self, name, value, /) | Implement setattr(self, name, value). | | __setstate__(...) | | with_traceback(...) | Exception.with_traceback(tb) -- | set self.__traceback__ to tb and return self. | | ---------------------------------------------------------------------- | Data descriptors inherited from builtins.BaseException: | | __cause__ | exception cause | | __context__ | exception context | | __dict__ | | __suppress_context__ | | __traceback__ | | args Date = class date(builtins.object) | date(year, month, day) --&gt; date object | | Methods defined here: | | __add__(self, value, /) | Return self+value. | | __eq__(self, value, /) | Return self==value. | | __format__(...) | Formats self with strftime. | | __ge__(self, value, /) | Return self&gt;=value. | | __getattribute__(self, name, /) | Return getattr(self, name). | | __gt__(self, value, /) | Return self&gt;value. | | __hash__(self, /) | Return hash(self). | | __le__(self, value, /) | Return self&lt;=value. | | __lt__(self, value, /) | Return self&lt;value. | | __ne__(self, value, /) | Return self!=value. | | __radd__(self, value, /) | Return value+self. | | __reduce__(...) | __reduce__() -&gt; (cls, state) | | __repr__(self, /) | Return repr(self). | | __rsub__(self, value, /) | Return value-self. | | __str__(self, /) | Return str(self). | | __sub__(self, value, /) | Return self-value. | | ctime(...) | Return ctime() style string. | | isocalendar(...) | Return a 3-tuple containing ISO year, week number, and weekday. | | isoformat(...) | Return string in ISO 8601 format, YYYY-MM-DD. | | isoweekday(...) | Return the day of the week represented by the date. | Monday == 1 ... Sunday == 7 | | replace(...) | Return date with new specified fields. | | strftime(...) | format -&gt; strftime() style string. | | timetuple(...) | Return time tuple, compatible with time.localtime(). | | toordinal(...) | Return proleptic Gregorian ordinal. January 1 of year 1 is day 1. | | weekday(...) | Return the day of the week represented by the date. | Monday == 0 ... Sunday == 6 | | ---------------------------------------------------------------------- | Class methods defined here: | | fromisoformat(...) from builtins.type | str -&gt; Construct a date from the output of date.isoformat() | | fromordinal(...) from builtins.type | int -&gt; date corresponding to a proleptic Gregorian ordinal. | | fromtimestamp(...) from builtins.type | timestamp -&gt; local date from a POSIX timestamp (like time.time()). | | today(...) from builtins.type | Current date or datetime: same as self.__class__.fromtimestamp(time.time()). | | ---------------------------------------------------------------------- | Static methods defined here: | | __new__(*args, **kwargs) from builtins.type | Create and return a new object. See help(type) for accurate signature. | | ---------------------------------------------------------------------- | Data descriptors defined here: | | day | | month | | year | | ---------------------------------------------------------------------- | Data and other attributes defined here: | | max = datetime.date(9999, 12, 31) | | min = datetime.date(1, 1, 1) | | resolution = datetime.timedelta(days=1) class Error(builtins.Exception) | Error(msg=None, errno=None, values=None, sqlstate=None) | | Exception that is base class for all other error exceptions | | Method resolution order: | Error | builtins.Exception | builtins.BaseException | builtins.object | | Methods defined here: | | __init__(self, msg=None, errno=None, values=None, sqlstate=None) | Initialize self. See help(type(self)) for accurate signature. | | __str__(self) | Return str(self). | | ---------------------------------------------------------------------- | Data descriptors defined here: | | __weakref__ | list of weak references to the object (if defined) | | ---------------------------------------------------------------------- | Static methods inherited from builtins.Exception: | | __new__(*args, **kwargs) from builtins.type | Create and return a new object. See help(type) for accurate signature. | | ---------------------------------------------------------------------- | Methods inherited from builtins.BaseException: | | __delattr__(self, name, /) | Implement delattr(self, name). | | __getattribute__(self, name, /) | Return getattr(self, name). | | __reduce__(...) | Helper for pickle. | | __repr__(self, /) | Return repr(self). | | __setattr__(self, name, value, /) | Implement setattr(self, name, value). | | __setstate__(...) | | with_traceback(...) | Exception.with_traceback(tb) -- | set self.__traceback__ to tb and return self. | | ---------------------------------------------------------------------- | Data descriptors inherited from builtins.BaseException: | | __cause__ | exception cause | | __context__ | exception context | | __dict__ | | __suppress_context__ | | __traceback__ | | args class FieldFlag(_Flags) | MySQL Field Flags | | Field flags as found in MySQL sources mysql-src/include/mysql_com.h | | Method resolution order: | FieldFlag | _Flags | _Constants | builtins.object | | Data and other attributes defined here: | | AUTO_INCREMENT = 512 | | BINARY = 128 | | BINCMP = 131072 | | BLOB = 16 | | ENUM = 256 | | FIELD_IN_ADD_INDEX = 1048576 | | FIELD_IN_PART_FUNC = 524288 | | FIELD_IS_RENAMED = 2097152 | | GET_FIXED_FIELDS = 262144 | | GROUP = 16384 | | MULTIPLE_KEY = 8 | | NOT_NULL = 1 | | NO_DEFAULT_VALUE = 4096 | | NUM = 16384 | | ON_UPDATE_NOW = 8192 | | PART_KEY = 32768 | | PRI_KEY = 2 | | SET = 2048 | | TIMESTAMP = 1024 | | UNIQUE = 65536 | | UNIQUE_KEY = 4 | | UNSIGNED = 32 | | ZEROFILL = 64 | | desc = &#123;&#x27;AUTO_INCREMENT&#x27;: (512, &#x27;field is a autoincrement field&#x27;), &#x27;BI... | | ---------------------------------------------------------------------- | Class methods inherited from _Flags: | | get_bit_info(value) from builtins.type | Get the name of all bits set | | Returns a list of strings. | | ---------------------------------------------------------------------- | Class methods inherited from _Constants: | | get_desc(name) from builtins.type | Get description of given constant | | get_full_info() from builtins.type | get full information about given constant | | get_info(setid) from builtins.type | Get information about given constant | | ---------------------------------------------------------------------- | Static methods inherited from _Constants: | | __new__(cls) | Create and return a new object. See help(type) for accurate signature. | | ---------------------------------------------------------------------- | Data descriptors inherited from _Constants: | | __dict__ | dictionary for instance variables (if defined) | | __weakref__ | list of weak references to the object (if defined) | | ---------------------------------------------------------------------- | Data and other attributes inherited from _Constants: | | prefix = &#x27;&#x27; class FieldType(_Constants) | MySQL Field Types | | Method resolution order: | FieldType | _Constants | builtins.object | | Class methods defined here: | | get_binary_types() from builtins.type | Get the list of all binary types | | get_number_types() from builtins.type | Get the list of all number types | | get_string_types() from builtins.type | Get the list of all string types | | get_timestamp_types() from builtins.type | Get the list of all timestamp types | | ---------------------------------------------------------------------- | Data and other attributes defined here: | | BIT = 16 | | BLOB = 252 | | DATE = 10 | | DATETIME = 12 | | DECIMAL = 0 | | DOUBLE = 5 | | ENUM = 247 | | FLOAT = 4 | | GEOMETRY = 255 | | INT24 = 9 | | JSON = 245 | | LONG = 3 | | LONGLONG = 8 | | LONG_BLOB = 251 | | MEDIUM_BLOB = 250 | | NEWDATE = 14 | | NEWDECIMAL = 246 | | NULL = 6 | | SET = 248 | | SHORT = 2 | | STRING = 254 | | TIME = 11 | | TIMESTAMP = 7 | | TINY = 1 | | TINY_BLOB = 249 | | VARCHAR = 15 | | VAR_STRING = 253 | | YEAR = 13 | | desc = &#123;&#x27;BIT&#x27;: (16, &#x27;BIT&#x27;), &#x27;BLOB&#x27;: (252, &#x27;BLOB&#x27;), &#x27;DATE&#x27;: (10, &#x27;DATE&#x27;... | | prefix = &#x27;FIELD_TYPE_&#x27; | | ---------------------------------------------------------------------- | Class methods inherited from _Constants: | | get_desc(name) from builtins.type | Get description of given constant | | get_full_info() from builtins.type | get full information about given constant | | get_info(setid) from builtins.type | Get information about given constant | | ---------------------------------------------------------------------- | Static methods inherited from _Constants: | | __new__(cls) | Create and return a new object. See help(type) for accurate signature. | | ---------------------------------------------------------------------- | Data descriptors inherited from _Constants: | | __dict__ | dictionary for instance variables (if defined) | | __weakref__ | list of weak references to the object (if defined) class IntegrityError(DatabaseError) | IntegrityError(msg=None, errno=None, values=None, sqlstate=None) | | Exception for errors regarding relational integrity | | Method resolution order: | IntegrityError | DatabaseError | Error | builtins.Exception | builtins.BaseException | builtins.object | | Methods inherited from Error: | | __init__(self, msg=None, errno=None, values=None, sqlstate=None) | Initialize self. See help(type(self)) for accurate signature. | | __str__(self) | Return str(self). | | ---------------------------------------------------------------------- | Data descriptors inherited from Error: | | __weakref__ | list of weak references to the object (if defined) | | ---------------------------------------------------------------------- | Static methods inherited from builtins.Exception: | | __new__(*args, **kwargs) from builtins.type | Create and return a new object. See help(type) for accurate signature. | | ---------------------------------------------------------------------- | Methods inherited from builtins.BaseException: | | __delattr__(self, name, /) | Implement delattr(self, name). | | __getattribute__(self, name, /) | Return getattr(self, name). | | __reduce__(...) | Helper for pickle. | | __repr__(self, /) | Return repr(self). | | __setattr__(self, name, value, /) | Implement setattr(self, name, value). | | __setstate__(...) | | with_traceback(...) | Exception.with_traceback(tb) -- | set self.__traceback__ to tb and return self. | | ---------------------------------------------------------------------- | Data descriptors inherited from builtins.BaseException: | | __cause__ | exception cause | | __context__ | exception context | | __dict__ | | __suppress_context__ | | __traceback__ | | args class InterfaceError(Error) | InterfaceError(msg=None, errno=None, values=None, sqlstate=None) | | Exception for errors related to the interface | | Method resolution order: | InterfaceError | Error | builtins.Exception | builtins.BaseException | builtins.object | | Methods inherited from Error: | | __init__(self, msg=None, errno=None, values=None, sqlstate=None) | Initialize self. See help(type(self)) for accurate signature. | | __str__(self) | Return str(self). | | ---------------------------------------------------------------------- | Data descriptors inherited from Error: | | __weakref__ | list of weak references to the object (if defined) | | ---------------------------------------------------------------------- | Static methods inherited from builtins.Exception: | | __new__(*args, **kwargs) from builtins.type | Create and return a new object. See help(type) for accurate signature. | | ---------------------------------------------------------------------- | Methods inherited from builtins.BaseException: | | __delattr__(self, name, /) | Implement delattr(self, name). | | __getattribute__(self, name, /) | Return getattr(self, name). | | __reduce__(...) | Helper for pickle. | | __repr__(self, /) | Return repr(self). | | __setattr__(self, name, value, /) | Implement setattr(self, name, value). | | __setstate__(...) | | with_traceback(...) | Exception.with_traceback(tb) -- | set self.__traceback__ to tb and return self. | | ---------------------------------------------------------------------- | Data descriptors inherited from builtins.BaseException: | | __cause__ | exception cause | | __context__ | exception context | | __dict__ | | __suppress_context__ | | __traceback__ | | args class InternalError(DatabaseError) | InternalError(msg=None, errno=None, values=None, sqlstate=None) | | Exception for errors internal database errors | | Method resolution order: | InternalError | DatabaseError | Error | builtins.Exception | builtins.BaseException | builtins.object | | Methods inherited from Error: | | __init__(self, msg=None, errno=None, values=None, sqlstate=None) | Initialize self. See help(type(self)) for accurate signature. | | __str__(self) | Return str(self). | | ---------------------------------------------------------------------- | Data descriptors inherited from Error: | | __weakref__ | list of weak references to the object (if defined) | | ---------------------------------------------------------------------- | Static methods inherited from builtins.Exception: | | __new__(*args, **kwargs) from builtins.type | Create and return a new object. See help(type) for accurate signature. | | ---------------------------------------------------------------------- | Methods inherited from builtins.BaseException: | | __delattr__(self, name, /) | Implement delattr(self, name). | | __getattribute__(self, name, /) | Return getattr(self, name). | | __reduce__(...) | Helper for pickle. | | __repr__(self, /) | Return repr(self). | | __setattr__(self, name, value, /) | Implement setattr(self, name, value). | | __setstate__(...) | | with_traceback(...) | Exception.with_traceback(tb) -- | set self.__traceback__ to tb and return self. | | ---------------------------------------------------------------------- | Data descriptors inherited from builtins.BaseException: | | __cause__ | exception cause | | __context__ | exception context | | __dict__ | | __suppress_context__ | | __traceback__ | | args class MySQLConnection(mysql.connector.abstracts.MySQLConnectionAbstract) | MySQLConnection(*args, **kwargs) | | Connection to a MySQL Server | | Method resolution order: | MySQLConnection | mysql.connector.abstracts.MySQLConnectionAbstract | mysql.connector.abstracts.MySQLConnectionAbstract | builtins.object | | Methods defined here: | | __init__(self, *args, **kwargs) | Initialize | | close(self) | Disconnect from the MySQL server | | cmd_change_user(self, username=&#x27;&#x27;, password=&#x27;&#x27;, database=&#x27;&#x27;, charset=45) | Change the current logged in user | | This method allows to change the current logged in user information. | The result is a dictionary with OK packet information. | | Returns a dict() | | cmd_debug(self) | Send the DEBUG command | | This method sends the DEBUG command to the MySQL server, which | requires the MySQL user to have SUPER privilege. The output will go | to the MySQL server error log and the result of this method is a | dictionary with EOF packet information. | | Returns a dict() | | cmd_init_db(self, database) | Change the current database | | This method changes the current (default) database by sending the | INIT_DB command. The result is a dictionary containing the OK packet | information. | | Returns a dict() | | cmd_ping(self) | Send the PING command | | This method sends the PING command to the MySQL server. It is used to | check if the the connection is still valid. The result of this | method is dictionary with OK packet information. | | Returns a dict() | | cmd_process_kill(self, mysql_pid) | Kill a MySQL process | | This method send the PROCESS_KILL command to the server along with | the process ID. The result is a dictionary with the OK packet | information. | | Returns a dict() | | cmd_query(self, query, raw=False, buffered=False, raw_as_string=False) | Send a query to the MySQL server | | This method send the query to the MySQL server and returns the result. | | If there was a text result, a tuple will be returned consisting of | the number of columns and a list containing information about these | columns. | | When the query doesn&#x27;t return a text result, the OK or EOF packet | information as dictionary will be returned. In case the result was | an error, exception errors.Error will be raised. | | Returns a tuple() | | cmd_query_iter(self, statements) | Send one or more statements to the MySQL server | | Similar to the cmd_query method, but instead returns a generator | object to iterate through results. It sends the statements to the | MySQL server and through the iterator you can get the results. | | statement = &#x27;SELECT 1; INSERT INTO t1 VALUES (); SELECT 2&#x27; | for result in cnx.cmd_query(statement, iterate=True): | if &#x27;columns&#x27; in result: | columns = result[&#x27;columns&#x27;] | rows = cnx.get_rows() | else: | # do something useful with INSERT result | | Returns a generator. | | cmd_quit(self) | Close the current connection with the server | | This method sends the QUIT command to the MySQL server, closing the | current connection. Since the no response can be returned to the | client, cmd_quit() will return the packet it send. | | Returns a str() | | cmd_refresh(self, options) | Send the Refresh command to the MySQL server | | This method sends the Refresh command to the MySQL server. The options | argument should be a bitwise value using constants.RefreshOption. | Usage example: | RefreshOption = mysql.connector.RefreshOption | refresh = RefreshOption.LOG | RefreshOption.THREADS | cnx.cmd_refresh(refresh) | | The result is a dictionary with the OK packet information. | | Returns a dict() | | cmd_reset_connection(self) | Resets the session state without re-authenticating | | Works only for MySQL server 5.7.3 or later. | The result is a dictionary with OK packet information. | | Returns a dict() | | cmd_shutdown(self, shutdown_type=None) | Shut down the MySQL Server | | This method sends the SHUTDOWN command to the MySQL server and is only | possible if the current user has SUPER privileges. The result is a | dictionary containing the OK packet information. | | Note: Most applications and scripts do not the SUPER privilege. | | Returns a dict() | | cmd_statistics(self) | Send the statistics command to the MySQL Server | | This method sends the STATISTICS command to the MySQL server. The | result is a dictionary with various statistical information. | | Returns a dict() | | cmd_stmt_close(self, statement_id) | Deallocate a prepared MySQL statement | | This method deallocates the prepared statement using the | statement_id. Note that the MySQL server does not return | anything. | | cmd_stmt_execute(self, statement_id, data=(), parameters=(), flags=0) | Execute a prepared MySQL statement | | cmd_stmt_fetch(self, statement_id, rows=1) | Fetch a MySQL statement Result Set | | This method will send the FETCH command to MySQL together with the | given statement id and the number of rows to fetch. | | cmd_stmt_prepare(self, statement) | Prepare a MySQL statement | | This method will send the PREPARE command to MySQL together with the | given statement. | | Returns a dict() | | cmd_stmt_reset(self, statement_id) | Reset data for prepared statement sent as long data | | The result is a dictionary with OK packet information. | | Returns a dict() | | cmd_stmt_send_long_data(self, statement_id, param_id, data) | Send data for a column | | This methods send data for a column (for example BLOB) for statement | identified by statement_id. The param_id indicate which parameter | the data belongs too. | The data argument should be a file-like object. | | Since MySQL does not send anything back, no error is raised. When | the MySQL server is not reachable, an OperationalError is raised. | | cmd_stmt_send_long_data should be called before cmd_stmt_execute. | | The total bytes send is returned. | | Returns int. | | commit(self) | Commit current transaction | | consume_results(self) | Consume results | | cursor(self, buffered=None, raw=None, prepared=None, cursor_class=None, dictionary=None, named_tuple=None) | Instantiates and returns a cursor | | By default, MySQLCursor is returned. Depending on the options | while connecting, a buffered and/or raw cursor is instantiated | instead. Also depending upon the cursor options, rows can be | returned as dictionary or named tuple. | | Dictionary and namedtuple based cursors are available with buffered | output but not raw. | | It is possible to also give a custom cursor through the | cursor_class parameter, but it needs to be a subclass of | mysql.connector.cursor.CursorBase. | | Raises ProgrammingError when cursor_class is not a subclass of | CursorBase. Raises ValueError when cursor is not available. | | Returns a cursor-object | | disconnect = close(self) | | get_row(self, binary=False, columns=None, raw=None) | Get the next rows returned by the MySQL server | | This method gets one row from the result set after sending, for | example, the query command. The result is a tuple consisting of the | row and the EOF packet. | If no row was available in the result set, the row data will be None. | | Returns a tuple. | | get_rows(self, count=None, binary=False, columns=None, raw=None) | Get all rows returned by the MySQL server | | This method gets all rows returned by the MySQL server after sending, | for example, the query command. The result is a tuple consisting of | a list of rows and the EOF packet. | | Returns a tuple() | | handle_unread_result(self) | Check whether there is an unread result | | info_query(self, query) | Send a query which only returns 1 row | | is_connected(self) | Reports whether the connection to MySQL Server is available | | This method checks whether the connection to MySQL is available. | It is similar to ping(), but unlike the ping()-method, either True | or False is returned and no exception is raised. | | Returns True or False. | | ping(self, reconnect=False, attempts=1, delay=0) | Check availability of the MySQL server | | When reconnect is set to True, one or more attempts are made to try | to reconnect to the MySQL server using the reconnect()-method. | | delay is the number of seconds to wait between each retry. | | When the connection is not available, an InterfaceError is raised. Use | the is_connected()-method if you just want to check the connection | without raising an error. | | Raises InterfaceError on errors. | | reconnect(self, attempts=1, delay=0) | Attempt to reconnect to the MySQL server | | The argument attempts should be the number of times a reconnect | is tried. The delay argument is the number of seconds to wait between | each retry. | | You may want to set the number of attempts higher and use delay when | you expect the MySQL server to be down for maintenance or when you | expect the network to be temporary unavailable. | | Raises InterfaceError on errors. | | reset_session(self, user_variables=None, session_variables=None) | Clears the current active session | | This method resets the session state, if the MySQL server is 5.7.3 | or later active session will be reset without re-authenticating. | For other server versions session will be reset by re-authenticating. | | It is possible to provide a sequence of variables and their values to | be set after clearing the session. This is possible for both user | defined variables and session variables. | This method takes two arguments user_variables and session_variables | which are dictionaries. | | Raises OperationalError if not connected, InternalError if there are | unread results and InterfaceError on errors. | | rollback(self) | Rollback current transaction | | shutdown(self) | Shut down connection to MySQL Server. | | ---------------------------------------------------------------------- | Data descriptors defined here: | | connection_id | MySQL connection ID | | database | Get the current database | | in_transaction | MySQL session has started a transaction | | ---------------------------------------------------------------------- | Data and other attributes defined here: | | __abstractmethods__ = frozenset() | | ---------------------------------------------------------------------- | Methods inherited from mysql.connector.abstracts.MySQLConnectionAbstract: | | cmd_process_info(self) | Get the process list of the MySQL Server | | This method is a placeholder to notify that the PROCESS_INFO command | is not supported by raising the NotSupportedError. The command | &quot;SHOW PROCESSLIST&quot; should be send using the cmd_query()-method or | using the INFORMATION_SCHEMA database. | | Raises NotSupportedError exception | | config(self, **kwargs) | Configure the MySQL Connection | | This method allows you to configure the MySQLConnection instance. | | Raises on errors. | | connect(self, **kwargs) | Connect to the MySQL server | | This method sets up the connection to the MySQL server. If no | arguments are given, it will use the already configured or default | values. | | get_server_info(self) | Get the original MySQL version information | | This method returns the original MySQL server as text. If not | previously connected, it will return None. | | Returns a string or None. | | get_server_version(self) | Get the MySQL version | | This method returns the MySQL server version as a tuple. If not | previously connected, it will return None. | | Returns a tuple or None. | | isset_client_flag(self, flag) | Check if a client flag is set | | set_charset_collation(self, charset=None, collation=None) | Sets the character set and collation for the current connection | | This method sets the character set and collation to be used for | the current connection. The charset argument can be either the | name of a character set as a string, or the numerical equivalent | as defined in constants.CharacterSet. | | When the collation is not given, the default will be looked up and | used. | | For example, the following will set the collation for the latin1 | character set to latin1_general_ci: | | set_charset(&#x27;latin1&#x27;,&#x27;latin1_general_ci&#x27;) | | set_client_flags(self, flags) | Set the client flags | | The flags-argument can be either an int or a list (or tuple) of | ClientFlag-values. If it is an integer, it will set client_flags | to flags as is. | If flags is a list (or tuple), each flag will be set or unset | when it&#x27;s negative. | | set_client_flags([ClientFlag.FOUND_ROWS,-ClientFlag.LONG_FLAG]) | | Raises ProgrammingError when the flags argument is not a set or | an integer bigger than 0. | | Returns self.client_flags | | set_converter_class(self, convclass) | Set the converter class to be used. This should be a class overloading | methods and members of conversion.MySQLConverter. | | set_login(self, username=None, password=None) | Set login information for MySQL | | Set the username and/or password for the user connecting to | the MySQL Server. | | set_unicode(self, value=True) | Toggle unicode mode | | Set whether we return string fields as unicode or not. | Default is True. | | start_transaction(self, consistent_snapshot=False, isolation_level=None, readonly=None) | Start a transaction | | This method explicitly starts a transaction sending the | START TRANSACTION statement to the MySQL server. You can optionally | set whether there should be a consistent snapshot, which | isolation level you need or which access mode i.e. READ ONLY or | READ WRITE. | | For example, to start a transaction with isolation level SERIALIZABLE, | you would do the following: | &gt;&gt;&gt; cnx = mysql.connector.connect(..) | &gt;&gt;&gt; cnx.start_transaction(isolation_level=&#x27;SERIALIZABLE&#x27;) | | Raises ProgrammingError when a transaction is already in progress | and when ValueError when isolation_level specifies an Unknown | level. | | ---------------------------------------------------------------------- | Data descriptors inherited from mysql.connector.abstracts.MySQLConnectionAbstract: | | autocommit | Get whether autocommit is on or off | | can_consume_results | Returns whether to consume results | | charset | Returns the character set for current connection | | This property returns the character set name of the current connection. | The server is queried when the connection is active. If not connected, | the configured character set name is returned. | | Returns a string. | | collation | Returns the collation for current connection | | This property returns the collation name of the current connection. | The server is queried when the connection is active. If not connected, | the configured collation name is returned. | | Returns a string. | | get_warnings | Get whether this connection retrieves warnings automatically | | This method returns whether this connection retrieves warnings | automatically. | | Returns True, or False when warnings are not retrieved. | | python_charset | Returns the Python character set for current connection | | This property returns the character set name of the current connection. | Note that, unlike property charset, this checks if the previously set | character set is supported by Python and if not, it returns the | equivalent character set that Python supports. | | Returns a string. | | raise_on_warnings | Get whether this connection raises an error on warnings | | This method returns whether this connection will raise errors when | MySQL reports warnings. | | Returns True or False. | | server_host | MySQL server IP address or name | | server_port | MySQL server TCP/IP port | | sql_mode | Get the SQL mode | | time_zone | Get the current time zone | | unix_socket | MySQL Unix socket file location | | unread_result | Get whether there is an unread result | | This method is used by cursors to check whether another cursor still | needs to retrieve its result set. | | Returns True, or False when there is no unread result. | | user | User used while connecting to MySQL | | ---------------------------------------------------------------------- | Data descriptors inherited from mysql.connector.abstracts.MySQLConnectionAbstract: | | __dict__ | dictionary for instance variables (if defined) | | __weakref__ | list of weak references to the object (if defined) class NotSupportedError(DatabaseError) | NotSupportedError(msg=None, errno=None, values=None, sqlstate=None) | | Exception for errors when an unsupported database feature was used | | Method resolution order: | NotSupportedError | DatabaseError | Error | builtins.Exception | builtins.BaseException | builtins.object | | Methods inherited from Error: | | __init__(self, msg=None, errno=None, values=None, sqlstate=None) | Initialize self. See help(type(self)) for accurate signature. | | __str__(self) | Return str(self). | | ---------------------------------------------------------------------- | Data descriptors inherited from Error: | | __weakref__ | list of weak references to the object (if defined) | | ---------------------------------------------------------------------- | Static methods inherited from builtins.Exception: | | __new__(*args, **kwargs) from builtins.type | Create and return a new object. See help(type) for accurate signature. | | ---------------------------------------------------------------------- | Methods inherited from builtins.BaseException: | | __delattr__(self, name, /) | Implement delattr(self, name). | | __getattribute__(self, name, /) | Return getattr(self, name). | | __reduce__(...) | Helper for pickle. | | __repr__(self, /) | Return repr(self). | | __setattr__(self, name, value, /) | Implement setattr(self, name, value). | | __setstate__(...) | | with_traceback(...) | Exception.with_traceback(tb) -- | set self.__traceback__ to tb and return self. | | ---------------------------------------------------------------------- | Data descriptors inherited from builtins.BaseException: | | __cause__ | exception cause | | __context__ | exception context | | __dict__ | | __suppress_context__ | | __traceback__ | | args class OperationalError(DatabaseError) | OperationalError(msg=None, errno=None, values=None, sqlstate=None) | | Exception for errors related to the database&#x27;s operation | | Method resolution order: | OperationalError | DatabaseError | Error | builtins.Exception | builtins.BaseException | builtins.object | | Methods inherited from Error: | | __init__(self, msg=None, errno=None, values=None, sqlstate=None) | Initialize self. See help(type(self)) for accurate signature. | | __str__(self) | Return str(self). | | ---------------------------------------------------------------------- | Data descriptors inherited from Error: | | __weakref__ | list of weak references to the object (if defined) | | ---------------------------------------------------------------------- | Static methods inherited from builtins.Exception: | | __new__(*args, **kwargs) from builtins.type | Create and return a new object. See help(type) for accurate signature. | | ---------------------------------------------------------------------- | Methods inherited from builtins.BaseException: | | __delattr__(self, name, /) | Implement delattr(self, name). | | __getattribute__(self, name, /) | Return getattr(self, name). | | __reduce__(...) | Helper for pickle. | | __repr__(self, /) | Return repr(self). | | __setattr__(self, name, value, /) | Implement setattr(self, name, value). | | __setstate__(...) | | with_traceback(...) | Exception.with_traceback(tb) -- | set self.__traceback__ to tb and return self. | | ---------------------------------------------------------------------- | Data descriptors inherited from builtins.BaseException: | | __cause__ | exception cause | | __context__ | exception context | | __dict__ | | __suppress_context__ | | __traceback__ | | args class ProgrammingError(DatabaseError) | ProgrammingError(msg=None, errno=None, values=None, sqlstate=None) | | Exception for errors programming errors | | Method resolution order: | ProgrammingError | DatabaseError | Error | builtins.Exception | builtins.BaseException | builtins.object | | Methods inherited from Error: | | __init__(self, msg=None, errno=None, values=None, sqlstate=None) | Initialize self. See help(type(self)) for accurate signature. | | __str__(self) | Return str(self). | | ---------------------------------------------------------------------- | Data descriptors inherited from Error: | | __weakref__ | list of weak references to the object (if defined) | | ---------------------------------------------------------------------- | Static methods inherited from builtins.Exception: | | __new__(*args, **kwargs) from builtins.type | Create and return a new object. See help(type) for accurate signature. | | ---------------------------------------------------------------------- | Methods inherited from builtins.BaseException: | | __delattr__(self, name, /) | Implement delattr(self, name). | | __getattribute__(self, name, /) | Return getattr(self, name). | | __reduce__(...) | Helper for pickle. | | __repr__(self, /) | Return repr(self). | | __setattr__(self, name, value, /) | Implement setattr(self, name, value). | | __setstate__(...) | | with_traceback(...) | Exception.with_traceback(tb) -- | set self.__traceback__ to tb and return self. | | ---------------------------------------------------------------------- | Data descriptors inherited from builtins.BaseException: | | __cause__ | exception cause | | __context__ | exception context | | __dict__ | | __suppress_context__ | | __traceback__ | | args class RefreshOption(_Constants) | MySQL Refresh command options | | Options used when sending the COM_REFRESH server command. | | Method resolution order: | RefreshOption | _Constants | builtins.object | | Data and other attributes defined here: | | GRANT = 1 | | HOST = 8 | | LOG = 2 | | SLAVE = 64 | | STATUS = 16 | | TABLES = 4 | | THREADS = 32 | | desc = &#123;&#x27;GRANT&#x27;: (1, &#x27;Refresh grant tables&#x27;), &#x27;HOSTS&#x27;: (8, &#x27;Flush host... | | ---------------------------------------------------------------------- | Class methods inherited from _Constants: | | get_desc(name) from builtins.type | Get description of given constant | | get_full_info() from builtins.type | get full information about given constant | | get_info(setid) from builtins.type | Get information about given constant | | ---------------------------------------------------------------------- | Static methods inherited from _Constants: | | __new__(cls) | Create and return a new object. See help(type) for accurate signature. | | ---------------------------------------------------------------------- | Data descriptors inherited from _Constants: | | __dict__ | dictionary for instance variables (if defined) | | __weakref__ | list of weak references to the object (if defined) | | ---------------------------------------------------------------------- | Data and other attributes inherited from _Constants: | | prefix = &#x27;&#x27; Time = class time(builtins.object) | time([hour[, minute[, second[, microsecond[, tzinfo]]]]]) --&gt; a time object | | All arguments are optional. tzinfo may be None, or an instance of | a tzinfo subclass. The remaining arguments may be ints. | | Methods defined here: | | __eq__(self, value, /) | Return self==value. | | __format__(...) | Formats self with strftime. | | __ge__(self, value, /) | Return self&gt;=value. | | __getattribute__(self, name, /) | Return getattr(self, name). | | __gt__(self, value, /) | Return self&gt;value. | | __hash__(self, /) | Return hash(self). | | __le__(self, value, /) | Return self&lt;=value. | | __lt__(self, value, /) | Return self&lt;value. | | __ne__(self, value, /) | Return self!=value. | | __reduce__(...) | __reduce__() -&gt; (cls, state) | | __reduce_ex__(...) | __reduce_ex__(proto) -&gt; (cls, state) | | __repr__(self, /) | Return repr(self). | | __str__(self, /) | Return str(self). | | dst(...) | Return self.tzinfo.dst(self). | | isoformat(...) | Return string in ISO 8601 format, [HH[:MM[:SS[.mmm[uuu]]]]][+HH:MM]. | | timespec specifies what components of the time to include. | | replace(...) | Return time with new specified fields. | | strftime(...) | format -&gt; strftime() style string. | | tzname(...) | Return self.tzinfo.tzname(self). | | utcoffset(...) | Return self.tzinfo.utcoffset(self). | | ---------------------------------------------------------------------- | Class methods defined here: | | fromisoformat(...) from builtins.type | string -&gt; time from time.isoformat() output | | ---------------------------------------------------------------------- | Static methods defined here: | | __new__(*args, **kwargs) from builtins.type | Create and return a new object. See help(type) for accurate signature. | | ---------------------------------------------------------------------- | Data descriptors defined here: | | fold | | hour | | microsecond | | minute | | second | | tzinfo | | ---------------------------------------------------------------------- | Data and other attributes defined here: | | max = datetime.time(23, 59, 59, 999999) | | min = datetime.time(0, 0) | | resolution = datetime.timedelta(microseconds=1) Timestamp = class datetime(date) | datetime(year, month, day[, hour[, minute[, second[, microsecond[,tzinfo]]]]]) | | The year, month and day arguments are required. tzinfo may be None, or an | instance of a tzinfo subclass. The remaining arguments may be ints. | | Method resolution order: | datetime | date | builtins.object | | Methods defined here: | | __add__(self, value, /) | Return self+value. | | __eq__(self, value, /) | Return self==value. | | __ge__(self, value, /) | Return self&gt;=value. | | __getattribute__(self, name, /) | Return getattr(self, name). | | __gt__(self, value, /) | Return self&gt;value. | | __hash__(self, /) | Return hash(self). | | __le__(self, value, /) | Return self&lt;=value. | | __lt__(self, value, /) | Return self&lt;value. | | __ne__(self, value, /) | Return self!=value. | | __radd__(self, value, /) | Return value+self. | | __reduce__(...) | __reduce__() -&gt; (cls, state) | | __reduce_ex__(...) | __reduce_ex__(proto) -&gt; (cls, state) | | __repr__(self, /) | Return repr(self). | | __rsub__(self, value, /) | Return value-self. | | __str__(self, /) | Return str(self). | | __sub__(self, value, /) | Return self-value. | | astimezone(...) | tz -&gt; convert to local time in new timezone tz | | ctime(...) | Return ctime() style string. | | date(...) | Return date object with same year, month and day. | | dst(...) | Return self.tzinfo.dst(self). | | isoformat(...) | [sep] -&gt; string in ISO 8601 format, YYYY-MM-DDT[HH[:MM[:SS[.mmm[uuu]]]]][+HH:MM]. | sep is used to separate the year from the time, and defaults to &#x27;T&#x27;. | timespec specifies what components of the time to include (allowed values are &#x27;auto&#x27;, &#x27;hours&#x27;, &#x27;minutes&#x27;, &#x27;seconds&#x27;, &#x27;milliseconds&#x27;, and &#x27;microseconds&#x27;). | | replace(...) | Return datetime with new specified fields. | | time(...) | Return time object with same time but with tzinfo=None. | | timestamp(...) | Return POSIX timestamp as float. | | timetuple(...) | Return time tuple, compatible with time.localtime(). | | timetz(...) | Return time object with same time and tzinfo. | | tzname(...) | Return self.tzinfo.tzname(self). | | utcoffset(...) | Return self.tzinfo.utcoffset(self). | | utctimetuple(...) | Return UTC time tuple, compatible with time.localtime(). | | ---------------------------------------------------------------------- | Class methods defined here: | | combine(...) from builtins.type | date, time -&gt; datetime with same date and time fields | | fromisoformat(...) from builtins.type | string -&gt; datetime from datetime.isoformat() output | | fromtimestamp(...) from builtins.type | timestamp[, tz] -&gt; tz&#x27;s local time from POSIX timestamp. | | now(tz=None) from builtins.type | Returns new datetime object representing current time local to tz. | | tz | Timezone object. | | If no tz is specified, uses local timezone. | | strptime(...) from builtins.type | string, format -&gt; new datetime parsed from a string (like time.strptime()). | | utcfromtimestamp(...) from builtins.type | Construct a naive UTC datetime from a POSIX timestamp. | | utcnow(...) from builtins.type | Return a new datetime representing UTC day and time. | | ---------------------------------------------------------------------- | Static methods defined here: | | __new__(*args, **kwargs) from builtins.type | Create and return a new object. See help(type) for accurate signature. | | ---------------------------------------------------------------------- | Data descriptors defined here: | | fold | | hour | | microsecond | | minute | | second | | tzinfo | | ---------------------------------------------------------------------- | Data and other attributes defined here: | | max = datetime.datetime(9999, 12, 31, 23, 59, 59, 999999) | | min = datetime.datetime(1, 1, 1, 0, 0) | | resolution = datetime.timedelta(microseconds=1) | | ---------------------------------------------------------------------- | Methods inherited from date: | | __format__(...) | Formats self with strftime. | | isocalendar(...) | Return a 3-tuple containing ISO year, week number, and weekday. | | isoweekday(...) | Return the day of the week represented by the date. | Monday == 1 ... Sunday == 7 | | strftime(...) | format -&gt; strftime() style string. | | toordinal(...) | Return proleptic Gregorian ordinal. January 1 of year 1 is day 1. | | weekday(...) | Return the day of the week represented by the date. | Monday == 0 ... Sunday == 6 | | ---------------------------------------------------------------------- | Class methods inherited from date: | | fromordinal(...) from builtins.type | int -&gt; date corresponding to a proleptic Gregorian ordinal. | | today(...) from builtins.type | Current date or datetime: same as self.__class__.fromtimestamp(time.time()). | | ---------------------------------------------------------------------- | Data descriptors inherited from date: | | day | | month | | year class Warning(builtins.Exception) | Exception for important warnings | | Method resolution order: | Warning | builtins.Exception | builtins.BaseException | builtins.object | | Data descriptors defined here: | | __weakref__ | list of weak references to the object (if defined) | | ---------------------------------------------------------------------- | Methods inherited from builtins.Exception: | | __init__(self, /, *args, **kwargs) | Initialize self. See help(type(self)) for accurate signature. | | ---------------------------------------------------------------------- | Static methods inherited from builtins.Exception: | | __new__(*args, **kwargs) from builtins.type | Create and return a new object. See help(type) for accurate signature. | | ---------------------------------------------------------------------- | Methods inherited from builtins.BaseException: | | __delattr__(self, name, /) | Implement delattr(self, name). | | __getattribute__(self, name, /) | Return getattr(self, name). | | __reduce__(...) | Helper for pickle. | | __repr__(self, /) | Return repr(self). | | __setattr__(self, name, value, /) | Implement setattr(self, name, value). | | __setstate__(...) | | __str__(self, /) | Return str(self). | | with_traceback(...) | Exception.with_traceback(tb) -- | set self.__traceback__ to tb and return self. | | ---------------------------------------------------------------------- | Data descriptors inherited from builtins.BaseException: | | __cause__ | exception cause | | __context__ | exception context | | __dict__ | | __suppress_context__ | | __traceback__ | | args## FUNCTIONS Connect = connect(*args, **kwargs) Create or get a MySQL connection object In its simpliest form, Connect() will open a connection to a MySQL server and return a MySQLConnection object. When any connection pooling arguments are given, for example pool_name or pool_size, a pool is created or a previously one is used to return a PooledMySQLConnection. Returns MySQLConnection or PooledMySQLConnection. DateFromTicks(ticks) TimeFromTicks(ticks) TimestampFromTicks(ticks) connect(*args, **kwargs) Create or get a MySQL connection object In its simpliest form, Connect() will open a connection to a MySQL server and return a MySQLConnection object. When any connection pooling arguments are given, for example pool_name or pool_size, a pool is created or a previously one is used to return a PooledMySQLConnection. Returns MySQLConnection or PooledMySQLConnection. custom_error_exception(error=None, exception=None) Define custom exceptions for MySQL server errors This function defines custom exceptions for MySQL server errors and returns the current set customizations. If error is a MySQL Server error number, then you have to pass also the exception class. The error argument can also be a dictionary in which case the key is the server error number, and value the exception to be raised. If none of the arguments are given, then custom_error_exception() will simply return the current set customizations. To reset the customizations, simply supply an empty dictionary. Examples: import mysql.connector from mysql.connector import errorcode # Server error 1028 should raise a DatabaseError mysql.connector.custom_error_exception( 1028, mysql.connector.DatabaseError) # Or using a dictionary: mysql.connector.custom_error_exception(&#123; 1028: mysql.connector.DatabaseError, 1029: mysql.connector.OperationalError, &#125;) # Reset mysql.connector.custom_error_exception(&#123;&#125;) Returns a dictionary. DATA1234567891011BINARY = &lt;mysql.connector.dbapi._DBAPITypeObject object&gt;DATETIME = &lt;mysql.connector.dbapi._DBAPITypeObject object&gt;HAVE_CEXT = TrueNUMBER = &lt;mysql.connector.dbapi._DBAPITypeObject object&gt;ROWID = &lt;mysql.connector.dbapi._DBAPITypeObject object&gt;STRING = &lt;mysql.connector.dbapi._DBAPITypeObject object&gt;__all__ = [&#x27;MySQLConnection&#x27;, &#x27;Connect&#x27;, &#x27;custom_error_exception&#x27;, &#x27;Fi...__version_info__ = (8, 0, 16, &#x27;&#x27;, 1)apilevel = &#x27;2.0&#x27;paramstyle = &#x27;pyformat&#x27;threadsafety = 1 VERSION18.0.16 FILE1/home/shelling/env/lib/python3.7/site-packages/mysql/connector/__init__.py","raw":null,"content":null,"categories":[{"name":"SQL","slug":"SQL","permalink":"https://mumu-1005.github.io/pishon/categories/SQL/"}],"tags":[{"name":"help","slug":"help","permalink":"https://mumu-1005.github.io/pishon/tags/help/"},{"name":"Python","slug":"Python","permalink":"https://mumu-1005.github.io/pishon/tags/Python/"},{"name":"MySQL","slug":"MySQL","permalink":"https://mumu-1005.github.io/pishon/tags/MySQL/"},{"name":"driver","slug":"driver","permalink":"https://mumu-1005.github.io/pishon/tags/driver/"}]},{"title":"java sdk 1.8 java.lang.Math","slug":"java-lang-Math","date":"2017-08-19T06:08:06.000Z","updated":"2017-08-19T06:08:06.000Z","comments":false,"path":"/articles/java-lang-Math.html","link":"","permalink":"https://mumu-1005.github.io/pishon/articles/java-lang-Math.html","excerpt":"","keywords":null,"text":"1、求绝对值abs()12345678//返回double变量的绝对值abs(double a)&#123;return the absolute value of a double value&#125;//返回float变量的绝对值abs(float a)&#123;return the absolute value of a float value&#125;//返回int变量的绝对值abs(int a)&#123;return the absolute value of a int value&#125;//返回long变量的绝对值abs(long a)&#123;return the absolute value of long value&#125; 2、三角函数123456789101112//返回角的反余弦,范围在 0.0 到 pi 之间。acos(double a)&#123;return the arc cosine of a value; the returned angle is in the range 0.0 through pi &#125;//返回角的反正弦，范围在 -pi/2 到 pi/2 之间。asin(double a)&#123;return the arc sine of a value; the returned angle is in the range -pi/2 through pi/2. &#125;//返回角的反正切，范围在 -pi/2 到 pi/2 之间。atan(double a)&#123;return the arc tangent of a value; the returned angle is in the range -pi/2 through pi/2. &#125;//返回角的三角余弦cos(double a)&#123;return the trigonometric cosine of an angle. &#125;//返回角的三角正弦sin(double a)&#123;return the trigonometric sine of an angle. &#125;//返回角的三角正切tan(double a)&#123;return the trigonometric tangent of an angle. &#125; 3、双曲线函数123456//返回double变量的双曲线余弦cosh(double x)&#123;return the hyperbolic cosine of a double value.&#125;//返回double变量的双曲线正弦sinh(double x)&#123;return the hyperbolic sine of a double value.&#125;、//返回double变量的双曲线正切tanh(double x)&#123;return the hyperbolic tangent of a double value.&#125;、 4、算术溢出处理函数1234567891011121314151617181920212223242526//返回两个int类型变量的求和结果,溢出处理 抛出异常ArithmeticExceptionaddExact(int x,int y)&#123;return the sum of its arguments, throwing an exception if the result overflows a int.//返回两个long类型变量的求和结果,溢出处理 抛出异常ArithmeticExceptionaddExact(long x,long y)&#123;return the sum of its arguments, throwing an exception if the result overflows a long.//返回int参数值减1，如果结果溢出，抛出例外decrementExact(int a)&#123;return the argument decremented by one, throwing an exception if the result overflows an int.&#125;//返回long参数值减1，如果结果溢出，抛出例外decrementExact(long a)&#123;return the argument decremented by one, throwing an exception if the result overflows an long.&#125;//返回int参数值加1，如果结果溢出，抛出例外incrementExact(int a)&#123;return the argument incremented by one, throwing an exception if the result overflows an int.&#125;//返回long参数值加1，如果结果溢出，抛出例外incrementExact(long a)&#123;return the argument incremented by one, throwing an exception if the result overflows a long.&#125;//返回两个数的乘积，结果溢出会抛出例外multiplytExact(int x, int y)&#123;return the product of the arguments, throwing an exception if the result overflows an int.&#125;//返回两个数的乘积，结果溢出会抛出例外multiplyExact(long x, long y)&#123;return the product of the arguments, throwing an exception if the result overflows a long.&#125;//返回int参数值的相反数negateExact(int a)&#123;return the negation of the argument, throwing an exception if the result overflows an int.&#125;//返回long参数值的相反数negateExact(long a)&#123;return the negation of the argument, throwing an exception if the result overflows a long.&#125;//返回两个数之差，如果溢出，抛出例外subtractExact(int x, int y)&#123;return the difference of the arguments, throwing an exception if the result overflows an int.&#125;//返回两个数之差，如果溢出，抛出例外subtractExact(long x, long y)&#123;return the difference of the arguments, throwing an exception if the result overflows a long.&#125;//长整数转换成整数，如果溢出，抛出例外toIntExact(long value)&#123;return the value of the longargument; throwing an exception if the value overflows an int.&#125; 5、坐标函数12//将矩形坐标转化为极坐标（r，theta）atan2(double y, double x)&#123;return the angle theta from the conversion of rectangular coordinates (x, y) to polar coordinates (r, theta).&#125; 6、数值运算函数123456789101112131415161718192021222324252627282930//返回double变量的立方根cbrt(double a)&#123;return the cube root of a double value.&#125;//返回欧拉数e的double变量次幂的值exp(double a)&#123;return &quot;Euler&#x27;s number&quot; eraised to the power of adouble value.&#125;//返回ex -1expm1(double x)&#123;return ex -1&#125;//返回 sqrt(x2 +y2)，没有中间溢出或下溢hypot(double x, double y)&#123;return sqrt(x2 +y2) without intermediate overflow or underflow.&#125;//按照 IEEE 754 标准的规定，对两个参数进行余数运算IEEEremainder(double f1, double f2)&#123;Computes the remainder operation on two arguments as prescribed by the IEEE 754 standard.&#125;//返回（底数是 e）double 值的自然对数log(double a)&#123;return the natural logarithm (base e) of a double value.&#125;//返回 double 值的底数为 10 的对数log10(double a)&#123;Returns the base 10 logarithm of a double value.&#125;//返回参数与 1 的和的自然对数log1p(double x)&#123;return the natural logarithm of the sum of the argument and 1.&#125;//返回第一个参数的第二个参数次幂的值pow(double a, double b)&#123;return the value of the first argument raised to the power of the second argument.&#125;//返回带正号的 double 值，大于或等于 0.0，小于 1.0random()&#123;return a double value with a positive sign, greater than or equal to 0.0 and less than 1.0.&#125;//返回正确舍入的 double 值的正平方根sqrt(double a)&#123;return the correctly rounded positive square root of a double value.&#125;//返回double表示形式中使用的无偏指数getExponent(double d)&#123;return the unbiased exponent used in the representation of a double.&#125;//返回float表示形式中使用的无偏指数getExponent(float f)&#123;return the unbiased exponent used in the representation of a float.&#125;//返回double 变量d乘以2的scaleFactor次幂scalb(double d, int scaleFactor)&#123;return d × 2scaleFactorrounded as if performed by a single correctly rounded floating-point multiply to a member of the double value set.&#125;//返回float变量d乘以2的scaleFactor次幂scalb(float d, int scaleFactor)&#123;return d × 2scaleFactorrounded as if performed by a single correctly rounded floating-point multiply to a member of the double value set.&#125; 7、求接近值函数12345678910111213141516171819202122232425262728//返回最小的（最接近负无穷大）double 值，该值大于或等于参数，并且等于某个整数ceil(double a)&#123;return the smallest (closest to negative infinity) doublevalue that is greater than or equal to the argument and is equal to a mathematical integer.&#125;//返回最大的（最接近正无穷大）double 值，该值小于或等于参数，并且等于某个整数floor(double a)&#123;return the largest (closest to positive infinity) doublevalue that is less than or equal to the argument and is equal to a mathematical integer.&#125;//返回等于或小于代数商的最大整数值floorDiv(long x, long y)&#123;return the largest (closest to positive infinity) longvalue that is less than or equal to the algebraic quotient.&#125;//返回int整数的最小模数floorMod(int x, int y)&#123;return the floor modulus of the int arguments.&#125;//返回long整数的最小模数floorMod(long x, long y)&#123;return the floor modulus of the long arguments.&#125;//返回第一个doublel类型参数的值，该值的符号使用第二个参数的符号copySign(double magnitude, double sign)&#123;return the first floating-point argument with the sign of the second floating-point argument.&#125;//返回第一个float类型参数的值，该值的符号使用第二个参数的符号copySign(float magnitude, double sign)&#123;return the first floating-point argument with the sign of the second floating-point argument.&#125;//返回两个参数之间和第一个参数相邻的浮点数nextAfter(double start, double direction)&#123;return the floating-point number adjacent to the first argument in the direction of the second argument.&#125;//返回两个参数之间和第一个参数相邻的浮点数nextAfter(float start, double direction)&#123;return the floating-point number adjacent to the first argument in the direction of the second argument.&#125;//返回参数值和负无穷大之间和参数值相邻的浮点数nextDown(double d)&#123;return the floating-point value adjacent to d in the direction of negative infinity.&#125;//返回参数值和负无穷大之间和参数值相邻的浮点数nextDown(float f)&#123;return the floating-point value adjacent to f in the direction of negative infinity.&#125;//返回参数值和正无穷大之间和参数值相邻的浮点数nextUp(double d)&#123;return the floating-point value adjacent to d in the direction of positive infinity.&#125;//返回参数值和正无穷大之间和参数值相邻的浮点数nexUp(float f)&#123;return the floating-point value adjacent to f in the direction of positive infinity.&#125;//返回其值最接近参数并且是整数的 double 值rint(double a)&#123;return the double value that is closest in value to the argument and is equal to a mathematical integer.&#125; 8、比较函数123456789101112131415161718192021222324//返回两个 double 值中较大的一个max(double a, double b)&#123;return the greater of two double values.&#125;//返回两个 float 值中较大的一个max(float a, float b)&#123;return the greater of two float values.&#125;//返回两个 int值中较大的一个max(int a , int b)&#123;return the greater of two int values.&#125;//返回两个 long 值中较小的一个max(long a , long b)&#123;return the greater of two long values.&#125;//返回两个 double 值中较小的一个min(double a, double b)&#123;return the smaller of two double values.&#125;//返回两个 float 值中较小的一个min(float a, float b)&#123;return the smaller of two float values.&#125;//返回两个 int 值中较小的一个min(int a, int b)&#123;return the smaller of two int values.&#125;//返回两个 long 值中较小的一个min(long a, long b)&#123;return the smaller of two long values.&#125;//返回参数的符号函数；如果参数是零则返回零；如果参数大于零，则返回 1.0；如果参数小于零，则返回 -1.0signum(double d)&#123;return the signum function of the argument; zero if the argument is zero, 1.0 if the argument is greater than zero, -1.0 if the argument is less than zero.&#125;//返回参数的符号函数；如果参数是零则返回零；如果参数大于零，则返回 1.0；如果参数小于零，则返回 -1.0signum(float f)&#123;return the signum function of the argument; zero if the argument is zero, 1.0f if the argument is greater than zero, -1.0f if the argument is less than zero.&#125;//返回double参数的 ulp 大小ulp(double d)&#123;return the size of an ulp of the argument.&#125;//返回float参数的 ulp 大小ulp(float f)&#123;return the size of an ulp of the argument.&#125; 9、角转换函数1234//将用弧度测量的角转换为近似相等的用度数测量的角toDegrees(double angrad)&#123;converts an angle measured in radians to an approximately equivalent angle measured in degrees.&#125;//将用度数测量的角转换为近似相等的用弧度测量的角toRadians(double angdeg)&#123;converts an angle measured in degrees to an approximately equivalent angle measured in radians.&#125;","raw":null,"content":null,"categories":[{"name":"JAVA","slug":"JAVA","permalink":"https://mumu-1005.github.io/pishon/categories/JAVA/"}],"tags":[{"name":"Math","slug":"Math","permalink":"https://mumu-1005.github.io/pishon/tags/Math/"}]},{"title":"SENDMAIL-General Commands Manual","slug":"sendmail-man","date":"2017-08-05T07:20:04.000Z","updated":"2018-05-19T13:10:39.000Z","comments":false,"path":"/articles/sendmail-man.html","link":"","permalink":"https://mumu-1005.github.io/pishon/articles/sendmail-man.html","excerpt":"","keywords":null,"text":"12NAME - sendmail - Postfix to Sendmail compatibility interface SYNOPSIS1234567sendmail [option ...] [recipient ...]mailqsendmail -bpnewaliasessendmail -I DESCRIPTION123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200201202203204205206207208209210211212213214215216217218219220221222223224225226227228229230231232233234235236237238239240241242243244245246247248249250251252253254255256257258259The Postfix sendmail(1) command implements the Postfix to Sendmail com‐patibility interface. For the sake of compatibility with existingapplications, some Sendmail command-line options are recognized butsilently ignored.By default, Postfix sendmail(1) reads a message from standard inputuntil EOF or until it reads a line with only a . character, andarranges for delivery. Postfix sendmail(1) relies on the postdrop(1)command to create a queue file in the maildrop directory.Specific command aliases are provided for other common modes of opera‐tion:mailq List the mail queue. Each entry shows the queue file ID, message size, arrival time, sender, and the recipients that still need to be delivered. If mail could not be delivered upon the last attempt, the reason for failure is shown. The queue ID string is followed by an optional status character: * The message is in the active queue, i.e. the message is selected for delivery. ! The message is in the hold queue, i.e. no further deliv‐ ery attempt will be made until the mail is taken off hold. This mode of operation is implemented by executing the postqueue(1) command.newaliases Initialize the alias database. If no input file is specified (with the -oA option, see below), the program processes the file(s) specified with the alias_database configuration parame‐ ter. If no alias database type is specified, the program uses the type specified with the default_database_type configuration parameter. This mode of operation is implemented by running the postalias(1) command. Note: it may take a minute or so before an alias database update becomes visible. Use the &quot;postfix reload&quot; command to eliminate this delay.These and other features can be selected by specifying the appropriatecombination of command-line options. Some features are controlled byparameters in the main.cf configuration file.The following options are recognized:-Am (ignored)-Ac (ignored) Postfix sendmail uses the same configuration file regardless of whether or not a message is an initial submission.-B body_type The message body MIME type: 7BIT or 8BITMIME.-bd Go into daemon mode. This mode of operation is implemented by executing the &quot;postfix start&quot; command.-bh (ignored)-bH (ignored) Postfix has no persistent host status database.-bi Initialize alias database. See the newaliases command above.-bl Go into daemon mode. To accept only local connections as with Sendmail´s -bl option, specify &quot;inet_interfaces = loopback&quot; in the Postfix main.cf configuration file.-bm Read mail from standard input and arrange for delivery. This is the default mode of operation.-bp List the mail queue. See the mailq command above.-bs Stand-alone SMTP server mode. Read SMTP commands from standard input, and write responses to standard output. In stand-alone SMTP server mode, mail relaying and other access controls are disabled by default. To enable them, run the process as the mail_owner user. This mode of operation is implemented by running the smtpd(8) daemon.-bv Do not collect or deliver a message. Instead, send an email report after verifying each recipient address. This is useful for testing address rewriting and routing configurations. This feature is available in Postfix version 2.1 and later.-C config_file-C config_dir The path name of the Postfix main.cf file, or of its parent directory. This information is ignored with Postfix versions before 2.3. With Postfix version 3.2 and later, a non-default directory must be authorized in the default main.cf file, through the alter‐ nate_config_directories or multi_instance_directories parame‐ ters. With all Postfix versions, you can specify a directory pathname with the MAIL_CONFIG environment variable to override the loca‐ tion of configuration files.-F full_name Set the sender full name. This overrides the NAME environment variable, and is used only with messages that have no From: mes‐ sage header.-f sender Set the envelope sender address. This is the address where delivery problems are sent to. With Postfix versions before 2.1, the Errors-To: message header overrides the error return address.-G Gateway (relay) submission, as opposed to initial user submis‐ sion. Either do not rewrite addresses at all, or update incom‐ plete addresses with the domain information specified with remote_header_rewrite_domain. This option is ignored before Postfix version 2.3.-h hop_count (ignored) Hop count limit. Use the hopcount_limit configuration parameter instead.-I Initialize alias database. See the newaliases command above.-i When reading a message from standard input, don´t treat a line with only a . character as the end of input.-L label (ignored) The logging label. Use the syslog_name configuration parameter instead.-m (ignored) Backwards compatibility.-N dsn (default: &#x27;delay, failure&#x27;) Delivery status notification control. Specify either a comma-separated list with one or more of failure (send notifica‐ tion when delivery fails), delay (send notification when deliv‐ ery is delayed), or success (send notification when the message is delivered); or specify never (don&#x27;t send any notifications at all). This feature is available in Postfix 2.3 and later.-n (ignored) Backwards compatibility.-oAalias_database Non-default alias database. Specify pathname or type:pathname. See postalias(1) for details.-O option=value (ignored) Set the named option to value. Use the equivalent configuration parameter in main.cf instead.-o7 (ignored)-o8 (ignored) To send 8-bit or binary content, use an appropriate MIME encap‐ sulation and specify the appropriate -B command-line option.-oi When reading a message from standard input, don´t treat a line with only a . character as the end of input.-om (ignored) The sender is never eliminated from alias etc. expansions.-o x value (ignored) Set option x to value. Use the equivalent configuration parame‐ ter in main.cf instead.-r sender Set the envelope sender address. This is the address where delivery problems are sent to. With Postfix versions before 2.1, the Errors-To: message header overrides the error return address.-R return Delivery status notification control. Specify &quot;hdrs&quot; to return only the header when a message bounces, &quot;full&quot; to return a full copy (the default behavior). The -R option specifies an upper bound; Postfix will return only the header, when a full copy would exceed the bounce_size_limit setting. This option is ignored before Postfix version 2.10.-q Attempt to deliver all queued mail. This is implemented by exe‐ cuting the postqueue(1) command. Warning: flushing undeliverable mail frequently will result in poor delivery performance of all other mail.-qinterval (ignored) The interval between queue runs. Use the queue_run_delay config‐ uration parameter instead.-qIqueueid Schedule immediate delivery of mail with the specified queue ID. This option is implemented by executing the postqueue(1) com‐ mand, and is available with Postfix version 2.4 and later.-qRsite Schedule immediate delivery of all mail that is queued for the named site. This option accepts only site names that are eligi‐ ble for the &quot;fast flush&quot; service, and is implemented by execut‐ ing the postqueue(1) command. See flush(8) for more information about the &quot;fast flush&quot; service.-qSsite This command is not implemented. Use the slower &quot;sendmail -q&quot; command instead.-t Extract recipients from message headers. These are added to any recipients specified on the command line. With Postfix versions prior to 2.1, this option requires that no recipient addresses are specified on the command line.-U (ignored) Initial user submission.-V envid Specify the envelope ID for notification by servers that support DSN. This feature is available in Postfix 2.3 and later.-XV (Postfix 2.2 and earlier: -V) Variable Envelope Return Path. Given an envelope sender address of the form owner-listname@origin, each recipient user@domain receives mail with a personalized envelope sender address. By default, the personalized envelope sender address is owner-listname+user=domain@origin. The default + and = charac‐ ters are configurable with the default_verp_delimiters configu‐ ration parameter.-XVxy (Postfix 2.2 and earlier: -Vxy) As -XV, but uses x and y as the VERP delimiter characters, instead of the characters specified with the default_verp_delim‐ iters configuration parameter.-v Send an email report of the first delivery attempt (Postfix ver‐ sions 2.1 and later). Mail delivery always happens in the back‐ ground. When multiple -v options are given, enable verbose log‐ ging for debugging purposes.-X log_file (ignored) Log mailer traffic. Use the debug_peer_list and debug_peer_level configuration parameters instead. SECURITY123By design, this program is not set-user (or group) id. However, it musthandle data from untrusted, possibly remote, users. Thus, the usualprecautions need to be taken against malicious inputs. DIAGNOSTICS1Problems are logged to syslogd(8) and to the standard error stream. ENVIRONMENT123456789101112MAIL_CONFIG Directory with Postfix configuration files.MAIL_VERBOSE (value does not matter) Enable verbose logging for debugging purposes.MAIL_DEBUG (value does not matter) Enable debugging with an external command, as specified with the debugger_command configuration parameter.NAME The sender full name. This is used only with messages that have no From: message header. See also the -F option above. CONFIGURATION PARAMETERS123The following main.cf parameters are especially relevant to this pro‐gram. The text below provides only a parameter summary. See post‐conf(5) for more details including examples. COMPATIBILITY CONTROLS12345Available with Postfix 2.9 and later:sendmail_fix_line_endings (always) Controls how the Postfix sendmail command converts email message line endings from &lt;CR&gt;&lt;LF&gt; into UNIX format (&lt;LF&gt;). TROUBLE SHOOTING CONTROLS123456789101112131415The DEBUG_README file gives examples of how to trouble shoot a Postfixsystem.debugger_command (empty) The external command to execute when a Postfix daemon program is invoked with the -D option.debug_peer_level (2) The increment in verbose logging level when a remote client or server matches a pattern in the debug_peer_list parameter.debug_peer_list (empty) Optional list of remote client or server hostname or network address patterns that cause the verbose logging level to increase by the amount specified in $debug_peer_level. ACCESS CONTROLS123456789101112Available in Postfix version 2.2 and later:authorized_flush_users (static:anyone) List of users who are authorized to flush the queue.authorized_mailq_users (static:anyone) List of users who are authorized to view the queue.authorized_submit_users (static:anyone) List of users who are authorized to submit mail with the send‐ mail(1) command (and with the privileged postdrop(1) helper com‐ mand). RESOURCE AND RATE CONTROLS1234567891011121314151617bounce_size_limit (50000) The maximal amount of original message text that is sent in a non-delivery notification.fork_attempts (5) The maximal number of attempts to fork() a child process.fork_delay (1s) The delay between attempts to fork() a child process.hopcount_limit (50) The maximal number of Received: message headers that is allowed in the primary message headers.queue_run_delay (300s) The time between deferred queue scans by the queue manager; prior to Postfix 2.4 the default value was 1000s. FAST FLUSH CONTROLS123456The ETRN_README file describes configuration and operation details forthe Postfix &quot;fast flush&quot; service.fast_flush_domains ($relay_domains) Optional list of destinations that are eligible for per-destina‐ tion logfiles with mail that is queued to those destinations. VERP CONTROLS123456789The VERP_README file describes configuration and operation details ofPostfix support for variable envelope return path addresses.default_verp_delimiters (+=) The two default VERP delimiter characters.verp_delimiter_filter (-=+) The characters Postfix accepts as VERP delimiter characters on the Postfix sendmail(1) command line and in SMTP commands. MISCELLANEOUS CONTROLS123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960alias_database (see &#x27;postconf -d&#x27; output) The alias databases for local(8) delivery that are updated with &quot;newaliases&quot; or with &quot;sendmail -bi&quot;.command_directory (see &#x27;postconf -d&#x27; output) The location of all postfix administrative commands.config_directory (see &#x27;postconf -d&#x27; output) The default location of the Postfix main.cf and master.cf con‐ figuration files.daemon_directory (see &#x27;postconf -d&#x27; output) The directory with Postfix support programs and daemon programs.default_database_type (see &#x27;postconf -d&#x27; output) The default database type for use in newaliases(1), postalias(1) and postmap(1) commands.delay_warning_time (0h) The time after which the sender receives a copy of the message headers of mail that is still queued.import_environment (see &#x27;postconf -d&#x27; output) The list of environment parameters that a privileged Postfix process will import from a non-Postfix parent process, or name=value environment overrides.mail_owner (postfix) The UNIX system account that owns the Postfix queue and most Postfix daemon processes.queue_directory (see &#x27;postconf -d&#x27; output) The location of the Postfix top-level queue directory.remote_header_rewrite_domain (empty) Don&#x27;t rewrite message headers from remote clients at all when this parameter is empty; otherwise, rewrite message headers and append the specified domain name to incomplete addresses.syslog_facility (mail) The syslog facility of Postfix logging.syslog_name (see &#x27;postconf -d&#x27; output) A prefix that is prepended to the process name in syslog records, so that, for example, &quot;smtpd&quot; becomes &quot;prefix/smtpd&quot;.Postfix 3.2 and later:alternate_config_directories (empty) A list of non-default Postfix configuration directories that may be specified with &quot;-c config_directory&quot; on the command line (in the case of sendmail(1), with the &quot;-C&quot; option), or via the MAIL_CONFIG environment parameter.multi_instance_directories (empty) An optional list of non-default Postfix configuration directo‐ ries; these directories belong to additional Postfix instances that share the Postfix executable files and documentation with the default Postfix instance, and that are started, stopped, etc., together with the default Postfix instance. FILES12/var/spool/postfix, mail queue/etc/postfix, configuration files SEE ALSO12345678910pickup(8), mail pickup daemonqmgr(8), queue managersmtpd(8), SMTP serverflush(8), fast flush servicepostsuper(1), queue maintenancepostalias(1), create/update/query alias databasepostdrop(1), mail posting utilitypostfix(1), mail system controlpostqueue(1), mail queue controlsyslogd(8), system logging README_FILES12345Use &quot;postconf readme_directory&quot; or &quot;postconf html_directory&quot; to locatethis information.DEBUG_README, Postfix debugging howtoETRN_README, Postfix ETRN howtoVERP_README, Postfix VERP howto LICENSE 1The Secure Mailer license must be distributed with this software. AUTHOR(S)123456789Wietse VenemaIBM T.J. Watson ResearchP.O. Box 704Yorktown Heights, NY 10598, USAWietse VenemaGoogle, Inc.111 8th AvenueNew York, NY 10011, USA","raw":null,"content":null,"categories":[{"name":"LINUX","slug":"LINUX","permalink":"https://mumu-1005.github.io/pishon/categories/LINUX/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"https://mumu-1005.github.io/pishon/tags/Linux/"},{"name":"SENDMAIL","slug":"SENDMAIL","permalink":"https://mumu-1005.github.io/pishon/tags/SENDMAIL/"}]},{"title":"ps-man","slug":"ps-man","date":"2017-06-29T13:36:38.000Z","updated":"2019-04-05T03:52:09.000Z","comments":false,"path":"/articles/ps-man.html","link":"","permalink":"https://mumu-1005.github.io/pishon/articles/ps-man.html","excerpt":"","keywords":null,"text":"12NAME - ps -- process status SYNOPSIS12ps [-AaCcEefhjlMmrSTvwXx] [-O fmt | -o fmt] [-G gid[,gid...]] [-g grp[,grp...]] [-u uid[,uid...]] [-p pid[,pid...]] [-t tty[,tty...]] [-U user[,user...]]ps [-L] DESCRIPTION123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384The ps utility displays a header line, followed by lines containing information about all of your processes that have controlling terminals.A different set of processes can be selected for display by using any combination of the -a, -G, -g, -p, -T, -t, -U, and -u options. If more than one of these options are given, then ps will select all processes which are matched by at least one of the given options.For the processes which have been selected for display, ps will usually display one line per process. The -M option may result in multiple output lines (one line per thread) for some processes. By default all of these output lines are sorted first by controlling terminal, then by process ID. The -m, -r, and -v options will change the sort order. If more than one sorting option was given, then the selected processes will be sorted by the last sorting option which was specified.For the processes which have been selected for display, the information to display is selected based on a set of keywords (see the -L, -O, and -o options). The default output format includes, for each process, the process‘ ID, controlling terminal, CPU time (including both user and system time), state, and associated command.The options are as follows:-A Display information about other users‘ processes, including those without controlling terminals.-a Display information about other users‘ processes as well as your own. This will skip any processes which do not have a controlling terminal, unless the -x option is also specified.-C Change the way the CPU percentage is calculated by using a ``raw‘‘ CPU calculation that ignores ``resident‘‘ time (this normally has no effect).-c Change the ``command‘‘ column output to just contain the executable name, rather than the full command line.-d Like -A, but excludes session leaders.-E Display the environment as well. This does not reflect changes in the environment after process launch.-e Identical to -A.-f Display the uid, pid, parent pid, recent CPU usage, process start time, controlling tty, elapsed CPU usage, and the associated command. If the -u option is also used, display the user name rather then the numeric uid. When -o or -O is used to add to the display following -f, the command field is not truncated as severely as it is in other formats.-G Display information about processes which are running with the specified real group IDs.-g Display information about processes with the specified process group leaders.-h Repeat the information header as often as necessary to guarantee one header per page of information.-j Print information associated with the following keywords: user, pid, ppid, pgid, sess, jobc, state, tt, time, and command.-L List the set of keywords available for the -O and -o options.-l Display information associated with the following keywords: uid, pid, ppid, flags, cpu, pri, nice, vsz=SZ, rss, wchan, state=S, paddr=ADDR, tty, time, and command=CMD.-M Print the threads corresponding to each task.-m Sort by memory usage, instead of the combination of controlling terminal and process ID.-O Add the information associated with the space or comma separated list of keywords specified, after the process ID, in the default information display. Keywords may be appended with an equals (`=‘) sign and a string. This causes the printed header to use the specified string instead of the standard header.-o Display information associated with the space or comma separated list of keywords specified. Multiple keywords may also be given in the form of more than one -o option. Keywords may be appended with an equals (`=‘) sign and a string. This causes the printed header to use the specified string instead of the standard header. If all keywords have empty header texts, no header line is written.-p Display information about processes which match the specified process IDs.-r Sort by current CPU usage, instead of the combination of controlling terminal and process ID.-S Change the way the process time is calculated by summing all exited children to their parent process.-T Display information about processes attached to the device associated with the standard input.-t Display information about processes attached to the specified terminal devices.-U Display the processes belonging to the specified real user IDs.-u Display the processes belonging to the specified usernames.-v Display information associated with the following keywords: pid, state, time, sl, re, pagein, vsz, rss, lim, tsiz, %cpu, %mem, and command. The -v option implies the -m option.-w Use 132 columns to display information, instead of the default which is your window size. If the -w option is specified more than once, ps will use as many columns as necessary without regard for your window size. When output is not to a terminal, an unlimited number of columns are always used.-X When displaying processes matched by other options, skip any processes which do not have a controlling terminal.-x When displaying processes matched by other options, include processes which do not have a controlling terminal. This is the opposite of the -X option. If both -X and -x are specified in the same command, then ps will use the one which was specified last.A complete list of the available keywords is given below. Some of these keywords are further specified as follows:%cpu The CPU utilization of the process; this is a decaying average over up to a minute of previous (real) time. Because the time base over which this is computed varies (some processes may be very young), it is possible for the sum of all %cpu fields to exceed 100%.%mem The percentage of real memory used by this process.flags The flags associated with the process as in the include file &lt;sys/proc.h&gt;: P_ADVLOCK 0x00001 Process may hold a POSIX advisory lock P_CONTROLT 0x00002 Has a controlling terminal P_LP64 0x00004 Process is LP64 P_NOCLDSTOP 0x00008 No SIGCHLD when children stop P_PPWAIT 0x00010 Parent is waiting for child to exec/exit P_PROFIL 0x00020 Has started profiling P_SELECT 0x00040 Selecting; wakeup/waiting danger P_CONTINUED 0x00080 Process was stopped and continued P_SUGID 0x00100 Had set id privileges since last exec P_SYSTEM 0x00200 System proc: no sigs, stats or swapping P_TIMEOUT 0x00400 Timing out during sleep P_TRACED 0x00800 Debugged process being traced P_WAITED 0x01000 Debugging process has waited for child P_WEXIT 0x02000 Working on exiting P_EXEC 0x04000 Process called exec P_OWEUPC 0x08000 Owe process an addupc() call at next ast P_WAITING 0x40000 Process has a wait() in progress P_KDEBUG 0x80000 Kdebug tracing on for this processlim The soft limit on memory used, specified via a call to setrlimit(2).lstart The exact time the command started, using the `%c‘ format described in strftime(3).nice The process scheduling increment (see setpriority(2)).rss the real memory (resident set) size of the process (in 1024 byte units).start The time the command started. If the command started less than 24 hours ago, the start time is displayed using the ``%l:ps.1p‘‘ format described in strftime(3). If the command started less than 7 days ago, the start time is displayed using the ``%a6.15p‘‘ format. Otherwise, the start time is displayed using the ``%e%b%y‘‘ format.state The state is given by a sequence of characters, for example, ``RWNA‘‘. The first character indicates the run state of the process: I Marks a process that is idle (sleeping for longer than about 20 seconds). R Marks a runnable process. S Marks a process that is sleeping for less than about 20 seconds. T Marks a stopped process. U Marks a process in uninterruptible wait. Z Marks a dead process (a ``zombie‘‘). Additional characters after these, if any, indicate additional state information: + The process is in the foreground process group of its control terminal. &lt; The process has raised CPU scheduling priority. &gt; The process has specified a soft limit on memory requirements and is currently exceeding that limit; such a process is (necessarily) not swapped. A the process has asked for random page replacement (VA_ANOM, from vadvise(2), for example, lisp(1) in a garbage collect). E The process is trying to exit. L The process has pages locked in core (for example, for raw I/O). N The process has reduced CPU scheduling priority (see setpriority(2)). S The process has asked for FIFO page replacement (VA_SEQL, from vadvise(2), for example, a large image processing program using virtual memory to sequentially address voluminous data). s The process is a session leader. V The process is suspended during a vfork(2). W The process is swapped out. X The process is being traced or debugged.tt An abbreviation for the pathname of the controlling terminal, if any. The abbreviation consists of the three letters following /dev/tty, or, for the console, ``con‘‘. This is followed by a `-‘ if the process can no longer reach that controlling terminal (i.e., it has been revoked).wchan The event (an address in the system) on which a process waits. When printed numerically, the initial part of the address is trimmed off and the result is printed in hex, for example, 0x80324000 prints as 324000.When printing using the command keyword, a process that has exited and has a parent that has not yet waited for the process (in other words, a zombie) is listed as ``&lt;defunct&gt;‘‘, and a process which is blocked while trying to exit is listed as ``&lt;exiting&gt;‘‘. If the arguments cannot be located (usually because it has not been set, as is the case of system processes and/or kernel threads) the command name is printed within square brackets. The process can change the arguments shown with setproctitle(3). Otherwise, ps makes an educated guess as to the file name and arguments given when the process was created by examining memory or the swap area. The method is inherently somewhat unreliable and in any event a process is entitled to destroy this information. The ucomm (accounting) keyword can, however, be depended on. If the arguments are unavailable or do not agree with the ucomm keyword, the value for the ucomm keyword is appended to the arguments in parentheses. KEYWORDS1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768The following is a complete list of the available keywords and their meanings. Several of them have aliases (keywords which are synonyms).%cpu percentage CPU usage (alias pcpu)%mem percentage memory usage (alias pmem)acflag accounting flag (alias acflg)args command and argumentscomm commandcommand command and argumentscpu short-term CPU usage factor (for scheduling)etime elapsed running timeflags the process flags, in hexadecimal (alias f)gid processes group id (alias group)inblk total blocks read (alias inblock)jobc job control countktrace tracing flagsktracep tracing vnodelim memoryuse limitlogname login name of user who started the sessionlstart time startedmajflt total page faultsminflt total page reclaimsmsgrcv total messages received (reads from pipes/sockets)msgsnd total messages sent (writes on pipes/sockets)nice nice value (alias ni)nivcsw total involuntary context switchesnsigs total signals taken (alias nsignals)nswap total swaps in/outnvcsw total voluntary context switchesnwchan wait channel (as an address)oublk total blocks written (alias oublock)p_ru resource usage (valid only for zombie)paddr swap addresspagein pageins (same as majflt)pgid process group numberpid process IDppid parent process IDpri scheduling priorityre core residency time (in seconds; 127 = infinity)rgid real group IDrss resident set sizeruid real user IDruser user name (from ruid)sess session IDsig pending signals (alias pending)sigmask blocked signals (alias blocked)sl sleep time (in seconds; 127 = infinity)start time startedstate symbolic process state (alias stat)svgid saved gid from a setgid executablesvuid saved UID from a setuid executabletdev control terminal device numbertime accumulated CPU time, user + system (alias cputime)tpgid control terminal process group IDtsess control terminal session IDtsiz text size (in Kbytes)tt control terminal name (two letter abbreviation)tty full name of control terminalucomm name to be used for accountinguid effective user IDupr scheduling priority on return from system call (alias usrpri)user user name (from UID)utime user CPU time (alias putime)vsz virtual size in Kbytes (alias vsize)wchan wait channel (as a symbolic name)wq total number of workqueue threadswqb number of blocked workqueue threadswqr number of running workqueue threadswql workqueue limit status (C = constrained thread limit, T = total thread limit)xstat exit or stop status (valid only for stopped or zombie process) ENVIRONMENT12The following environment variables affect the execution of ps:COLUMNS If set, specifies the user‘s preferred output width in column positions. By default, ps attempts to automatically determine the terminal width. FILES1234/dev special files and device names/var/run/dev.db /dev name database/var/db/kvm_kernel.db system namelist database LEGACY DESCRIPTION1234567In legacy mode, ps functions as described above, with the following differences:-e Display the environment as well. Same as -E.-g Ignored for compatibility. Takes no argument.-l Display information associated with the following keywords: uid, pid, ppid, cpu, pri, nice, vsz, rss, wchan, state, tt, time, and command.-u Display information associated with the following keywords: user, pid, %cpu, %mem, vsz, rss, tt, state, start, time, and command. The -u option implies the -r option.The biggest change is in the interpretation of the -u option, which now displays processes belonging to the specified username(s). Thus, &quot;ps -aux&quot; will fail (unless you want to know about user &quot;x&quot;). As a convenience, however, &quot;ps aux&quot; still works as it did in Tiger.For more information about legacy mode, see compat(5). SEE ALSO1kill(1), w(1), kvm(3), strftime(3), sysctl(8) STANDARDS1The ps utility supports the Version 3 of the Single UNIX Specification (``SUSv3‘‘) standard. HISTORY1The ps command appeared in Version 4 AT&amp;T UNIX. BUGS12Since ps cannot run faster than the system and is run as any other scheduled process, the information it displays can never be exact.The ps utility does not correctly display argument lists containing multibyte characters.","raw":null,"content":null,"categories":[{"name":"LINUX","slug":"LINUX","permalink":"https://mumu-1005.github.io/pishon/categories/LINUX/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"https://mumu-1005.github.io/pishon/tags/Linux/"},{"name":"man","slug":"man","permalink":"https://mumu-1005.github.io/pishon/tags/man/"},{"name":"ps","slug":"ps","permalink":"https://mumu-1005.github.io/pishon/tags/ps/"}]},{"title":"crontab-man","slug":"crontab-man","date":"2017-01-05T13:07:52.000Z","updated":"2017-07-05T05:20:09.000Z","comments":false,"path":"/articles/crontab-man.html","link":"","permalink":"https://mumu-1005.github.io/pishon/articles/crontab-man.html","excerpt":"","keywords":null,"text":"SYNOPSIS12crontab [ -u user ] filecrontab [ -u user ] [ -i ] &#123; -e | -l | -r &#125; DESCRIPTION1234567891011121314151617181920212223242526272829303132333435363738394041424344454647crontab is the program used to install, deinstall or list the tablesused to drive the cron(8) daemon in Vixie Cron. Each user can havetheir own crontab, and though these are files in/var/spool/cron/crontabs, they are not intended to be edited directly.If the /etc/cron.allow file exists, then you must be listed (one userper line) therein in order to be allowed to use this command. If the/etc/cron.allow file does not exist but the /etc/cron.deny file doesexist, then you must not be listed in the /etc/cron.deny file in orderto use this command.If neither of these files exists, then depending on site-dependent con‐figuration parameters, only the super user will be allowed to use thiscommand, or all users will be able to use this command.If both files exist then /etc/cron.allow takes precedence. Which meansthat /etc/cron.deny is not considered and your user must be listed in/etc/cron.allow in order to be able to use the crontab.Regardless of the existance of any of these files, the root administra‐tive user is always allowed to setup a crontab. For standard Debiansystems, all users may use this command.If the -u option is given, it specifies the name of the user whosecrontab is to be used (when listing) or modified (when editing). Ifthis option is not given, crontab examines &quot;your&quot; crontab, i.e., thecrontab of the person executing the command. Note that su(8) can con‐fuse crontab and that if you are running inside of su(8) you shouldalways use the -u option for safety&#x27;s sake.The first form of this command is used to install a new crontab fromsome named file or standard input if the pseudo-filename ``-&#x27;&#x27; isgiven.The -l option causes the current crontab to be displayed on standardoutput. See the note under DEBIAN SPECIFIC below.The -r option causes the current crontab to be removed.The -e option is used to edit the current crontab using the editorspecified by the VISUAL or EDITOR environment variables. After youexit from the editor, the modified crontab will be installed automati‐cally. If neither of the environment variables is defined, then thedefault editor /usr/bin/editor is used.The -i option modifies the -r option to prompt the user for a &#x27;y/Y&#x27;response before actually removing the crontab. DEBIAN SPECIFIC12345678910111213The &quot;out-of-the-box&quot; behaviour for crontab -l is to display the threeline &quot;DO NOT EDIT THIS FILE&quot; header that is placed at the beginning ofthe crontab when it is installed. The problem is that it makes thesequencecrontab -l | crontab -non-idempotent -- you keep adding copies of the header. This causespain to scripts that use sed to edit a crontab. Therefore, the defaultbehaviour of the -l option has been changed to not output such header.You may obtain the original behaviour by setting the environment vari‐able CRONTAB_NOHEADER to &#x27;N&#x27;, which will cause the crontab -l commandto emit the extraneous header. SEE ALSO1crontab(5), cron(8) FILES1234567891011/etc/cron.allow/etc/cron.deny/var/spool/cron/crontabsThere is one file for each user&#x27;s crontab under the/var/spool/cron/crontabs directory. Users are not allowed to edit thefiles under that directory directly to ensure that only users allowedby the system to run periodic tasks can add them, and only syntacti‐cally correct crontabs will be written there. This is enforced by hav‐ing the directory writable only by the crontab group and configuringcrontab command with the setgid bid set for that specific group. STANDARDS123The crontab command conforms to IEEE Std1003.2-1992 (``POSIX&#x27;&#x27;). Thisnew command syntax differs from previous versions of Vixie Cron, aswell as from the classic SVR3 syntax. DIAGNOSTICS123456A fairly informative usage message appears if you run it with a badcommand line.cron requires that each entry in a crontab end in a newline character.If the last entry in a crontab is missing the newline, cron will con‐sider the crontab (at least partially) broken and refuse to install it. AUTHOR123Paul Vixie &lt;paul@vix.com&gt; is the author of cron and original creator ofthis manual page. This page has also been modified for Debian by SteveGreenland, Javier Fernandez-Sanguino and Christian Kastner.","raw":null,"content":null,"categories":[{"name":"LINUX","slug":"LINUX","permalink":"https://mumu-1005.github.io/pishon/categories/LINUX/"}],"tags":[{"name":"crontab","slug":"crontab","permalink":"https://mumu-1005.github.io/pishon/tags/crontab/"},{"name":"Linux","slug":"Linux","permalink":"https://mumu-1005.github.io/pishon/tags/Linux/"},{"name":"man","slug":"man","permalink":"https://mumu-1005.github.io/pishon/tags/man/"}]},{"title":"IIS MIME类型扩展 支持apk、ipa的文件下载","slug":"IISMIME类型扩展支持apk、ipa的文件下载","date":"2016-12-16T06:32:09.000Z","updated":"2016-12-16T06:32:09.000Z","comments":false,"path":"/articles/IISMIME类型扩展支持apk、ipa的文件下载.html","link":"","permalink":"https://mumu-1005.github.io/pishon/articles/IISMIME%E7%B1%BB%E5%9E%8B%E6%89%A9%E5%B1%95%E6%94%AF%E6%8C%81apk%E3%80%81ipa%E7%9A%84%E6%96%87%E4%BB%B6%E4%B8%8B%E8%BD%BD.html","excerpt":"","keywords":null,"text":"Android扩展名是：.apk MIMI类型是：application&#x2F;vnd.android.package-archive iOS扩展名是：.ipa MIMI类型是：application&#x2F;iphone","raw":null,"content":null,"categories":[{"name":"SERVER","slug":"SERVER","permalink":"https://mumu-1005.github.io/pishon/categories/SERVER/"}],"tags":[{"name":"server","slug":"server","permalink":"https://mumu-1005.github.io/pishon/tags/server/"},{"name":"IIS","slug":"IIS","permalink":"https://mumu-1005.github.io/pishon/tags/IIS/"},{"name":"APP","slug":"APP","permalink":"https://mumu-1005.github.io/pishon/tags/APP/"}]},{"title":"接口跨域支持","slug":"接口跨域支持","date":"2016-12-12T06:15:50.000Z","updated":"2016-12-12T06:15:50.000Z","comments":false,"path":"/articles/接口跨域支持.html","link":"","permalink":"https://mumu-1005.github.io/pishon/articles/%E6%8E%A5%E5%8F%A3%E8%B7%A8%E5%9F%9F%E6%94%AF%E6%8C%81.html","excerpt":"","keywords":null,"text":"header(“Access-Control-Allow-Origin: *”);","raw":null,"content":null,"categories":[{"name":"PHP","slug":"PHP","permalink":"https://mumu-1005.github.io/pishon/categories/PHP/"}],"tags":[{"name":"API","slug":"API","permalink":"https://mumu-1005.github.io/pishon/tags/API/"},{"name":"跨域","slug":"跨域","permalink":"https://mumu-1005.github.io/pishon/tags/%E8%B7%A8%E5%9F%9F/"}]},{"title":"mysql允许远程访问操作","slug":"mysql允许远程访问操作","date":"2016-11-05T06:35:51.000Z","updated":"2016-11-05T06:35:51.000Z","comments":false,"path":"/articles/mysql允许远程访问操作.html","link":"","permalink":"https://mumu-1005.github.io/pishon/articles/mysql%E5%85%81%E8%AE%B8%E8%BF%9C%E7%A8%8B%E8%AE%BF%E9%97%AE%E6%93%8D%E4%BD%9C.html","excerpt":"","keywords":null,"text":"终端操作 1、先在服务器中通过命令行方式登录mysql： mysql -uroot -p密码 2、执行use mysql; 3、执行grant all privileges on . to root@’%’ identified by ‘密码’; 4、执行flush privileges; 数据库管理中心操作在user表中将相应用户对应的host改为“%”​","raw":null,"content":null,"categories":[{"name":"SERVER","slug":"SERVER","permalink":"https://mumu-1005.github.io/pishon/categories/SERVER/"}],"tags":[{"name":"MySQL","slug":"MySQL","permalink":"https://mumu-1005.github.io/pishon/tags/MySQL/"},{"name":"服务器配置","slug":"服务器配置","permalink":"https://mumu-1005.github.io/pishon/tags/%E6%9C%8D%E5%8A%A1%E5%99%A8%E9%85%8D%E7%BD%AE/"}]},{"title":"Genymotion访问localhost","slug":"Genymotion访问localhost","date":"2016-09-30T06:39:47.000Z","updated":"2016-09-30T06:39:47.000Z","comments":false,"path":"/articles/Genymotion访问localhost.html","link":"","permalink":"https://mumu-1005.github.io/pishon/articles/Genymotion%E8%AE%BF%E9%97%AElocalhost.html","excerpt":"","keywords":null,"text":"http://10.0.3.2：端口号/工程路径","raw":null,"content":null,"categories":[{"name":"TOOLS","slug":"TOOLS","permalink":"https://mumu-1005.github.io/pishon/categories/TOOLS/"}],"tags":[{"name":"Android","slug":"Android","permalink":"https://mumu-1005.github.io/pishon/tags/Android/"},{"name":"模拟器","slug":"模拟器","permalink":"https://mumu-1005.github.io/pishon/tags/%E6%A8%A1%E6%8B%9F%E5%99%A8/"},{"name":"tools","slug":"tools","permalink":"https://mumu-1005.github.io/pishon/tags/tools/"}]},{"title":"nginx配置首页默认跳转路径","slug":"nginx配置首页默认跳转路径","date":"2016-09-09T03:23:58.000Z","updated":"2016-09-09T03:23:58.000Z","comments":false,"path":"/articles/nginx配置首页默认跳转路径.html","link":"","permalink":"https://mumu-1005.github.io/pishon/articles/nginx%E9%85%8D%E7%BD%AE%E9%A6%96%E9%A1%B5%E9%BB%98%E8%AE%A4%E8%B7%B3%E8%BD%AC%E8%B7%AF%E5%BE%84.html","excerpt":"","keywords":null,"text":"https指定路径跳转 1rewrite ^/index.html(.*)$ 指定的跳转路径 permanent; http跳转到https 1234567server &#123; listen 80; server_name localhost; rewrite ^(.*)$ https://$host$1 permanent; location / &#123;index index.html index.htm;&#125;","raw":null,"content":null,"categories":[{"name":"SERVER","slug":"SERVER","permalink":"https://mumu-1005.github.io/pishon/categories/SERVER/"}],"tags":[{"name":"Nginx","slug":"Nginx","permalink":"https://mumu-1005.github.io/pishon/tags/Nginx/"}]},{"title":"Help on class Redis in module redis.client","slug":"redis-help","date":"2016-07-05T05:47:18.000Z","updated":"2018-12-25T12:47:18.000Z","comments":false,"path":"/articles/redis-help.html","link":"","permalink":"https://mumu-1005.github.io/pishon/articles/redis-help.html","excerpt":"","keywords":null,"text":"1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980818283848586878889909192939495969798991001011021031041051061071081091101111121131141151161171181191201211221231241251261271281291301311321331341351361371381391401411421431441451461471481491501511521531541551561571581591601611621631641651661671681691701711721731741751761771781791801811821831841851861871881891901911921931941951961971981992002012022032042052062072082092102112122132142152162172182192202212222232242252262272282292302312322332342352362372382392402412422432442452462472482492502512522532542552562572582592602612622632642652662672682692702712722732742752762772782792802812822832842852862872882892902912922932942952962972982993003013023033043053063073083093103113123133143153163173183193203213223233243253263273283293303313323333343353363373383393403413423433443453463473483493503513523533543553563573583593603613623633643653663673683693703713723733743753763773783793803813823833843853863873883893903913923933943953963973983994004014024034044054064074084094104114124134144154164174184194204214224234244254264274284294304314324334344354364374384394404414424434444454464474484494504514524534544554564574584594604614624634644654664674684694704714724734744754764774784794804814824834844854864874884894904914924934944954964974984995005015025035045055065075085095105115125135145155165175185195205215225235245255265275285295305315325335345355365375385395405415425435445455465475485495505515525535545555565575585595605615625635645655665675685695705715725735745755765775785795805815825835845855865875885895905915925935945955965975985996006016026036046056066076086096106116126136146156166176186196206216226236246256266276286296306316326336346356366376386396406416426436446456466476486496506516526536546556566576586596606616626636646656666676686696706716726736746756766776786796806816826836846856866876886896906916926936946956966976986997007017027037047057067077087097107117127137147157167177187197207217227237247257267277287297307317327337347357367377387397407417427437447457467477487497507517527537547557567577587597607617627637647657667677687697707717727737747757767777787797807817827837847857867877887897907917927937947957967977987998008018028038048058068078088098108118128138148158168178188198208218228238248258268278288298308318328338348358368378388398408418428438448458468478488498508518528538548558568578588598608618628638648658668678688698708718728738748758768778788798808818828838848858868878888898908918928938948958968978988999009019029039049059069079089099109119129139149159169179189199209219229239249259269279289299309319329339349359369379389399409419429439449459469479489499509519529539549559569579589599609619629639649659669679689699709719729739749759769779789799809819829839849859869879889899909919929939949959969979989991000100110021003100410051006100710081009101010111012101310141015101610171018101910201021102210231024102510261027102810291030103110321033103410351036103710381039104010411042104310441045104610471048104910501051105210531054105510561057105810591060106110621063106410651066106710681069107010711072107310741075107610771078107910801081108210831084108510861087108810891090109110921093109410951096109710981099110011011102110311041105110611071108110911101111111211131114111511161117111811191120112111221123112411251126112711281129113011311132113311341135113611371138113911401141114211431144114511461147114811491150115111521153115411551156115711581159116011611162116311641165116611671168116911701171117211731174117511761177117811791180118111821183118411851186118711881189119011911192119311941195119611971198119912001201120212031204120512061207120812091210121112121213121412151216121712181219122012211222122312241225122612271228122912301231123212331234123512361237123812391240124112421243124412451246124712481249125012511252125312541255125612571258125912601261126212631264126512661267126812691270127112721273127412751276127712781279128012811282128312841285128612871288128912901291129212931294129512961297129812991300130113021303130413051306130713081309131013111312131313141315131613171318131913201321132213231324132513261327132813291330133113321333133413351336133713381339134013411342134313441345134613471348134913501351135213531354135513561357135813591360136113621363136413651366136713681369137013711372137313741375137613771378137913801381138213831384138513861387138813891390139113921393139413951396139713981399140014011402140314041405140614071408140914101411141214131414141514161417141814191420142114221423142414251426142714281429143014311432143314341435143614371438143914401441144214431444144514461447144814491450145114521453145414551456145714581459146014611462146314641465146614671468146914701471147214731474147514761477147814791480148114821483148414851486148714881489149014911492149314941495149614971498&#x27;&#x27;&#x27;Help on class Redis in module redis.client:&#x27;&#x27;&#x27;class Redis(builtins.object) Redis( host=&#x27;localhost&#x27;, port=6379, db=0, password=None, socket_timeout=None, socket_connect_timeout=None, socket_keepalive=None, socket_keepalive_options=None, connection_pool=None, unix_socket_path=None, encoding=&#x27;utf-8&#x27;, encoding_errors=&#x27;strict&#x27;, charset=None, errors=None, decode_responses=False, retry_on_timeout=False, ssl=False, ssl_keyfile=None, ssl_certfile=None, ssl_cert_reqs=&#x27;required&#x27;, ssl_ca_certs=None, max_connections=None ) &#x27;&#x27;&#x27; Implementation of the Redis protocol. This abstract class provides a Python interface to all Redis commands and an implementation of the Redis protocol. Connection and Pipeline derive from this, implementing how the commands are sent and received to the Redis server Methods defined here: &#x27;&#x27;&#x27; __contains__ = exists(self, *names) __delitem__(self, name) __getitem__(self, name) &#x27;&#x27;&#x27;Return the value at key ``name``, raises a KeyError if the key doesn&#x27;t exist.&#x27;&#x27;&#x27; __init__(self, host=&#x27;localhost&#x27;, port=6379, db=0, password=None, socket_timeout=None, socket_connect_timeout=None, socket_keepalive=None, socket_keepalive_options=None, connection_pool=None, unix_socket_path=None, encoding=&#x27;utf-8&#x27;, encoding_errors=&#x27;strict&#x27;, charset=None, errors=None, decode_responses=False, retry_on_timeout=False, ssl=False, ssl_keyfile=None, ssl_certfile=None, ssl_cert_reqs=&#x27;required&#x27;, ssl_ca_certs=None, max_connections=None) &#x27;&#x27;&#x27;Initialize self. See help(type(self)) for accurate signature.&#x27;&#x27;&#x27; __repr__(self) &#x27;&#x27;&#x27;Return repr(self).&#x27;&#x27;&#x27; __setitem__(self, name, value) append(self, key, value) &#x27;&#x27;&#x27; Appends the string ``value`` to the value at ``key``. If ``key`` doesn&#x27;t already exist, create it with a value of ``value``. Returns the new length of the value at ``key``. &#x27;&#x27;&#x27; bgrewriteaof(self) &#x27;&#x27;&#x27; Tell the Redis server to rewrite the AOF file from data in memory. &#x27;&#x27;&#x27; bgsave(self) &#x27;&#x27;&#x27; Tell the Redis server to save its data to disk. Unlike save(), this method is asynchronous and returns immediately. &#x27;&#x27;&#x27; bitcount(self, key, start=None, end=None) &#x27;&#x27;&#x27; Returns the count of set bits in the value of ``key``. Optional ``start`` and ``end`` paramaters indicate which bytes to consider &#x27;&#x27;&#x27; bitfield(self, key, default_overflow=None) &#x27;&#x27;&#x27; Return a BitFieldOperation instance to conveniently construct one or more bitfield operations on ``key``. &#x27;&#x27;&#x27; bitop(self, operation, dest, *keys) &#x27;&#x27;&#x27; Perform a bitwise operation using ``operation`` between ``keys`` and store the result in ``dest``. &#x27;&#x27;&#x27; bitpos(self, key, bit, start=None, end=None) &#x27;&#x27;&#x27; Return the position of the first bit set to 1 or 0 in a string. ``start`` and ``end`` difines search range. The range is interpreted as a range of bytes and not a range of bits, so start=0 and end=2 means to look at the first three bytes. &#x27;&#x27;&#x27; blpop(self, keys, timeout=0) &#x27;&#x27;&#x27; LPOP a value off of the first non-empty list named in the ``keys`` list. If none of the lists in ``keys`` has a value to LPOP, then block for ``timeout`` seconds, or until a value gets pushed on to one of the lists. If timeout is 0, then block indefinitely. &#x27;&#x27;&#x27; brpop(self, keys, timeout=0) &#x27;&#x27;&#x27; RPOP a value off of the first non-empty list named in the ``keys`` list. If none of the lists in ``keys`` has a value to RPOP, then block for ``timeout`` seconds, or until a value gets pushed on to one of the lists. If timeout is 0, then block indefinitely. &#x27;&#x27;&#x27; brpoplpush(self, src, dst, timeout=0) &#x27;&#x27;&#x27; Pop a value off the tail of ``src``, push it on the head of ``dst`` and then return it. This command blocks until a value is in ``src`` or until ``timeout`` seconds elapse, whichever is first. A ``timeout`` value of 0 blocks forever. &#x27;&#x27;&#x27; bzpopmax(self, keys, timeout=0) &#x27;&#x27;&#x27; ZPOPMAX a value off of the first non-empty sorted set named in the ``keys`` list. If none of the sorted sets in ``keys`` has a value to ZPOPMAX, then block for ``timeout`` seconds, or until a member gets added to one of the sorted sets. If timeout is 0, then block indefinitely. &#x27;&#x27;&#x27; bzpopmin(self, keys, timeout=0) &#x27;&#x27;&#x27; ZPOPMIN a value off of the first non-empty sorted set named in the ``keys`` list. If none of the sorted sets in ``keys`` has a value to ZPOPMIN, then block for ``timeout`` seconds, or until a member gets added to one of the sorted sets. If timeout is 0, then block indefinitely. &#x27;&#x27;&#x27; client_getname(self) &#x27;&#x27;&#x27;Returns the current connection name&#x27;&#x27;&#x27; client_id(self) &#x27;&#x27;&#x27;Returns the current connection id&#x27;&#x27;&#x27; client_kill(self, address) &#x27;&#x27;&#x27;Disconnects the client at ``address`` (ip:port)&#x27;&#x27;&#x27; client_kill_filter(self, _id=None, _type=None, addr=None, skipme=None) &#x27;&#x27;&#x27; Disconnects client(s) using a variety of filter options :param id: Kills a client by its unique ID field :param type: Kills a client by type where type is one of &#x27;normal&#x27;, &#x27;master&#x27;, &#x27;slave&#x27; or &#x27;pubsub&#x27; :param addr: Kills a client by its &#x27;address:port&#x27; :param skipme: If True, then the client calling the command will not get killed even if it is identified by one of the filter options. If skipme is not provided, the server defaults to skipme=True &#x27;&#x27;&#x27; client_list(self, _type=None) &#x27;&#x27;&#x27; Returns a list of currently connected clients. If type of client specified, only that type will be returned. :param _type: optional. one of the client types (normal, master, replica, pubsub) &#x27;&#x27;&#x27; client_pause(self, timeout) &#x27;&#x27;&#x27; Suspend all the Redis clients for the specified amount of time :param timeout: milliseconds to pause clients &#x27;&#x27;&#x27; client_setname(self, name) &#x27;&#x27;&#x27;Sets the current connection name&#x27;&#x27;&#x27; client_unblock(self, client_id, error=False) &#x27;&#x27;&#x27; Unblocks a connection by its client id. If ``error`` is True, unblocks the client with a special error message. If ``error`` is False (default), the client is unblocked using the regular timeout mechanism. &#x27;&#x27;&#x27; cluster(self, cluster_arg, *args) config_get(self, pattern=&#x27;*&#x27;) &#x27;&#x27;&#x27;Return a dictionary of configuration based on the ``pattern``&#x27;&#x27;&#x27; config_resetstat(self) &#x27;&#x27;&#x27;Reset runtime statistics&#x27;&#x27;&#x27; config_rewrite(self) &#x27;&#x27;&#x27;Rewrite config file with the minimal change to reflect running config&#x27;&#x27;&#x27; config_set(self, name, value) &#x27;&#x27;&#x27;Set config item ``name`` with ``value``&#x27;&#x27;&#x27; dbsize(self) &#x27;&#x27;&#x27;Returns the number of keys in the current database&#x27;&#x27;&#x27; debug_object(self, key) &#x27;&#x27;&#x27;Returns version specific meta information about a given key&#x27;&#x27;&#x27; decr(self, name, amount=1) &#x27;&#x27;&#x27; Decrements the value of ``key`` by ``amount``. If no key exists, the value will be initialized as 0 - ``amount`` &#x27;&#x27;&#x27; decrby(self, name, amount=1) &#x27;&#x27;&#x27; Decrements the value of ``key`` by ``amount``. If no key exists, the value will be initialized as 0 - ``amount`` &#x27;&#x27;&#x27; delete(self, *names) &#x27;&#x27;&#x27;Delete one or more keys specified by ``names``&#x27;&#x27;&#x27; dump(self, name) &#x27;&#x27;&#x27; Return a serialized version of the value stored at the specified key. If key does not exist a nil bulk reply is returned. &#x27;&#x27;&#x27; echo(self, value) &#x27;&#x27;&#x27;Echo the string back from the server&#x27;&#x27;&#x27; eval(self, script, numkeys, *keys_and_args) &#x27;&#x27;&#x27; Execute the Lua ``script``, specifying the ``numkeys`` the script will touch and the key names and argument values in ``keys_and_args``. Returns the result of the script. In practice, use the object returned by ``register_script``. This function exists purely for Redis API completion. &#x27;&#x27;&#x27; evalsha(self, sha, numkeys, *keys_and_args) &#x27;&#x27;&#x27; Use the ``sha`` to execute a Lua script already registered via EVAL or SCRIPT LOAD. Specify the ``numkeys`` the script will touch and the key names and argument values in ``keys_and_args``. Returns the result of the script. In practice, use the object returned by ``register_script``. This function exists purely for Redis API completion. &#x27;&#x27;&#x27; execute_command(self, *args, **options) &#x27;&#x27;&#x27;Execute a command and return a parsed response&#x27;&#x27;&#x27; exists(self, *names) &#x27;&#x27;&#x27; Returns the number of ``names`` that exist&#x27;&#x27;&#x27; expire(self, name, time) &#x27;&#x27;&#x27; Set an expire flag on key ``name`` for ``time`` seconds. ``time`` can be represented by an integer or a Python timedelta object. &#x27;&#x27;&#x27; expireat(self, name, when) &#x27;&#x27;&#x27; Set an expire flag on key ``name``. ``when`` can be represented as an integer indicating unix time or a Python datetime object. &#x27;&#x27;&#x27; flushall(self, asynchronous=False) &#x27;&#x27;&#x27; Delete all keys in all databases on the current host. ``asynchronous`` indicates whether the operation is executed asynchronously by the server. &#x27;&#x27;&#x27; flushdb(self, asynchronous=False) &#x27;&#x27;&#x27; Delete all keys in the current database. ``asynchronous`` indicates whether the operation is executed asynchronously by the server. &#x27;&#x27;&#x27; geoadd(self, name, *values) &#x27;&#x27;&#x27; Add the specified geospatial items to the specified key identified by the ``name`` argument. The Geospatial items are given as ordered members of the ``values`` argument, each item or place is formed by the triad longitude, latitude and name. &#x27;&#x27;&#x27; geodist(self, name, place1, place2, unit=None) &#x27;&#x27;&#x27; Return the distance between ``place1`` and ``place2`` members of the ``name`` key. The units must be one of the following : m, km mi, ft. By default meters are used. &#x27;&#x27;&#x27; geohash(self, name, *values) &#x27;&#x27;&#x27; Return the geo hash string for each item of ``values`` members of the specified key identified by the ``name`` argument. &#x27;&#x27;&#x27; geopos(self, name, *values) &#x27;&#x27;&#x27; Return the positions of each item of ``values`` as members of the specified key identified by the ``name`` argument. Each position is represented by the pairs lon and lat. &#x27;&#x27;&#x27; georadius(self, name, longitude, latitude, radius, unit=None, withdist=False, withcoord=False, withhash=False, count=None, sort=None, store=None, store_dist=None) &#x27;&#x27;&#x27; Return the members of the specified key identified by the ``name`` argument which are within the borders of the area specified with the ``latitude`` and ``longitude`` location and the maximum distance from the center specified by the ``radius`` value. The units must be one of the following : m, km mi, ft. By default ``withdist`` indicates to return the distances of each place. ``withcoord`` indicates to return the latitude and longitude of each place. ``withhash`` indicates to return the geohash string of each place. ``count`` indicates to return the number of elements up to N. ``sort`` indicates to return the places in a sorted way, ASC for nearest to fairest and DESC for fairest to nearest. ``store`` indicates to save the places names in a sorted set named with a specific key, each element of the destination sorted set is populated with the score got from the original geo sorted set. ``store_dist`` indicates to save the places names in a sorted set named with a specific key, instead of ``store`` the sorted set destination score is set with the distance. &#x27;&#x27;&#x27; georadiusbymember(self, name, member, radius, unit=None, withdist=False, withcoord=False, withhash=False, count=None, sort=None, store=None, store_dist=None) &#x27;&#x27;&#x27; This command is exactly like ``georadius`` with the sole difference that instead of taking, as the center of the area to query, a longitude and latitude value, it takes the name of a member already existing inside the geospatial index represented by the sorted set. &#x27;&#x27;&#x27; get(self, name) &#x27;&#x27;&#x27;Return the value at key ``name``, or None if the key doesn&#x27;t exist&#x27;&#x27;&#x27; getbit(self, name, offset) &#x27;&#x27;&#x27;Returns a boolean indicating the value of ``offset`` in ``name``&#x27;&#x27;&#x27; getrange(self, key, start, end) &#x27;&#x27;&#x27; Returns the substring of the string value stored at ``key``, determined by the offsets ``start`` and ``end`` (both are inclusive) &#x27;&#x27;&#x27; getset(self, name, value) &#x27;&#x27;&#x27; Sets the value at key ``name`` to ``value`` and returns the old value at key ``name`` atomically. &#x27;&#x27;&#x27; hdel(self, name, *keys) &#x27;&#x27;&#x27;Delete ``keys`` from hash ``name``&#x27;&#x27;&#x27; hexists(self, name, key) &#x27;&#x27;&#x27;Returns a boolean indicating if ``key`` exists within hash ``name``&#x27;&#x27;&#x27; hget(self, name, key) &#x27;&#x27;&#x27;Return the value of ``key`` within the hash ``name``&#x27;&#x27;&#x27; hgetall(self, name) &#x27;&#x27;&#x27;Return a Python dict of the hash&#x27;s name/value pairs&#x27;&#x27;&#x27; hincrby(self, name, key, amount=1) &#x27;&#x27;&#x27;Increment the value of ``key`` in hash ``name`` by ``amount``&#x27;&#x27;&#x27; hincrbyfloat(self, name, key, amount=1.0) &#x27;&#x27;&#x27;Increment the value of ``key`` in hash ``name`` by floating ``amount``&#x27;&#x27;&#x27; hkeys(self, name) &#x27;&#x27;&#x27;Return the list of keys within hash ``name``&#x27;&#x27;&#x27; hlen(self, name) &#x27;&#x27;&#x27;Return the number of elements in hash ``name``&#x27;&#x27;&#x27; hmget(self, name, keys, *args) &#x27;&#x27;&#x27;Returns a list of values ordered identically to ``keys``&#x27;&#x27;&#x27; hmset(self, name, mapping) &#x27;&#x27;&#x27; Set key to value within hash ``name`` for each corresponding key and value from the ``mapping`` dict. &#x27;&#x27;&#x27; hscan(self, name, cursor=0, match=None, count=None) &#x27;&#x27;&#x27; Incrementally return key/value slices in a hash. Also return a cursor indicating the scan position. ``match`` allows for filtering the keys by pattern ``count`` allows for hint the minimum number of returns &#x27;&#x27;&#x27; hscan_iter(self, name, match=None, count=None) &#x27;&#x27;&#x27; Make an iterator using the HSCAN command so that the client doesn&#x27;t need to remember the cursor position. ``match`` allows for filtering the keys by pattern ``count`` allows for hint the minimum number of returns &#x27;&#x27;&#x27; hset(self, name, key, value) &#x27;&#x27;&#x27; Set ``key`` to ``value`` within hash ``name`` Returns 1 if HSET created a new field, otherwise 0 &#x27;&#x27;&#x27; hsetnx(self, name, key, value) &#x27;&#x27;&#x27; Set ``key`` to ``value`` within hash ``name`` if ``key`` does not exist. Returns 1 if HSETNX created a field, otherwise 0. &#x27;&#x27;&#x27; hstrlen(self, name, key) &#x27;&#x27;&#x27; Return the number of bytes stored in the value of ``key`` within hash ``name`` &#x27;&#x27;&#x27; hvals(self, name) &#x27;&#x27;&#x27;Return the list of values within hash ``name``&#x27;&#x27;&#x27; incr(self, name, amount=1) &#x27;&#x27;&#x27; Increments the value of ``key`` by ``amount``. If no key exists, the value will be initialized as ``amount`` &#x27;&#x27;&#x27; incrby(self, name, amount=1) &#x27;&#x27;&#x27; Increments the value of ``key`` by ``amount``. If no key exists, the value will be initialized as ``amount`` &#x27;&#x27;&#x27; incrbyfloat(self, name, amount=1.0) &#x27;&#x27;&#x27; Increments the value at key ``name`` by floating ``amount``. If no key exists, the value will be initialized as ``amount`` &#x27;&#x27;&#x27; info(self, section=None) &#x27;&#x27;&#x27; Returns a dictionary containing information about the Redis server The ``section`` option can be used to select a specific section of information The section option is not supported by older versions of Redis Server, and will generate ResponseError &#x27;&#x27;&#x27; keys(self, pattern=&#x27;*&#x27;) &#x27;&#x27;&#x27;Returns a list of keys matching ``pattern``&#x27;&#x27;&#x27; lastsave(self) &#x27;&#x27;&#x27; Return a Python datetime object representing the last time the Redis database was saved to disk &#x27;&#x27;&#x27; lindex(self, name, index) &#x27;&#x27;&#x27; Return the item from list ``name`` at position ``index`` Negative indexes are supported and will return an item at the end of the list &#x27;&#x27;&#x27; linsert(self, name, where, refvalue, value) &#x27;&#x27;&#x27; Insert ``value`` in list ``name`` either immediately before or after [``where``] ``refvalue`` Returns the new length of the list on success or -1 if ``refvalue`` is not in the list. &#x27;&#x27;&#x27; llen(self, name) &#x27;&#x27;&#x27;Return the length of the list ``name``&#x27;&#x27;&#x27; lock(self, name, timeout=None, sleep=0.1, blocking_timeout=None, lock_class=None, thread_local=True) &#x27;&#x27;&#x27; Return a new Lock object using key ``name`` that mimics the behavior of threading.Lock. If specified, ``timeout`` indicates a maximum life for the lock. By default, it will remain locked until release() is called. ``sleep`` indicates the amount of time to sleep per loop iteration when the lock is in blocking mode and another client is currently holding the lock. ``blocking_timeout`` indicates the maximum amount of time in seconds to spend trying to acquire the lock. A value of ``None`` indicates continue trying forever. ``blocking_timeout`` can be specified as a float or integer, both representing the number of seconds to wait. ``lock_class`` forces the specified lock implementation. ``thread_local`` indicates whether the lock token is placed in thread-local storage. By default, the token is placed in thread local storage so that a thread only sees its token, not a token set by another thread. Consider the following timeline: time: 0, thread-1 acquires `my-lock`, with a timeout of 5 seconds. thread-1 sets the token to &quot;abc&quot; time: 1, thread-2 blocks trying to acquire `my-lock` using the Lock instance. time: 5, thread-1 has not yet completed. redis expires the lock key. time: 5, thread-2 acquired `my-lock` now that it&#x27;s available. thread-2 sets the token to &quot;xyz&quot; time: 6, thread-1 finishes its work and calls release(). if the token is *not* stored in thread local storage, then thread-1 would see the token value as &quot;xyz&quot; and would be able to successfully release the thread-2&#x27;s lock. In some use cases it&#x27;s necessary to disable thread local storage. For example, if you have code where one thread acquires a lock and passes that lock instance to a worker thread to release later. If thread local storage isn&#x27;t disabled in this case, the worker thread won&#x27;t see the token set by the thread that acquired the lock. Our assumption is that these cases aren&#x27;t common and as such default to using thread local storage. &#x27;&#x27;&#x27; lpop(self, name) &#x27;&#x27;&#x27;Remove and return the first item of the list ``name``&#x27;&#x27;&#x27; lpush(self, name, *values) &#x27;&#x27;&#x27;Push ``values`` onto the head of the list ``name``&#x27;&#x27;&#x27; lpushx(self, name, value) &#x27;&#x27;&#x27;Push ``value`` onto the head of the list ``name`` if ``name`` exists&#x27;&#x27;&#x27; lrange(self, name, start, end) &#x27;&#x27;&#x27; Return a slice of the list ``name`` between position ``start`` and ``end`` ``start`` and ``end`` can be negative numbers just like Python slicing notation &#x27;&#x27;&#x27; lrem(self, name, count, value) &#x27;&#x27;&#x27; Remove the first ``count`` occurrences of elements equal to ``value`` from the list stored at ``name``. The count argument influences the operation in the following ways: count &gt; 0: Remove elements equal to value moving from head to tail. count &lt; 0: Remove elements equal to value moving from tail to head. count = 0: Remove all elements equal to value. &#x27;&#x27;&#x27; lset(self, name, index, value) &#x27;&#x27;&#x27;Set ``position`` of list ``name`` to ``value``&#x27;&#x27;&#x27; ltrim(self, name, start, end) &#x27;&#x27;&#x27; Trim the list ``name``, removing all values not within the slice between ``start`` and ``end`` ``start`` and ``end`` can be negative numbers just like Python slicing notation &#x27;&#x27;&#x27; memory_purge(self) &#x27;&#x27;&#x27;Attempts to purge dirty pages for reclamation by allocator&#x27;&#x27;&#x27; memory_usage(self, key, samples=None) &#x27;&#x27;&#x27; Return the total memory usage for key, its value and associated administrative overheads. For nested data structures, ``samples`` is the number of elements to sample. If left unspecified, the server&#x27;s default is 5. Use 0 to sample all elements. &#x27;&#x27;&#x27; mget(self, keys, *args) &#x27;&#x27;&#x27; Returns a list of values ordered identically to ``keys``&#x27;&#x27;&#x27; migrate(self, host, port, keys, destination_db, timeout, copy=False, replace=False, auth=None) &#x27;&#x27;&#x27; Migrate 1 or more keys from the current Redis server to a different server specified by the ``host``, ``port`` and ``destination_db``. The ``timeout``, specified in milliseconds, indicates the maximum time the connection between the two servers can be idle before the command is interrupted. If ``copy`` is True, the specified ``keys`` are NOT deleted from the source server. If ``replace`` is True, this operation will overwrite the keys on the destination server if they exist. If ``auth`` is specified, authenticate to the destination server with the password provided. &#x27;&#x27;&#x27; move(self, name, db) &#x27;&#x27;&#x27;Moves the key ``name`` to a different Redis database ``db``&#x27;&#x27;&#x27; mset(self, mapping) &#x27;&#x27;&#x27; Sets key/values based on a mapping. Mapping is a dictionary of key/value pairs. Both keys and values should be strings or types that can be cast to a string via str(). &#x27;&#x27;&#x27; msetnx(self, mapping) &#x27;&#x27;&#x27; Sets key/values based on a mapping if none of the keys are already set. Mapping is a dictionary of key/value pairs. Both keys and values should be strings or types that can be cast to a string via str(). Returns a boolean indicating if the operation was successful. &#x27;&#x27;&#x27; object(self, infotype, key) &#x27;&#x27;&#x27;Return the encoding, idletime, or refcount about the key&#x27;&#x27;&#x27; parse_response(self, connection, command_name, **options) &#x27;&#x27;&#x27;Parses a response from the Redis server&#x27;&#x27;&#x27; persist(self, name) &#x27;&#x27;&#x27;Removes an expiration on ``name``&#x27;&#x27;&#x27; pexpire(self, name, time) &#x27;&#x27;&#x27; Set an expire flag on key ``name`` for ``time`` milliseconds. ``time`` can be represented by an integer or a Python timedelta object. &#x27;&#x27;&#x27; pexpireat(self, name, when) &#x27;&#x27;&#x27; Set an expire flag on key ``name``. ``when`` can be represented as an integer representing unix time in milliseconds (unix time * 1000) or a Python datetime object. &#x27;&#x27;&#x27; pfadd(self, name, *values) &#x27;&#x27;&#x27;Adds the specified elements to the specified HyperLogLog.&#x27;&#x27;&#x27; pfcount(self, *sources) &#x27;&#x27;&#x27; Return the approximated cardinality of the set observed by the HyperLogLog at key(s). &#x27;&#x27;&#x27; pfmerge(self, dest, *sources) &#x27;&#x27;&#x27;Merge N different HyperLogLogs into a single one.&#x27;&#x27;&#x27; ping(self) &#x27;&#x27;&#x27;Ping the Redis server&#x27;&#x27;&#x27; pipeline(self, transaction=True, shard_hint=None) &#x27;&#x27;&#x27; Return a new pipeline object that can queue multiple commands for later execution. ``transaction`` indicates whether all commands should be executed atomically. Apart from making a group of operations atomic, pipelines are useful for reducing the back-and-forth overhead between the client and server. &#x27;&#x27;&#x27; psetex(self, name, time_ms, value) &#x27;&#x27;&#x27; Set the value of key ``name`` to ``value`` that expires in ``time_ms`` milliseconds. ``time_ms`` can be represented by an integer or a Python timedelta object &#x27;&#x27;&#x27; pttl(self, name) &#x27;&#x27;&#x27;Returns the number of milliseconds until the key ``name`` will expire&#x27;&#x27;&#x27; publish(self, channel, message) &#x27;&#x27;&#x27; Publish ``message`` on ``channel``. Returns the number of subscribers the message was delivered to. &#x27;&#x27;&#x27; pubsub(self, **kwargs) &#x27;&#x27;&#x27; Return a Publish/Subscribe object. With this object, you can subscribe to channels and listen for messages that get published to them. &#x27;&#x27;&#x27; pubsub_channels(self, pattern=&#x27;*&#x27;) &#x27;&#x27;&#x27;Return a list of channels that have at least one subscriber&#x27;&#x27;&#x27; pubsub_numpat(self) &#x27;&#x27;&#x27;Returns the number of subscriptions to patterns&#x27;&#x27;&#x27; pubsub_numsub(self, *args) &#x27;&#x27;&#x27; Return a list of (channel, number of subscribers) tuples for each channel given in ``*args`` &#x27;&#x27;&#x27; randomkey(self) &#x27;&#x27;&#x27;Returns the name of a random key&#x27;&#x27;&#x27; register_script(self, script) &#x27;&#x27;&#x27; Register a Lua ``script`` specifying the ``keys`` it will touch. Returns a Script object that is callable and hides the complexity of deal with scripts, keys, and shas. This is the preferred way to work with Lua scripts. &#x27;&#x27;&#x27; rename(self, src, dst) &#x27;&#x27;&#x27;Rename key ``src`` to ``dst``&#x27;&#x27;&#x27; renamenx(self, src, dst) &#x27;&#x27;&#x27;Rename key ``src`` to ``dst`` if ``dst`` doesn&#x27;t already exist&#x27;&#x27;&#x27; restore(self, name, ttl, value, replace=False) &#x27;&#x27;&#x27; Create a key using the provided serialized value, previously obtained using DUMP. &#x27;&#x27;&#x27; rpop(self, name) &#x27;&#x27;&#x27;Remove and return the last item of the list ``name``&#x27;&#x27;&#x27; rpoplpush(self, src, dst) &#x27;&#x27;&#x27; RPOP a value off of the ``src`` list and atomically LPUSH it on to the ``dst`` list. Returns the value. &#x27;&#x27;&#x27; rpush(self, name, *values) &#x27;&#x27;&#x27;Push ``values`` onto the tail of the list ``name``&#x27;&#x27;&#x27; rpushx(self, name, value) &#x27;&#x27;&#x27;Push ``value`` onto the tail of the list ``name`` if ``name`` exists&#x27;&#x27;&#x27; sadd(self, name, *values) &#x27;&#x27;&#x27;Add ``value(s)`` to set ``name``&#x27;&#x27;&#x27; save(self) &#x27;&#x27;&#x27; Tell the Redis server to save its data to disk, blocking until the save is complete &#x27;&#x27;&#x27; scan(self, cursor=0, match=None, count=None) &#x27;&#x27;&#x27; Incrementally return lists of key names. Also return a cursor indicating the scan position. ``match`` allows for filtering the keys by pattern ``count`` allows for hint the minimum number of returns &#x27;&#x27;&#x27; scan_iter(self, match=None, count=None) &#x27;&#x27;&#x27; Make an iterator using the SCAN command so that the client doesn&#x27;t need to remember the cursor position. ``match`` allows for filtering the keys by pattern ``count`` allows for hint the minimum number of returns &#x27;&#x27;&#x27; scard(self, name) &#x27;&#x27;&#x27;Return the number of elements in set ``name``&#x27;&#x27;&#x27; script_exists(self, *args) &#x27;&#x27;&#x27; Check if a script exists in the script cache by specifying the SHAs of each script as ``args``. Returns a list of boolean values indicating if if each already script exists in the cache. &#x27;&#x27;&#x27; script_flush(self) &#x27;&#x27;&#x27;Flush all scripts from the script cache&#x27;&#x27;&#x27; script_kill(self) &#x27;&#x27;&#x27;Kill the currently executing Lua script&#x27;&#x27;&#x27; script_load(self, script) &#x27;&#x27;&#x27;Load a Lua ``script`` into the script cache. Returns the SHA.&#x27;&#x27;&#x27; sdiff(self, keys, *args) &#x27;&#x27;&#x27;Return the difference of sets specified by ``keys``&#x27;&#x27;&#x27; sdiffstore(self, dest, keys, *args) &#x27;&#x27;&#x27; Store the difference of sets specified by ``keys`` into a new set named ``dest``. Returns the number of keys in the new set. &#x27;&#x27;&#x27; sentinel(self, *args) &#x27;&#x27;&#x27;Redis Sentinel&#x27;s SENTINEL command.&#x27;&#x27;&#x27; sentinel_get_master_addr_by_name(self, service_name) &#x27;&#x27;&#x27;Returns a (host, port) pair for the given ``service_name``&#x27;&#x27;&#x27; sentinel_master(self, service_name) &#x27;&#x27;&#x27;Returns a dictionary containing the specified masters state.&#x27;&#x27;&#x27; sentinel_masters(self) &#x27;&#x27;&#x27;Returns a list of dictionaries containing each master&#x27;s state.&#x27;&#x27;&#x27; sentinel_monitor(self, name, ip, port, quorum) &#x27;&#x27;&#x27;Add a new master to Sentinel to be monitored&#x27;&#x27;&#x27; sentinel_remove(self, name) &#x27;&#x27;&#x27;Remove a master from Sentinel&#x27;s monitoring&#x27;&#x27;&#x27; sentinel_sentinels(self, service_name) &#x27;&#x27;&#x27;Returns a list of sentinels for ``service_name``&#x27;&#x27;&#x27; sentinel_set(self, name, option, value) &#x27;&#x27;&#x27;Set Sentinel monitoring parameters for a given master&#x27;&#x27;&#x27; sentinel_slaves(self, service_name) &#x27;&#x27;&#x27;Returns a list of slaves for ``service_name``&#x27;&#x27;&#x27; set(self, name, value, ex=None, px=None, nx=False, xx=False) &#x27;&#x27;&#x27; Set the value at key ``name`` to ``value`` ``ex`` sets an expire flag on key ``name`` for ``ex`` seconds. ``px`` sets an expire flag on key ``name`` for ``px`` milliseconds. ``nx`` if set to True, set the value at key ``name`` to ``value`` only if it does not exist. ``xx`` if set to True, set the value at key ``name`` to ``value`` only if it already exists. &#x27;&#x27;&#x27; set_response_callback(self, command, callback) &#x27;&#x27;&#x27;Set a custom Response Callback&#x27;&#x27;&#x27; setbit(self, name, offset, value) &#x27;&#x27;&#x27; Flag the ``offset`` in ``name`` as ``value``. Returns a boolean indicating the previous value of ``offset``. &#x27;&#x27;&#x27; setex(self, name, time, value) &#x27;&#x27;&#x27; Set the value of key ``name`` to ``value`` that expires in ``time`` seconds. ``time`` can be represented by an integer or a Python timedelta object. &#x27;&#x27;&#x27; setnx(self, name, value) &#x27;&#x27;&#x27;Set the value of key ``name`` to ``value`` if key doesn&#x27;t exist&#x27;&#x27;&#x27; setrange(self, name, offset, value) &#x27;&#x27;&#x27; Overwrite bytes in the value of ``name`` starting at ``offset`` with ``value``. If ``offset`` plus the length of ``value`` exceeds the length of the original value, the new value will be larger than before. If ``offset`` exceeds the length of the original value, null bytes will be used to pad between the end of the previous value and the start of what&#x27;s being injected. Returns the length of the new string. &#x27;&#x27;&#x27; shutdown(self, save=False, nosave=False) &#x27;&#x27;&#x27; Shutdown the Redis server. If Redis has persistence configured, data will be flushed before shutdown. If the &quot;save&quot; option is set, a data flush will be attempted even if there is no persistence configured. If the &quot;nosave&quot; option is set, no data flush will be attempted. The &quot;save&quot; and &quot;nosave&quot; options cannot both be set. &#x27;&#x27;&#x27; sinter(self, keys, *args) &#x27;&#x27;&#x27;Return the intersection of sets specified by ``keys``&#x27;&#x27;&#x27; sinterstore(self, dest, keys, *args) &#x27;&#x27;&#x27; Store the intersection of sets specified by ``keys`` into a new set named ``dest``. Returns the number of keys in the new set. &#x27;&#x27;&#x27; sismember(self, name, value) &#x27;&#x27;&#x27;Return a boolean indicating if ``value`` is a member of set ``name``&#x27;&#x27;&#x27; slaveof(self, host=None, port=None) &#x27;&#x27;&#x27; Set the server to be a replicated slave of the instance identified by the ``host`` and ``port``. If called without arguments, the instance is promoted to a master instead. &#x27;&#x27;&#x27; slowlog_get(self, num=None) &#x27;&#x27;&#x27; Get the entries from the slowlog. If ``num`` is specified, get the most recent ``num`` items. &#x27;&#x27;&#x27; slowlog_len(self) &#x27;&#x27;&#x27;Get the number of items in the slowlog&#x27;&#x27;&#x27; slowlog_reset(self) &#x27;&#x27;&#x27;Remove all items in the slowlog&#x27;&#x27;&#x27; smembers(self, name) &#x27;&#x27;&#x27;Return all members of the set ``name``&#x27;&#x27;&#x27; smove(self, src, dst, value) &#x27;&#x27;&#x27;Move ``value`` from set ``src`` to set ``dst`` atomically&#x27;&#x27;&#x27; sort(self, name, start=None, num=None, by=None, get=None, desc=False, alpha=False, store=None, groups=False) &#x27;&#x27;&#x27; Sort and return the list, set or sorted set at ``name``. ``start`` and ``num`` allow for paging through the sorted data ``by`` allows using an external key to weight and sort the items. Use an &quot;*&quot; to indicate where in the key the item value is located ``get`` allows for returning items from external keys rather than the sorted data itself. Use an &quot;*&quot; to indicate where int he key the item value is located ``desc`` allows for reversing the sort ``alpha`` allows for sorting lexicographically rather than numerically ``store`` allows for storing the result of the sort into the key ``store`` ``groups`` if set to True and if ``get`` contains at least two elements, sort will return a list of tuples, each containing the values fetched from the arguments to ``get``. &#x27;&#x27;&#x27; spop(self, name, count=None) &#x27;&#x27;&#x27;Remove and return a random member of set ``name``&#x27;&#x27;&#x27; srandmember(self, name, number=None) &#x27;&#x27;&#x27; If ``number`` is None, returns a random member of set ``name``. If ``number`` is supplied, returns a list of ``number`` random memebers of set ``name``. Note this is only available when running Redis 2.6+. &#x27;&#x27;&#x27; srem(self, name, *values) &#x27;&#x27;&#x27;Remove ``values`` from set ``name``&#x27;&#x27;&#x27; sscan(self, name, cursor=0, match=None, count=None) &#x27;&#x27;&#x27; Incrementally return lists of elements in a set. Also return a cursor indicating the scan position. ``match`` allows for filtering the keys by pattern ``count`` allows for hint the minimum number of returns &#x27;&#x27;&#x27; sscan_iter(self, name, match=None, count=None) &#x27;&#x27;&#x27; Make an iterator using the SSCAN command so that the client doesn&#x27;t need to remember the cursor position. ``match`` allows for filtering the keys by pattern ``count`` allows for hint the minimum number of returns &#x27;&#x27;&#x27; strlen(self, name) &#x27;&#x27;&#x27;Return the number of bytes stored in the value of ``name``&#x27;&#x27;&#x27; substr(self, name, start, end=-1) &#x27;&#x27;&#x27; Return a substring of the string at key ``name``. ``start`` and ``end`` are 0-based integers specifying the portion of the string to return. &#x27;&#x27;&#x27; sunion(self, keys, *args) &#x27;&#x27;&#x27;Return the union of sets specified by ``keys``&#x27;&#x27;&#x27; sunionstore(self, dest, keys, *args) &#x27;&#x27;&#x27; Store the union of sets specified by ``keys`` into a new set named ``dest``. Returns the number of keys in the new set. &#x27;&#x27;&#x27; swapdb(self, first, second) &#x27;&#x27;&#x27;Swap two databases&#x27;&#x27;&#x27; time(self) &#x27;&#x27;&#x27; Returns the server time as a 2-item tuple of ints: (seconds since epoch, microseconds into this second). &#x27;&#x27;&#x27; touch(self, *args) &#x27;&#x27;&#x27; Alters the last access time of a key(s) ``*args``. A key is ignored if it does not exist. &#x27;&#x27;&#x27; transaction(self, func, *watches, **kwargs) &#x27;&#x27;&#x27; Convenience method for executing the callable `func` as a transaction while watching all keys specified in `watches`. The &#x27;func&#x27; callable should expect a single argument which is a Pipeline object. &#x27;&#x27;&#x27; ttl(self, name) &#x27;&#x27;&#x27;Returns the number of seconds until the key ``name`` will expire&#x27;&#x27;&#x27; type(self, name) &#x27;&#x27;&#x27;Returns the type of key ``name``&#x27;&#x27;&#x27; unlink(self, *names) &#x27;&#x27;&#x27;Unlink one or more keys specified by ``names``&#x27;&#x27;&#x27; unwatch(self) &#x27;&#x27;&#x27;Unwatches the value at key ``name``, or None of the key doesn&#x27;t exist&#x27;&#x27;&#x27; wait(self, num_replicas, timeout) &#x27;&#x27;&#x27; Redis synchronous replication That returns the number of replicas that processed the query when we finally have at least ``num_replicas``, or when the ``timeout`` was reached. &#x27;&#x27;&#x27; watch(self, *names) &#x27;&#x27;&#x27;Watches the values at keys ``names``, or None if the key doesn&#x27;t exist&#x27;&#x27;&#x27; xack(self, name, groupname, *ids) &#x27;&#x27;&#x27; Acknowledges the successful processing of one or more messages. name: name of the stream. groupname: name of the consumer group. *ids: message ids to acknowlege. &#x27;&#x27;&#x27; xadd(self, name, fields, id=&#x27;*&#x27;, maxlen=None, approximate=True) &#x27;&#x27;&#x27; Add to a stream. name: name of the stream fields: dict of field/value pairs to insert into the stream id: Location to insert this record. By default it is appended. maxlen: truncate old stream members beyond this size approximate: actual stream length may be slightly more than maxlen &#x27;&#x27;&#x27; xclaim(self, name, groupname, consumername, min_idle_time, message_ids, idle=None, time=None, retrycount=None, force=False, justid=False) &#x27;&#x27;&#x27; Changes the ownership of a pending message. name: name of the stream. groupname: name of the consumer group. consumername: name of a consumer that claims the message. min_idle_time: filter messages that were idle less than this amount of milliseconds message_ids: non-empty list or tuple of message IDs to claim idle: optional. Set the idle time (last time it was delivered) of the message in ms time: optional integer. This is the same as idle but instead of a relative amount of milliseconds, it sets the idle time to a specific Unix time (in milliseconds). retrycount: optional integer. set the retry counter to the specified value. This counter is incremented every time a message is delivered again. force: optional boolean, false by default. Creates the pending message entry in the PEL even if certain specified IDs are not already in the PEL assigned to a different client. justid: optional boolean, false by default. Return just an array of IDs of messages successfully claimed, without returning the actual message &#x27;&#x27;&#x27; xdel(self, name, *ids) &#x27;&#x27;&#x27; Deletes one or more messages from a stream. name: name of the stream. *ids: message ids to delete. &#x27;&#x27;&#x27; xgroup_create(self, name, groupname, id=&#x27;$&#x27;, mkstream=False) &#x27;&#x27;&#x27; Create a new consumer group associated with a stream. name: name of the stream. groupname: name of the consumer group. id: ID of the last item in the stream to consider already delivered. &#x27;&#x27;&#x27; xgroup_delconsumer(self, name, groupname, consumername) &#x27;&#x27;&#x27; Remove a specific consumer from a consumer group. Returns the number of pending messages that the consumer had before it was deleted. name: name of the stream. groupname: name of the consumer group. consumername: name of consumer to delete &#x27;&#x27;&#x27; xgroup_destroy(self, name, groupname) &#x27;&#x27;&#x27; Destroy a consumer group. name: name of the stream. groupname: name of the consumer group. &#x27;&#x27;&#x27; xgroup_setid(self, name, groupname, id) &#x27;&#x27;&#x27; Set the consumer group last delivered ID to something else. name: name of the stream. groupname: name of the consumer group. id: ID of the last item in the stream to consider already delivered. &#x27;&#x27;&#x27; xinfo_consumers(self, name, groupname) &#x27;&#x27;&#x27; Returns general information about the consumers in the group. name: name of the stream. groupname: name of the consumer group. &#x27;&#x27;&#x27; xinfo_groups(self, name) &#x27;&#x27;&#x27; Returns general information about the consumer groups of the stream. name: name of the stream. &#x27;&#x27;&#x27; xinfo_stream(self, name) &#x27;&#x27;&#x27; Returns general information about the stream. name: name of the stream. &#x27;&#x27;&#x27; xlen(self, name) &#x27;&#x27;&#x27;Returns the number of elements in a given stream.&#x27;&#x27;&#x27; xpending(self, name, groupname) &#x27;&#x27;&#x27; Returns information about pending messages of a group. name: name of the stream. groupname: name of the consumer group. &#x27;&#x27;&#x27; xpending_range(self, name, groupname, min, max, count, consumername=None) &#x27;&#x27;&#x27; Returns information about pending messages, in a range. name: name of the stream. groupname: name of the consumer group. min: minimum stream ID. max: maximum stream ID. count: number of messages to return consumername: name of a consumer to filter by (optional). &#x27;&#x27;&#x27; xrange(self, name, min=&#x27;-&#x27;, max=&#x27;+&#x27;, count=None) &#x27;&#x27;&#x27; Read stream values within an interval. name: name of the stream. start: first stream ID. defaults to &#x27;-&#x27;, meaning the earliest available. finish: last stream ID. defaults to &#x27;+&#x27;, meaning the latest available. count: if set, only return this many items, beginning with the earliest available. &#x27;&#x27;&#x27; xread(self, streams, count=None, block=None) &#x27;&#x27;&#x27; Block and monitor multiple streams for new data. streams: a dict of stream names to stream IDs, where IDs indicate the last ID already seen. count: if set, only return this many items, beginning with the earliest available. block: number of milliseconds to wait, if nothing already present. &#x27;&#x27;&#x27; xreadgroup(self, groupname, consumername, streams, count=None, block=None, noack=False) &#x27;&#x27;&#x27; Read from a stream via a consumer group. groupname: name of the consumer group. consumername: name of the requesting consumer. streams: a dict of stream names to stream IDs, where IDs indicate the last ID already seen. count: if set, only return this many items, beginning with the earliest available. block: number of milliseconds to wait, if nothing already present. noack: do not add messages to the PEL &#x27;&#x27;&#x27; xrevrange(self, name, max=&#x27;+&#x27;, min=&#x27;-&#x27;, count=None) &#x27;&#x27;&#x27; Read stream values within an interval, in reverse order. name: name of the stream start: first stream ID. defaults to &#x27;+&#x27;, meaning the latest available. finish: last stream ID. defaults to &#x27;-&#x27;, meaning the earliest available. count: if set, only return this many items, beginning with the latest available. &#x27;&#x27;&#x27; xtrim(self, name, maxlen, approximate=True) &#x27;&#x27;&#x27; Trims old messages from a stream. name: name of the stream. maxlen: truncate old stream messages beyond this size approximate: actual stream length may be slightly more than maxlen &#x27;&#x27;&#x27; zadd(self, name, mapping, nx=False, xx=False, ch=False, incr=False) &#x27;&#x27;&#x27; Set any number of element-name, score pairs to the key ``name``. Pairs are specified as a dict of element-names keys to score values. mapping &#123;&#x27;element-name&#x27;:&#x27;score&#x27;&#125; ``nx`` forces ZADD to only create new elements and not to update scores for elements that already exist. ``xx`` forces ZADD to only update scores of elements that already exist. New elements will not be added. ``ch`` modifies the return value to be the numbers of elements changed. Changed elements include new elements that were added and elements whose scores changed. ``incr`` modifies ZADD to behave like ZINCRBY. In this mode only a single element/score pair can be specified and the score is the amount the existing score will be incremented by. When using this mode the return value of ZADD will be the new score of the element. The return value of ZADD varies based on the mode specified. With no options, ZADD returns the number of new elements added to the sorted set. &#x27;&#x27;&#x27; zcard(self, name) &#x27;&#x27;&#x27;Return the number of elements in the sorted set ``name``&#x27;&#x27;&#x27; zcount(self, name, min, max) &#x27;&#x27;&#x27; Returns the number of elements in the sorted set at key ``name`` with a score between ``min`` and ``max``. &#x27;&#x27;&#x27; zincrby(self, name, amount, value) &#x27;&#x27;&#x27;Increment the score of ``value`` in sorted set ``name`` by ``amount``&#x27;&#x27;&#x27; zinterstore(self, dest, keys, aggregate=None) &#x27;&#x27;&#x27; Intersect multiple sorted sets specified by ``keys`` into a new sorted set, ``dest``. Scores in the destination will be aggregated based on the ``aggregate``, or SUM if none is provided. &#x27;&#x27;&#x27; zlexcount(self, name, min, max) &#x27;&#x27;&#x27; Return the number of items in the sorted set ``name`` between the lexicographical range ``min`` and ``max``. &#x27;&#x27;&#x27; zpopmax(self, name, count=None) &#x27;&#x27;&#x27; Remove and return up to ``count`` members with the highest scores from the sorted set ``name``. &#x27;&#x27;&#x27; zpopmin(self, name, count=None) &#x27;&#x27;&#x27; Remove and return up to ``count`` members with the lowest scores from the sorted set ``name``. &#x27;&#x27;&#x27; zrange(self, name, start, end, desc=False, withscores=False, score_cast_func=&lt;class &#x27;float&#x27;&gt;) &#x27;&#x27;&#x27; Return a range of values from sorted set ``name`` between ``start`` and ``end`` sorted in ascending order. ``start`` and ``end`` can be negative, indicating the end of the range. ``desc`` a boolean indicating whether to sort the results descendingly ``withscores`` indicates to return the scores along with the values. The return type is a list of (value, score) pairs ``score_cast_func`` a callable used to cast the score return value &#x27;&#x27;&#x27; zrangebylex(self, name, min, max, start=None, num=None) &#x27;&#x27;&#x27; Return the lexicographical range of values from sorted set ``name`` between ``min`` and ``max``. If ``start`` and ``num`` are specified, then return a slice of the range. &#x27;&#x27;&#x27; zrangebyscore(self, name, min, max, start=None, num=None, withscores=False, score_cast_func=&lt;class &#x27;float&#x27;&gt;) &#x27;&#x27;&#x27; Return a range of values from the sorted set ``name`` with scores between ``min`` and ``max``. If ``start`` and ``num`` are specified, then return a slice of the range. ``withscores`` indicates to return the scores along with the values. The return type is a list of (value, score) pairs `score_cast_func`` a callable used to cast the score return value &#x27;&#x27;&#x27; zrank(self, name, value) &#x27;&#x27;&#x27; Returns a 0-based value indicating the rank of ``value`` in sorted set ``name`` &#x27;&#x27;&#x27; zrem(self, name, *values) &#x27;&#x27;&#x27;Remove member ``values`` from sorted set ``name``&#x27;&#x27;&#x27; zremrangebylex(self, name, min, max) &#x27;&#x27;&#x27; Remove all elements in the sorted set ``name`` between the lexicographical range specified by ``min`` and ``max``. Returns the number of elements removed. &#x27;&#x27;&#x27; zremrangebyrank(self, name, min, max) &#x27;&#x27;&#x27; Remove all elements in the sorted set ``name`` with ranks between ``min`` and ``max``. Values are 0-based, ordered from smallest score to largest. Values can be negative indicating the highest scores. Returns the number of elements removed &#x27;&#x27;&#x27; zremrangebyscore(self, name, min, max) &#x27;&#x27;&#x27; Remove all elements in the sorted set ``name`` with scores between ``min`` and ``max``. Returns the number of elements removed. &#x27;&#x27;&#x27; zrevrange(self, name, start, end, withscores=False, score_cast_func=&lt;class &#x27;float&#x27;&gt;) &#x27;&#x27;&#x27; Return a range of values from sorted set ``name`` between ``start`` and ``end`` sorted in descending order. ``start`` and ``end`` can be negative, indicating the end of the range. ``withscores`` indicates to return the scores along with the values The return type is a list of (value, score) pairs ``score_cast_func`` a callable used to cast the score return value &#x27;&#x27;&#x27; zrevrangebylex(self, name, max, min, start=None, num=None) &#x27;&#x27;&#x27; Return the reversed lexicographical range of values from sorted set ``name`` between ``max`` and ``min``. If ``start`` and ``num`` are specified, then return a slice of the range. &#x27;&#x27;&#x27; zrevrangebyscore(self, name, max, min, start=None, num=None, withscores=False, score_cast_func=&lt;class &#x27;float&#x27;&gt;) &#x27;&#x27;&#x27; Return a range of values from the sorted set ``name`` with scores between ``min`` and ``max`` in descending order. If ``start`` and ``num`` are specified, then return a slice of the range. ``withscores`` indicates to return the scores along with the values. The return type is a list of (value, score) pairs ``score_cast_func`` a callable used to cast the score return value &#x27;&#x27;&#x27; zrevrank(self, name, value) &#x27;&#x27;&#x27; Returns a 0-based value indicating the descending rank of ``value`` in sorted set ``name`` &#x27;&#x27;&#x27; zscan(self, name, cursor=0, match=None, count=None, score_cast_func=&lt;class &#x27;float&#x27;&gt;) &#x27;&#x27;&#x27; Incrementally return lists of elements in a sorted set. Also return a cursor indicating the scan position. ``match`` allows for filtering the keys by pattern ``count`` allows for hint the minimum number of returns ``score_cast_func`` a callable used to cast the score return value &#x27;&#x27;&#x27; zscan_iter(self, name, match=None, count=None, score_cast_func=&lt;class &#x27;float&#x27;&gt;) &#x27;&#x27;&#x27; Make an iterator using the ZSCAN command so that the client doesn&#x27;t need to remember the cursor position. ``match`` allows for filtering the keys by pattern ``count`` allows for hint the minimum number of returns ``score_cast_func`` a callable used to cast the score return value &#x27;&#x27;&#x27; zscore(self, name, value) &#x27;&#x27;&#x27;Return the score of element ``value`` in sorted set ``name``&#x27;&#x27;&#x27; zunionstore(self, dest, keys, aggregate=None) &#x27;&#x27;&#x27; Union multiple sorted sets specified by ``keys`` into a new sorted set, ``dest``. Scores in the destination will be aggregated based on the ``aggregate``, or SUM if none is provided. &#x27;&#x27;&#x27; # ---------------------------------------------------------------------- &#x27;&#x27;&#x27;Class methods defined here:&#x27;&#x27;&#x27; from_url(url, db=None, **kwargs) from builtins.type &#x27;&#x27;&#x27; Return a Redis client object configured from the given URL For example:: redis://[:password]@localhost:6379/0 rediss://[:password]@localhost:6379/0 unix://[:password]@/path/to/socket.sock?db=0 Three URL schemes are supported: - ```redis://`` &lt;http://www.iana.org/assignments/uri-schemes/prov/redis&gt;`_ creates a normal TCP socket connection - ```rediss://`` &lt;http://www.iana.org/assignments/uri-schemes/prov/rediss&gt;`_ creates a SSL wrapped TCP socket connection - ``unix://`` creates a Unix Domain Socket connection There are several ways to specify a database number. The parse function will return the first specified option: 1. A ``db`` querystring option, e.g. redis://localhost?db=0 2. If using the redis:// scheme, the path argument of the url, e.g. redis://localhost/0 3. The ``db`` argument to this function. If none of these options are specified, db=0 is used. Any additional querystring arguments and keyword arguments will be passed along to the ConnectionPool class&#x27;s initializer. In the case of conflicting arguments, querystring arguments always win. &#x27;&#x27;&#x27; # ---------------------------------------------------------------------- &#x27;&#x27;&#x27;Data descriptors defined here:&#x27;&#x27;&#x27; __dict__ &#x27;&#x27;&#x27;dictionary for instance variables (if defined)&#x27;&#x27;&#x27; __weakref__ &#x27;&#x27;&#x27;list of weak references to the object (if defined)&#x27;&#x27;&#x27; # ---------------------------------------------------------------------- &#x27;&#x27;&#x27;Data and other attributes defined here:&#x27;&#x27;&#x27; RESPONSE_CALLBACKS = &#123;&#x27;AUTH&#x27;: &lt;class &#x27;bool&#x27;&gt;, &#x27;BGREWRITEAOF&#x27;: &lt;functio...","raw":null,"content":null,"categories":[{"name":"REDIS","slug":"REDIS","permalink":"https://mumu-1005.github.io/pishon/categories/REDIS/"}],"tags":[{"name":"help","slug":"help","permalink":"https://mumu-1005.github.io/pishon/tags/help/"},{"name":"nosql","slug":"nosql","permalink":"https://mumu-1005.github.io/pishon/tags/nosql/"},{"name":"Redis","slug":"Redis","permalink":"https://mumu-1005.github.io/pishon/tags/Redis/"}]},{"title":"最常考的数据结构与算法知识点","slug":"最常考的数据结构与算法知识点","date":"2016-06-15T05:52:41.000Z","updated":"2016-06-15T05:52:41.000Z","comments":false,"path":"/articles/最常考的数据结构与算法知识点.html","link":"","permalink":"https://mumu-1005.github.io/pishon/articles/%E6%9C%80%E5%B8%B8%E8%80%83%E7%9A%84%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E7%9F%A5%E8%AF%86%E7%82%B9.html","excerpt":"","keywords":null,"text":"数 据 结 构 算 法 概 念 链表 广度（深度）优先搜索 位操作 数组 递归 设计模式 二叉树 二分查找 内存管理（堆、栈等） 树 排序（归并排序、快速排序等） 堆（大顶堆、小顶堆） 树的插入&#x2F;删除&#x2F;查找&#x2F;遍历等 栈 图论 队列 Hash 法 向量 分治法 Hash 表 动态规划","raw":null,"content":null,"categories":[{"name":"JAVA","slug":"JAVA","permalink":"https://mumu-1005.github.io/pishon/categories/JAVA/"}],"tags":[{"name":"Java","slug":"Java","permalink":"https://mumu-1005.github.io/pishon/tags/Java/"},{"name":"数据结构","slug":"数据结构","permalink":"https://mumu-1005.github.io/pishon/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"}]},{"title":"插入排序","slug":"插入排序","date":"2016-05-20T05:49:24.000Z","updated":"2016-05-20T05:49:24.000Z","comments":false,"path":"/articles/插入排序.html","link":"","permalink":"https://mumu-1005.github.io/pishon/articles/%E6%8F%92%E5%85%A5%E6%8E%92%E5%BA%8F.html","excerpt":"","keywords":null,"text":"概述 将新元素插入到有序序列中。步骤 假设序列中第一个元素为有序序列，将其余元素都当做待插入元素处理 每次当前待插入元素与有序序列最后一个元素开始依次进行比较，如果小于被比较元素，则进行交换，交换后继续进行比较直至有序序列第一个元素 将列表分为有序区，待插入的无序区 代码实现Python 插入排序123456def sort_cr(v_list): for i in range(len(v_list)): for j in range(i,0,-1): if v_list[j] &lt; v_list[j-1]: v_list[j],v_list[j-1] = v_list[j-1],v_list[j] return v_list C 插入排序12345678910111213141516171819void svoid insertion_sort(int array[],int first,int last)&#123; int i,j; int temp; for(i=first+1;i&lt;last;i++) &#123; temp=array[i]; j=i-1; //与已排序的数逐一比较，大于temp时，该数移后 while((j&gt;=0)&amp;&amp;(array[j]&gt;temp)) &#123; array[j+1]=array[j]; j--; &#125; //存在大于temp的数 if(j!=i-1) array[j+1]=temp; &#125;&#125; 性能分析时间复杂度时间复杂度为O(n^2) 算法稳定性 比较是从有序序列的末尾开始，也就是想要插入的元素和已经有序的最大者开始比起，如果比它大则直接插入在其后面，否则一直往前找直到找到它该插入的位置。 如果碰见一个和插入元素相等的，那么插入元素把想插入的元素放在相等元素的后面。 相等元素的前后顺序没有改变，从原无序序列出去的顺序就是排好序后的顺序，排序是稳定的。","raw":null,"content":null,"categories":[{"name":"算法","slug":"算法","permalink":"https://mumu-1005.github.io/pishon/categories/%E7%AE%97%E6%B3%95/"}],"tags":[{"name":"排序","slug":"排序","permalink":"https://mumu-1005.github.io/pishon/tags/%E6%8E%92%E5%BA%8F/"},{"name":"算法","slug":"算法","permalink":"https://mumu-1005.github.io/pishon/tags/%E7%AE%97%E6%B3%95/"},{"name":"插入","slug":"插入","permalink":"https://mumu-1005.github.io/pishon/tags/%E6%8F%92%E5%85%A5/"}]},{"title":"选择排序","slug":"选择排序","date":"2016-05-19T13:13:03.000Z","updated":"2016-05-19T13:13:03.000Z","comments":false,"path":"/articles/选择排序.html","link":"","permalink":"https://mumu-1005.github.io/pishon/articles/%E9%80%89%E6%8B%A9%E6%8E%92%E5%BA%8F.html","excerpt":"","keywords":null,"text":"概述 走访列表长度次，每次选出最小（或最大）的元素，重新排顺序 步骤 第一次选出最小（或最大）的元素，放在列表的起始位置，即与开头元素交换 接下来每次选出最小（或最大）的元素，与索引等于当前的循环次数的元素进行交换 将列表分为已选择出来的有序区，等待选择的无序区 代码实现Python 选择排序12345678def sort_xz_1(v_list): for i in range(len(v_list)-1): min = i for j in range(i+1,len(v_list)): if v_list[min] &gt; v_list[j]: min = j v_list[min],v_list[i] = v_list[i],v_list[min] return v_list C选择排序123456789101112131415161718192021222324252627282930313233343536void swap(int*a,int*b)&#123; int temp; temp=*a; *a=*b; *b=temp;&#125;void select_sort(int A[],int n)&#123; register int i,j,min,m; for(i=0;i&lt;n-1;i++) &#123; min=i;//查找最小值 for(j=i+1;j&lt;n;j++) &#123; if(A[min]&gt;A[j]) &#123; min=j; &#125; &#125; if(min!=i) &#123; swap(&amp;A[min],&amp;A[i]); printf(&quot;第%d趟排序结果为:\\n&quot;,i+1); for(m=0;m&lt;n;m++) &#123; if(m&gt;0) &#123; printf(&quot;&quot;); &#125; printf(&quot;%d&quot;,A[m]); &#125; printf(&quot;\\n&quot;); &#125; &#125;&#125; 性能分析时间复杂度比较时间复杂度为O(n^2)交换时间复杂度未O(n) 算法稳定性 在一趟选择中，如果一个元素比当前元素小，而该小的元素又出现在一个和当前元素相等的元素后面，那么交换后稳定性就被破坏了。 举个例子，序列5 8 5 2 9，我们知道第一遍选择第1个元素5会和2交换，那么原序列中两个5的相对前后顺序就被破坏了，所以选择排序是一个不稳定的排序算法。","raw":null,"content":null,"categories":[{"name":"算法","slug":"算法","permalink":"https://mumu-1005.github.io/pishon/categories/%E7%AE%97%E6%B3%95/"}],"tags":[{"name":"排序","slug":"排序","permalink":"https://mumu-1005.github.io/pishon/tags/%E6%8E%92%E5%BA%8F/"},{"name":"算法","slug":"算法","permalink":"https://mumu-1005.github.io/pishon/tags/%E7%AE%97%E6%B3%95/"},{"name":"选择","slug":"选择","permalink":"https://mumu-1005.github.io/pishon/tags/%E9%80%89%E6%8B%A9/"}]},{"title":"冒泡排序","slug":"冒泡排序","date":"2016-05-19T12:52:36.000Z","updated":"2016-05-19T12:52:36.000Z","comments":false,"path":"/articles/冒泡排序.html","link":"","permalink":"https://mumu-1005.github.io/pishon/articles/%E5%86%92%E6%B3%A1%E6%8E%92%E5%BA%8F.html","excerpt":"","keywords":null,"text":"概述 重复地走访过要排序的元素列，依次比较两个相邻的元素，如果他们的顺序错误就把他们交换过来。走访元素的工作是重复地进行直到没有相邻元素需要交换，也就是说该元素列已经排序完成。 这个算法的名字由来是因为越大的元素会经由交换慢慢“浮”到数列的顶端（升序或降序排列），就如同碳酸饮料中二氧化碳的气泡最终会上浮到顶端一样，故名“冒泡排序”。 步骤 走n-1次，两两相比，当次当前的比较元素的索引最大值为未被比较元素（未冒泡）的索引-1 每次从第一个元素开始进行两两比较。如果当前元素比下一个元素大，就交换他们两个，接下来有下一个元素与自己的下一个元素进行两两比较。 当次最后的元素是本轮比较结果中最大的数，已冒好泡，下次无需理会。 重复对未冒泡好的左区进行冒泡处理 每轮比较结束后 ，已冒泡元素新增一个 代码实现Python 冒泡排序123456def sort_mp_py(v_list): for i in range(len(v_list)-1): for j in range(len(v_list)-i-1): if v_list[j] &gt; v_list[j+1]: v_list[j],v_list[j+1] = v_list[j+1],v_list[j] return v_list C冒泡排序123456789101112void sort_mp_c (elemType arr[], int len) &#123; elemType temp; int i, j; for (i=0; i&lt;len-1; i++) for (j=0; j&lt;len-1-i; j++) &#123; if (arr[j] &gt; arr[j+1]) &#123; temp = arr[j]; arr[j] = arr[j+1]; arr[j+1] = temp; &#125; &#125;&#125; 性能分析时间复杂度平均时间复杂度为O(n^2) 算法稳定性 冒泡排序就是把小的元素往前调或者把大的元素往后调。比较是相邻的两个元素比较，交换也发生在这两个元素之间。 如果两个元素相等，是不会再交换的；如果两个相等的元素没有相邻，那么即使通过前面的两两交换把两个相邻起来，这时候也不会交换，所以相同元素的前后顺序并没有改变，所以冒泡排序是一种稳定排序算法。","raw":null,"content":null,"categories":[{"name":"算法","slug":"算法","permalink":"https://mumu-1005.github.io/pishon/categories/%E7%AE%97%E6%B3%95/"}],"tags":[{"name":"排序","slug":"排序","permalink":"https://mumu-1005.github.io/pishon/tags/%E6%8E%92%E5%BA%8F/"},{"name":"冒泡","slug":"冒泡","permalink":"https://mumu-1005.github.io/pishon/tags/%E5%86%92%E6%B3%A1/"},{"name":"算法","slug":"算法","permalink":"https://mumu-1005.github.io/pishon/tags/%E7%AE%97%E6%B3%95/"}]},{"title":"排序算法","slug":"排序算法","date":"2016-05-06T12:38:58.000Z","updated":"2019-07-06T12:38:58.000Z","comments":false,"path":"/articles/排序算法.html","link":"","permalink":"https://mumu-1005.github.io/pishon/articles/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95.html","excerpt":"","keywords":null,"text":"分类 冒泡排序 选择排序 插入排序 希尔排序 归并排序 快速排序 基数排序 堆排序 性能分析 时间复杂度 空间复杂度 适用场景 稳定性","raw":null,"content":null,"categories":[{"name":"算法","slug":"算法","permalink":"https://mumu-1005.github.io/pishon/categories/%E7%AE%97%E6%B3%95/"}],"tags":[{"name":"排序","slug":"排序","permalink":"https://mumu-1005.github.io/pishon/tags/%E6%8E%92%E5%BA%8F/"},{"name":"算法","slug":"算法","permalink":"https://mumu-1005.github.io/pishon/tags/%E7%AE%97%E6%B3%95/"}]},{"title":"Java数据类型与运算符细节点","slug":"数据类型与运算符细节点","date":"2016-05-01T06:02:10.000Z","updated":"2016-05-01T06:02:10.000Z","comments":false,"path":"/articles/数据类型与运算符细节点.html","link":"","permalink":"https://mumu-1005.github.io/pishon/articles/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E4%B8%8E%E8%BF%90%E7%AE%97%E7%AC%A6%E7%BB%86%E8%8A%82%E7%82%B9.html","excerpt":"","keywords":null,"text":"注释默认javadoc默认处理以public或protected修饰的类、接口、方法、成员变量、构造器、内部类之前的文档注释 包注释包注释不是直接放在java源文件中，必须另外通过一个标准的HTML文件（包描述文件）指定 类型强类型所有变量必须先声明后使用，指定类型的变量只能接受类型与之匹配的值 转换 强制类型转换，截取左边保留右边 基本类型包装类都提供了parseXxx(String str)静态方法用于将字符串转换为基本类型 Boolean\\Byte\\Short\\Integer\\Long\\Character\\Float\\Double 表达式类型自动提升 最小单元 1byte，2short，2char，4int，4float，8long，8double，boolean 1位即可归属计算机分配内存时最小单元8字节 (byte&gt;short)&#x2F;char&gt;int&gt;long&gt;float&gt;double 进制 2进制0b，8进制0，十六进制0x（1015：af） 最高位符号位 计算机以补码的形式保存所有证书，补码&#x3D;反码+1，符号位保持不变 无穷大 正无穷大: Double或Float类的POSITIVE_INFINITY,正浮点数数除以0得到，表示正溢出 负无穷大: Double或Float类的NEGATIVE_INFINITY,负浮点数数除以0得到，表示负溢出 运算处理 移位运算时考虑有效位数，低于int类型先自动转换为int类型再移位 左移n位就相当于乘以2的n次方，右移n位就相当于除以2的n次方 移位运算不会改变操作数本身，只是得到了一个新的运算结果 ！&#x3D;如操作数都是引用类型，则两者之间具有父子关系才可以进行比较，指向的不是同一个对象就返回true 短路逻辑运算&amp;&amp;||这两个当第一操作数位相应值时不对第二个操作数进行计算，非短路则都会执行计算 单目运算符、复制运算符、三目运算符 从右向左结合运算，其余的从左向右 分隔符&gt;单目&gt;强制类型转换&gt;乘除余&gt;加减&gt;移位&gt;关系&gt;等价&gt;按位与&gt;按位异或&gt;按位或&gt;条件与&gt;条件或&gt;三目运算符&gt;赋值 异常错误 非数：Double或Float类的NaN,0.0除以0.0或对一个负数开方得到，表示出错 ArithmeticException：&#x2F;by zero 一个整数值除以0，抛出如左异常 整数类型进行求余运算，第二个不能是0 否则将引发零异常。如是浮点数则结果是非数 补充 java7中引入 数值中可以使用下划线进行分割 当程序第一次使用某个字符串直接量时，java会使用常量池（constant pool）来缓存","raw":null,"content":null,"categories":[{"name":"JAVA","slug":"JAVA","permalink":"https://mumu-1005.github.io/pishon/categories/JAVA/"}],"tags":[{"name":"数据类型","slug":"数据类型","permalink":"https://mumu-1005.github.io/pishon/tags/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/"},{"name":"运算符","slug":"运算符","permalink":"https://mumu-1005.github.io/pishon/tags/%E8%BF%90%E7%AE%97%E7%AC%A6/"}]},{"title":"Java流程控制与数组细节点","slug":"Java流程控制与数组细节点","date":"2016-04-22T05:48:56.000Z","updated":"2016-04-22T05:48:56.000Z","comments":false,"path":"/articles/Java流程控制与数组细节点.html","link":"","permalink":"https://mumu-1005.github.io/pishon/articles/Java%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6%E4%B8%8E%E6%95%B0%E7%BB%84%E7%BB%86%E8%8A%82%E7%82%B9.html","excerpt":"","keywords":null,"text":"1、使用if。。。else时，一定要先处理包含范围更小的情况2、switch控制表达式的数据类型：byte、short、char、int、枚举类型、java.lang.String​3、do while 循环条件后必须有一个分号，表明循环结束4、for循环中，continue结束本次循环，循环跌代体一样会得到执行​5、break结束循环,return 结束整个方法 两者都会结束循环6、java中的标签只有放在循环语句之前才有作用，放在break所在的循环的外层循环之前才有意义7、break 标签：结束标签指定的循环 而不是break所在的循环8、continue加标签如break一样9、java的数组要求所有的数组元素具有相同的数据类型10、定义数组时不能指定数组的长度，经过初始化才可以使用，实际开发过程中定义和初始化同时完成11、不要同时使用静态初始化（分配初始值）和动态初始化（指定数组的长度）12、​数组索引越界异常（索引值小于0或大于等于长度）：13、foreach循环自动遍历数组和集合的每个元素，通常用于遍历输出，通常不要对循环变量进行赋值，没有太大意义且极容易引起错误，如果希望改变数组元素的值不要用foreach循环14、数组元素（堆内存）和数组变量（栈内存）再内存里是分开​存放的15、方法结束，存放着 方法中定义的局部变量的内存栈都会被自然销毁16、数组元素（对象）没有任何引用变量引用它时，系统垃圾回收机制会在合适时回收它17、让机制回收数组所占内存空间：将数组变量赋值为null，切断变量和元素的引用关系​18、a数组变量赋值给​b数组变量，并没有改变b的数组长度（直到消失），而是改变了b的指引，b原先指向的数组元素失去了引用，成为垃圾，等待回收19、定义一个Object[]类型的数组可以拓展到多维数组20、从数组底层的运行机制上看，java​没有多维数组，只是提供了支持多维数组的语法，多维数组本质上都是以为数组。（三维数组每个数组元素是二维数组）21、char类型转换成int类型数字，直接减去48，他们的ASCII码值恰好相差48","raw":null,"content":null,"categories":[{"name":"JAVA","slug":"JAVA","permalink":"https://mumu-1005.github.io/pishon/categories/JAVA/"}],"tags":[{"name":"Java","slug":"Java","permalink":"https://mumu-1005.github.io/pishon/tags/Java/"},{"name":"流程控制","slug":"流程控制","permalink":"https://mumu-1005.github.io/pishon/tags/%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6/"},{"name":"数组","slug":"数组","permalink":"https://mumu-1005.github.io/pishon/tags/%E6%95%B0%E7%BB%84/"}]},{"title":"虚拟主机配置多个系统多个域名","slug":"虚拟主机配置多个系统多个域名","date":"2016-04-22T05:45:15.000Z","updated":"2016-04-22T05:45:15.000Z","comments":false,"path":"/articles/虚拟主机配置多个系统多个域名.html","link":"","permalink":"https://mumu-1005.github.io/pishon/articles/%E8%99%9A%E6%8B%9F%E4%B8%BB%E6%9C%BA%E9%85%8D%E7%BD%AE%E5%A4%9A%E4%B8%AA%E7%B3%BB%E7%BB%9F%E5%A4%9A%E4%B8%AA%E5%9F%9F%E5%90%8D.html","excerpt":"","keywords":null,"text":"在网站根目录htdocs下创建多个子文件夹，一个系统对应一个子文件夹在网站根目录htdocs下创建”.htaccess”文件。一个域名对应一段代码​123456789101112131415161718192021222324252627282930313233 RewriteEngine On RewriteCond %&#123;HTTP_HOST&#125; ^(www.)?【此处填域名】$ RewriteCond %&#123;REQUEST_URI&#125; !^/【此处填htdocs下子文件夹名称】/ RewriteCond %&#123;REQUEST_FILENAME&#125; !-f RewriteCond %&#123;REQUEST_FILENAME&#125; !-d RewriteRule ^(.*)$ /【此处填htdocs下子文件夹名称】/$1 RewriteCond %&#123;HTTP_HOST&#125; ^(www.)?【此处填域名】$ RewriteRule ^(/)?$ 【此处填包含二级目录下的首页完整路径】 [L] ##### 示例(www.fzg5.com绑定htdocs下的fzg5子文件夹）​ RewriteEngine On RewriteCond %&#123;HTTP_HOST&#125; ^(www.)?fzg5.com$ RewriteCond %&#123;REQUEST_URI&#125; !^/fzg5/ RewriteCond %&#123;REQUEST_FILENAME&#125; !-f RewriteCond %&#123;REQUEST_FILENAME&#125; !-d RewriteRule ^(.*)$ /fzg5/$1 RewriteCond %&#123;HTTP_HOST&#125; ^(www.)?fzg5.com$ RewriteRule ^(/)?$ fzg5/index.html [L]","raw":null,"content":null,"categories":[{"name":"SERVER","slug":"SERVER","permalink":"https://mumu-1005.github.io/pishon/categories/SERVER/"}],"tags":[{"name":"server","slug":"server","permalink":"https://mumu-1005.github.io/pishon/tags/server/"},{"name":"域名配置","slug":"域名配置","permalink":"https://mumu-1005.github.io/pishon/tags/%E5%9F%9F%E5%90%8D%E9%85%8D%E7%BD%AE/"},{"name":"htaccess","slug":"htaccess","permalink":"https://mumu-1005.github.io/pishon/tags/htaccess/"}]},{"title":"Git Manual（已更新）","slug":"git-main","date":"2016-02-03T12:26:23.000Z","updated":"2022-03-27T09:38:01.646Z","comments":false,"path":"/articles/git-main.html","link":"","permalink":"https://mumu-1005.github.io/pishon/articles/git-main.html","excerpt":"","keywords":null,"text":"123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200201202203204205206207208209210211212213214215216217218219220221222223224225226227228229230231232233234235236237238239240241242243244245246247248249250251252253254255256257258259260261262263264265266267268269270271272273274275276277278279280281282283284285286287288289290291292293294295296297298299300301302303304305306307308309310311312313314315316317318319320321322323324325326327328329330331332333334335336337338339340341342343344345346347348349350351352353354355356357358359360361362363364365366367368369370371372373374375376377378379380381382383384385386387388389390391392393394395396397398399400401402403404405406407408409410411412413414415416417418419420421422423424425426427428429430431432433434435436437438439440441442443444445446447448449450451452453454455456457458459460461462463464465466467468469470471472473474475476477478479480481482483484485486487488489490491492493494495496497498499500501502503504505506507508509510511512513514515516517518519520521522523524525526527528529530531532533534535536537538539540541542543544545546547548549550551552553554555556557558559560561562563564565566567568569570571572573574575576577578579580581582583584585586587588589590591592593594595596597598599600601602603604605606607608609610611612613614615616617618619620621622623624625626627628629630631632633634635636637638639640641642643644645646647648649650651652653654655656657658659660661662663664665666667668669670671672673674675676677678679680681682683684685686687688689690691692693694695696697698699700701702703704705706707708709710711712713714715716717718719720721722723724725726727728729730731732733734735736737738739740741742743744745746747748749750751752753754755756757758759760761762763764765766767768769770771772773774775776777778779780781782783784785786787788789790791792793794795796797798799800801802803804805806807808809810811812813814815816817818819820821822823824825826827828829830831832833834835836837838839840841842843844845846847848849850851852853854855856857858859860861862863864865866867868869870871872873874875876877878879880881882883884885886887888889890891892893894895896897898899900901902903904905906907908909910911912913914915916917918919920921922923924925926927928929930931932933934935936937938939940941942943944945946947948949950951952953954955956957958959960## Git Manual ### NAME git - the stupid content tracker### SYNOPSIS git [--version] [--help] [-C &lt;path&gt;] [-c &lt;name&gt;=&lt;value&gt;] [--exec-path[=&lt;path&gt;]] [--html-path] [--man-path] [--info-path] [-p|--paginate|-P|--no-pager] [--no-replace-objects] [--bare] [--git-dir=&lt;path&gt;] [--work-tree=&lt;path&gt;] [--namespace=&lt;name&gt;] [--super-prefix=&lt;path&gt;] &lt;command&gt; [&lt;args&gt;]### DESCRIPTION Git is a fast, scalable, distributed revision control system with an unusually rich command set that provides both high-level operations and full access to internals. See gittutorial(7) to get started, then see giteveryday(7) for a useful minimum set of commands. The Git User&#x27;s Manual[1] has a more in-depth introduction. After you mastered the basic concepts, you can come back to this page to learn what commands Git offers. You can learn more about individual Git commands with &quot;git help command&quot;. gitcli(7) manual page gives you an overview of the command-line command syntax. A formatted and hyperlinked copy of the latest Git documentation can be viewed at https://git.github.io/htmldocs/git.html.### OPTIONS --version Prints the Git suite version that the git program came from. --help Prints the synopsis and a list of the most commonly used commands. If the option --all or -a is given then all available commands are printed. If a Git command is named this option will bring up the manual page for that command. Other options are available to control how the manual page is displayed. See git-help(1) for more information, because git --help ... is converted internally into git help .... -C &lt;path&gt; Run as if git was started in &lt;path&gt; instead of the current working directory. When multiple -C options are given, each subsequent non-absolute -C &lt;path&gt; is interpreted relative to the preceding -C &lt;path&gt;. This option affects options that expect path name like --git-dir and --work-tree in that their interpretations of the path names would be made relative to the working directory caused by the -C option. For example the following invocations are equivalent: git --git-dir=a.git --work-tree=b -C c status git --git-dir=c/a.git --work-tree=c/b status -c &lt;name&gt;=&lt;value&gt; Pass a configuration parameter to the command. The value given will override values from configuration files. The &lt;name&gt; is expected in the same format as listed by git config (subkeys separated by dots). Note that omitting the = in git -c foo.bar ... is allowed and sets foo.bar to the boolean true value (just like [foo]bar would in a config file). Including the equals but with an empty value (like git -c foo.bar= ...) sets foo.bar to the empty string which git config --type=bool will convert to false. --exec-path[=&lt;path&gt;] Path to wherever your core Git programs are installed. This can also be controlled by setting the GIT_EXEC_PATH environment variable. If no path is given, git will print the current setting and then exit. --html-path Print the path, without trailing slash, where Git&#x27;s HTML documentation is installed and exit. --man-path Print the manpath (see man(1)) for the man pages for this version of Git and exit. --info-path Print the path where the Info files documenting this version of Git are installed and exit. -p, --paginate Pipe all output into less (or if set, $PAGER) if standard output is a terminal. This overrides the pager.&lt;cmd&gt; configuration options (see the &quot;Configuration Mechanism&quot; section below). -P, --no-pager Do not pipe Git output into a pager. --git-dir=&lt;path&gt; Set the path to the repository. This can also be controlled by setting the GIT_DIR environment variable. It can be an absolute path or relative path to current working directory. --work-tree=&lt;path&gt; Set the path to the working tree. It can be an absolute path or a path relative to the current working directory. This can also be controlled by setting the GIT_WORK_TREE environment variable and the core.worktree configuration variable (see core.worktree in git-config(1) for a more detailed discussion). --namespace=&lt;path&gt; Set the Git namespace. See gitnamespaces(7) for more details. Equivalent to setting the GIT_NAMESPACE environment variable. --super-prefix=&lt;path&gt; Currently for internal use only. Set a prefix which gives a path from above a repository down to its root. One use is to give submodules context about the superproject that invoked it. --bare Treat the repository as a bare repository. If GIT_DIR environment is not set, it is set to the current working directory. --no-replace-objects Do not use replacement refs to replace Git objects. See git-replace(1) for more information. --literal-pathspecs Treat pathspecs literally (i.e. no globbing, no pathspec magic). This is equivalent to setting the GIT_LITERAL_PATHSPECS environment variable to 1. --glob-pathspecs Add &quot;glob&quot; magic to all pathspec. This is equivalent to setting the GIT_GLOB_PATHSPECS environment variable to 1. Disabling globbing on individual pathspecs can be done using pathspec magic &quot;:(literal)&quot; --noglob-pathspecs Add &quot;literal&quot; magic to all pathspec. This is equivalent to setting the GIT_NOGLOB_PATHSPECS environment variable to 1. Enabling globbing on individual pathspecs can be done using pathspec magic &quot;:(glob)&quot; --icase-pathspecs Add &quot;icase&quot; magic to all pathspec. This is equivalent to setting the GIT_ICASE_PATHSPECS environment variable to 1. --no-optional-locks Do not perform optional operations that require locks. This is equivalent to setting the GIT_OPTIONAL_LOCKS to 0. --list-cmds=group[,group...] List commands by group. This is an internal/experimental option and may change or be removed in the future. Supported groups are: builtins, parseopt (builtin commands that use parse-options), main (all commands in libexec directory), others (all other commands in $PATH that have git- prefix), list-&lt;category&gt; (see categories in command-list.txt), nohelpers (exclude helper commands), alias and config (retrieve command list from config variable completion.commands)### GIT COMMANDS We divide Git into high level (&quot;porcelain&quot;) commands and low level (&quot;plumbing&quot;) commands.### HIGH-LEVEL COMMANDS (PORCELAIN) We separate the porcelain commands into the main commands and some ancillary user utilities.#### Main porcelain commands git-add(1) Add file contents to the index. git-am(1) Apply a series of patches from a mailbox. git-archive(1) Create an archive of files from a named tree. git-bisect(1) Use binary search to find the commit that introduced a bug. git-branch(1) List, create, or delete branches. git-bundle(1) Move objects and refs by archive. git-checkout(1) Switch branches or restore working tree files. git-cherry-pick(1) Apply the changes introduced by some existing commits. git-citool(1) Graphical alternative to git-commit. git-clean(1) Remove untracked files from the working tree. git-clone(1) Clone a repository into a new directory. git-commit(1) Record changes to the repository. git-describe(1) Give an object a human readable name based on an available ref. git-diff(1) Show changes between commits, commit and working tree, etc. git-fetch(1) Download objects and refs from another repository. git-format-patch(1) Prepare patches for e-mail submission. git-gc(1) Cleanup unnecessary files and optimize the local repository. git-grep(1) Print lines matching a pattern. git-gui(1) A portable graphical interface to Git. git-init(1) Create an empty Git repository or reinitialize an existing one. git-log(1) Show commit logs. git-merge(1) Join two or more development histories together. git-mv(1) Move or rename a file, a directory, or a symlink. git-notes(1) Add or inspect object notes. git-pull(1) Fetch from and integrate with another repository or a local branch. git-push(1) Update remote refs along with associated objects. git-range-diff(1) Compare two commit ranges (e.g. two versions of a branch). git-rebase(1) Reapply commits on top of another base tip. git-reset(1) Reset current HEAD to the specified state. git-revert(1) Revert some existing commits. git-rm(1) Remove files from the working tree and from the index. git-shortlog(1) Summarize git log output. git-show(1) Show various types of objects. git-stash(1) Stash the changes in a dirty working directory away. git-status(1) Show the working tree status. git-submodule(1) Initialize, update or inspect submodules. git-tag(1) Create, list, delete or verify a tag object signed with GPG. git-worktree(1) Manage multiple working trees. gitk(1) The Git repository browser.#### Ancillary Commands Manipulators: git-config(1) Get and set repository or global options. git-fast-export(1) Git data exporter. git-fast-import(1) Backend for fast Git data importers. git-filter-branch(1) Rewrite branches. git-mergetool(1) Run merge conflict resolution tools to resolve merge conflicts. git-pack-refs(1) Pack heads and tags for efficient repository access. git-prune(1) Prune all unreachable objects from the object database. git-reflog(1) Manage reflog information. git-remote(1) Manage set of tracked repositories. git-repack(1) Pack unpacked objects in a repository. git-replace(1) Create, list, delete refs to replace objects. Interrogators: git-annotate(1) Annotate file lines with commit information. git-blame(1) Show what revision and author last modified each line of a file. git-count-objects(1) Count unpacked number of objects and their disk consumption. git-difftool(1) Show changes using common diff tools. git-fsck(1) Verifies the connectivity and validity of the objects in the database. git-help(1) Display help information about Git. git-instaweb(1) Instantly browse your working repository in gitweb. git-merge-tree(1) Show three-way merge without touching index. git-rerere(1) Reuse recorded resolution of conflicted merges. git-show-branch(1) Show branches and their commits. git-verify-commit(1) Check the GPG signature of commits. git-verify-tag(1) Check the GPG signature of tags. git-whatchanged(1) Show logs with difference each commit introduces. gitweb(1) Git web interface (web frontend to Git repositories).#### Interacting with Others These commands are to interact with foreign SCM and with other people via patch over e-mail. git-archimport(1) Import a GNU Arch repository into Git. git-cvsexportcommit(1) Export a single commit to a CVS checkout. git-cvsimport(1) Salvage your data out of another SCM people love to hate. git-cvsserver(1) A CVS server emulator for Git. git-imap-send(1) Send a collection of patches from stdin to an IMAP folder. git-p4(1) Import from and submit to Perforce repositories. git-quiltimport(1) Applies a quilt patchset onto the current branch. git-request-pull(1) Generates a summary of pending changes. git-send-email(1) Send a collection of patches as emails. git-svn(1) Bidirectional operation between a Subversion repository and Git.### LOW-LEVEL COMMANDS (PLUMBING) Although Git includes its own porcelain layer, its low-level commands are sufficient to support development of alternative porcelains. Developers of such porcelains might start by reading about git-update-index(1) and git-read-tree(1). The interface (input, output, set of options and the semantics) to these low-level commands are meant to be a lot more stable than Porcelain level commands, because these commands are primarily for scripted use. The interface to Porcelain commands on the other hand are subject to change in order to improve the end user experience. The following description divides the low-level commands into commands that manipulate objects (in the repository, index, and working tree), commands that interrogate and compare objects, and commands that move objects and references between repositories.#### Manipulation commands git-apply(1) Apply a patch to files and/or to the index. git-checkout-index(1) Copy files from the index to the working tree. git-commit-graph(1) Write and verify Git commit-graph files. git-commit-tree(1) Create a new commit object. git-hash-object(1) Compute object ID and optionally creates a blob from a file. git-index-pack(1) Build pack index file for an existing packed archive. git-merge-file(1) Run a three-way file merge. git-merge-index(1) Run a merge for files needing merging. git-mktag(1) Creates a tag object. git-mktree(1) Build a tree-object from ls-tree formatted text. git-multi-pack-index(1) Write and verify multi-pack-indexes. git-pack-objects(1) Create a packed archive of objects. git-prune-packed(1) Remove extra objects that are already in pack files. git-read-tree(1) Reads tree information into the index. git-symbolic-ref(1) Read, modify and delete symbolic refs. git-unpack-objects(1) Unpack objects from a packed archive. git-update-index(1) Register file contents in the working tree to the index. git-update-ref(1) Update the object name stored in a ref safely. git-write-tree(1) Create a tree object from the current index.#### Interrogation commands git-cat-file(1) Provide content or type and size information for repository objects. git-cherry(1) Find commits yet to be applied to upstream. git-diff-files(1) Compares files in the working tree and the index. git-diff-index(1) Compare a tree to the working tree or index. git-diff-tree(1) Compares the content and mode of blobs found via two tree objects. git-for-each-ref(1) Output information on each ref. git-get-tar-commit-id(1) Extract commit ID from an archive created using git-archive. git-ls-files(1) Show information about files in the index and the working tree. git-ls-remote(1) List references in a remote repository. git-ls-tree(1) List the contents of a tree object. git-merge-base(1) Find as good common ancestors as possible for a merge. git-name-rev(1) Find symbolic names for given revs. git-pack-redundant(1) Find redundant pack files. git-rev-list(1) Lists commit objects in reverse chronological order. git-rev-parse(1) Pick out and massage parameters. git-show-index(1) Show packed archive index. git-show-ref(1) List references in a local repository. git-unpack-file(1) Creates a temporary file with a blob&#x27;s contents. git-var(1) Show a Git logical variable. git-verify-pack(1) Validate packed Git archive files. In general, the interrogate commands do not touch the files in the working tree.#### Synching repositories git-daemon(1) A really simple server for Git repositories. git-fetch-pack(1) Receive missing objects from another repository. git-http-backend(1) Server side implementation of Git over HTTP. git-send-pack(1) Push objects over Git protocol to another repository. git-update-server-info(1) Update auxiliary info file to help dumb servers. The following are helper commands used by the above; end users typically do not use them directly. git-http-fetch(1) Download from a remote Git repository via HTTP. git-http-push(1) Push objects over HTTP/DAV to another repository. git-parse-remote(1) Routines to help parsing remote repository access parameters. git-receive-pack(1) Receive what is pushed into the repository. git-shell(1) Restricted login shell for Git-only SSH access. git-upload-archive(1) Send archive back to git-archive. git-upload-pack(1) Send objects packed back to git-fetch-pack.#### Internal helper commands These are internal helper commands used by other commands; end users typically do not use them directly. git-check-attr(1) Display gitattributes information. git-check-ignore(1) Debug gitignore / exclude files. git-check-mailmap(1) Show canonical names and email addresses of contacts. git-check-ref-format(1) Ensures that a reference name is well formed. git-column(1) Display data in columns. git-credential(1) Retrieve and store user credentials. git-credential-cache(1) Helper to temporarily store passwords in memory. git-credential-store(1) Helper to store credentials on disk. git-fmt-merge-msg(1) Produce a merge commit message. git-interpret-trailers(1) add or parse structured information in commit messages. git-mailinfo(1) Extracts patch and authorship from a single e-mail message. git-mailsplit(1) Simple UNIX mbox splitter program. git-merge-one-file(1) The standard helper program to use with git-merge-index. git-patch-id(1) Compute unique ID for a patch. git-sh-i18n(1) Git&#x27;s i18n setup code for shell scripts. git-sh-setup(1) Common Git shell script setup code. git-stripspace(1) Remove unnecessary whitespace.### CONFIGURATION MECHANISM Git uses a simple text format to store customizations that are per repository and are per user. Such a configuration file may look like this: # # A &#x27;#&#x27; or &#x27;;&#x27; character indicates a comment. # ; core variables [core] ; Don&#x27;t trust file modes filemode = false ; user identity [user] name = &quot;Junio C Hamano&quot; email = &quot;gitster@pobox.com&quot; Various commands read from the configuration file and adjust their operation accordingly. See git-config(1) for a list and more details about the configuration mechanism.### IDENTIFIER TERMINOLOGY &lt;object&gt; Indicates the object name for any type of object. &lt;blob&gt; Indicates a blob object name. &lt;tree&gt; Indicates a tree object name. &lt;commit&gt; Indicates a commit object name. &lt;tree-ish&gt; Indicates a tree, commit or tag object name. A command that takes a &lt;tree-ish&gt; argument ultimately wants to operate on a &lt;tree&gt; object but automatically dereferences &lt;commit&gt; and &lt;tag&gt; objects that point at a &lt;tree&gt;. &lt;commit-ish&gt; Indicates a commit or tag object name. A command that takes a &lt;commit-ish&gt; argument ultimately wants to operate on a &lt;commit&gt; object but automatically dereferences &lt;tag&gt; objects that point at a &lt;commit&gt;. &lt;type&gt; Indicates that an object type is required. Currently one of: blob, tree, commit, or tag. &lt;file&gt; Indicates a filename - almost always relative to the root of the tree structure GIT_INDEX_FILE describes.### SYMBOLIC IDENTIFIERS Any Git command accepting any &lt;object&gt; can also use the following symbolic notation: HEAD indicates the head of the current branch. &lt;tag&gt; a valid tag name (i.e. a refs/tags/&lt;tag&gt; reference). &lt;head&gt; a valid head name (i.e. a refs/heads/&lt;head&gt; reference). For a more complete list of ways to spell object names, see &quot;SPECIFYING REVISIONS&quot; section in gitrevisions(7).### FILE/DIRECTORY STRUCTURE Please see the gitrepository-layout(5) document. Read githooks(5) for more details about each hook. Higher level SCMs may provide and manage additional information in the $GIT_DIR.### TERMINOLOGY Please see gitglossary(7).### ENVIRONMENT VARIABLES Various Git commands use the following environment variables:#### The Git Repository These environment variables apply to all core Git commands. Nb: it is worth noting that they may be used/overridden by SCMS sitting above Git so take care if using a foreign front-end. GIT_INDEX_FILE This environment allows the specification of an alternate index file. If not specified, the default of $GIT_DIR/index is used. GIT_INDEX_VERSION This environment variable allows the specification of an index version for new repositories. It won&#x27;t affect existing index files. By default index file version 2 or 3 is used. See git-update-index(1) for more information. GIT_OBJECT_DIRECTORY If the object storage directory is specified via this environment variable then the sha1 directories are created underneath - otherwise the default $GIT_DIR/objects directory is used. GIT_ALTERNATE_OBJECT_DIRECTORIES Due to the immutable nature of Git objects, old objects can be archived into shared, read-only directories. This variable specifies a &quot;:&quot; separated (on Windows &quot;;&quot; separated) list of Git object directories which can be used to search for Git objects. New objects will not be written to these directories. Entries that begin with &quot; (double-quote) will be interpreted as C-style quoted paths, removing leading and trailing double-quotes and respecting backslash escapes. E.g., the value &quot;path-with-\\&quot;-and-:-in-it&quot;:vanilla-path has two paths: path-with-&quot;-and-:-in-it and vanilla-path. GIT_DIR If the GIT_DIR environment variable is set then it specifies a path to use instead of the default .git for the base of the repository. The --git-dir command-line option also sets this value. GIT_WORK_TREE Set the path to the root of the working tree. This can also be controlled by the --work-tree command-line option and the core.worktree configuration variable. GIT_NAMESPACE Set the Git namespace; see gitnamespaces(7) for details. The --namespace command-line option also sets this value. GIT_CEILING_DIRECTORIES This should be a colon-separated list of absolute paths. If set, it is a list of directories that Git should not chdir up into while looking for a repository directory (useful for excluding slow-loading network directories). It will not exclude the current working directory or a GIT_DIR set on the command line or in the environment. Normally, Git has to read the entries in this list and resolve any symlink that might be present in order to compare them with the current directory. However, if even this access is slow, you can add an empty entry to the list to tell Git that the subsequent entries are not symlinks and needn&#x27;t be resolved; e.g., GIT_CEILING_DIRECTORIES=/maybe/symlink::/very/slow/non/symlink. GIT_DISCOVERY_ACROSS_FILESYSTEM When run in a directory that does not have &quot;.git&quot; repository directory, Git tries to find such a directory in the parent directories to find the top of the working tree, but by default it does not cross filesystem boundaries. This environment variable can be set to true to tell Git not to stop at filesystem boundaries. Like GIT_CEILING_DIRECTORIES, this will not affect an explicit repository directory set via GIT_DIR or on the command line. GIT_COMMON_DIR If this variable is set to a path, non-worktree files that are normally in $GIT_DIR will be taken from this path instead. Worktree-specific files such as HEAD or index are taken from $GIT_DIR. See gitrepository-layout(5) and git-worktree(1) for details. This variable has lower precedence than other path variables such as GIT_INDEX_FILE, GIT_OBJECT_DIRECTORY...#### Git Commits GIT_AUTHOR_NAME, GIT_AUTHOR_EMAIL, GIT_AUTHOR_DATE, GIT_COMMITTER_NAME, GIT_COMMITTER_EMAIL, GIT_COMMITTER_DATE, EMAIL see git-commit-tree(1)#### Git Diffs GIT_DIFF_OPTS Only valid setting is &quot;--unified=??&quot; or &quot;-u??&quot; to set the number of context lines shown when a unified diff is created. This takes precedence over any &quot;-U&quot; or &quot;--unified&quot; option value passed on the Git diff command line. GIT_EXTERNAL_DIFF When the environment variable GIT_EXTERNAL_DIFF is set, the program named by it is called, instead of the diff invocation described above. For a path that is added, removed, or modified, GIT_EXTERNAL_DIFF is called with 7 parameters: path old-file old-hex old-mode new-file new-hex new-mode where: &lt;old|new&gt;-file are files GIT_EXTERNAL_DIFF can use to read the contents of &lt;old|new&gt;, &lt;old|new&gt;-hex are the 40-hexdigit SHA-1 hashes, &lt;old|new&gt;-mode are the octal representation of the file modes. The file parameters can point at the user&#x27;s working file (e.g. new-file in &quot;git-diff-files&quot;), /dev/null (e.g. old-file when a new file is added), or a temporary file (e.g. old-file in the index). GIT_EXTERNAL_DIFF should not worry about unlinking the temporary file --- it is removed when GIT_EXTERNAL_DIFF exits. For a path that is unmerged, GIT_EXTERNAL_DIFF is called with 1 parameter, &lt;path&gt;. For each path GIT_EXTERNAL_DIFF is called, two environment variables, GIT_DIFF_PATH_COUNTER and GIT_DIFF_PATH_TOTAL are set. GIT_DIFF_PATH_COUNTER A 1-based counter incremented by one for every path. GIT_DIFF_PATH_TOTAL The total number of paths.#### other GIT_MERGE_VERBOSITY A number controlling the amount of output shown by the recursive merge strategy. Overrides merge.verbosity. See git-merge(1) GIT_PAGER This environment variable overrides $PAGER. If it is set to an empty string or to the value &quot;cat&quot;, Git will not launch a pager. See also the core.pager option in git- config(1). GIT_EDITOR This environment variable overrides $EDITOR and $VISUAL. It is used by several Git commands when, on interactive mode, an editor is to be launched. See also git-var(1) and the core.editor option in git-config(1). GIT_SSH, GIT_SSH_COMMAND If either of these environment variables is set then git fetch and git push will use the specified command instead of ssh when they need to connect to a remote system. The command-line parameters passed to the configured command are determined by the ssh variant. See ssh.variant option in git-config(1) for details. + $GIT_SSH_COMMAND takes precedence over $GIT_SSH, and is interpreted by the shell, which allows additional arguments to be included. $GIT_SSH on the other hand must be just the path to a program (which can be a wrapper shell script, if additional arguments are needed). + Usually it is easier to configure any desired options through your personal .ssh/config file. Please consult your ssh documentation for further details. GIT_SSH_VARIANT If this environment variable is set, it overrides Git&#x27;s autodetection whether GIT_SSH/GIT_SSH_COMMAND/core.sshCommand refer to OpenSSH, plink or tortoiseplink. This variable overrides the config setting ssh.variant that serves the same purpose. GIT_ASKPASS If this environment variable is set, then Git commands which need to acquire passwords or passphrases (e.g. for HTTP or IMAP authentication) will call this program with a suitable prompt as command-line argument and read the password from its STDOUT. See also the core.askPass option in git-config(1). GIT_TERMINAL_PROMPT If this environment variable is set to 0, git will not prompt on the terminal (e.g., when asking for HTTP authentication). GIT_CONFIG_NOSYSTEM Whether to skip reading settings from the system-wide $(prefix)/etc/gitconfig file. This environment variable can be used along with $HOME and $XDG_CONFIG_HOME to create a predictable environment for a picky script, or you can set it temporarily to avoid using a buggy /etc/gitconfig file while waiting for someone with sufficient permissions to fix it. GIT_FLUSH If this environment variable is set to &quot;1&quot;, then commands such as git blame (in incremental mode), git rev-list, git log, git check-attr and git check-ignore will force a flush of the output stream after each record have been flushed. If this variable is set to &quot;0&quot;, the output of these commands will be done using completely buffered I/O. If this environment variable is not set, Git will choose buffered or record-oriented flushing based on whether stdout appears to be redirected to a file or not. GIT_TRACE Enables general trace messages, e.g. alias expansion, built-in command execution and external command execution. If this variable is set to &quot;1&quot;, &quot;2&quot; or &quot;true&quot; (comparison is case insensitive), trace messages will be printed to stderr. If the variable is set to an integer value greater than 2 and lower than 10 (strictly) then Git will interpret this value as an open file descriptor and will try to write the trace messages into this file descriptor. Alternatively, if the variable is set to an absolute path (starting with a / character), Git will interpret this as a file path and will try to append the trace messages to it. Unsetting the variable, or setting it to empty, &quot;0&quot; or &quot;false&quot; (case insensitive) disables trace messages. GIT_TRACE_FSMONITOR Enables trace messages for the filesystem monitor extension. See GIT_TRACE for available trace output options. GIT_TRACE_PACK_ACCESS Enables trace messages for all accesses to any packs. For each access, the pack file name and an offset in the pack is recorded. This may be helpful for troubleshooting some pack-related performance problems. See GIT_TRACE for available trace output options. GIT_TRACE_PACKET Enables trace messages for all packets coming in or out of a given program. This can help with debugging object negotiation or other protocol issues. Tracing is turned off at a packet starting with &quot;PACK&quot; (but see GIT_TRACE_PACKFILE below). See GIT_TRACE for available trace output options. GIT_TRACE_PACKFILE Enables tracing of packfiles sent or received by a given program. Unlike other trace output, this trace is verbatim: no headers, and no quoting of binary data. You almost certainly want to direct into a file (e.g., GIT_TRACE_PACKFILE=/tmp/my.pack) rather than displaying it on the terminal or mixing it with other trace output. Note that this is currently only implemented for the client side of clones and fetches. GIT_TRACE_PERFORMANCE Enables performance related trace messages, e.g. total execution time of each Git command. See GIT_TRACE for available trace output options. GIT_TRACE_SETUP Enables trace messages printing the .git, working tree and current working directory after Git has completed its setup phase. See GIT_TRACE for available trace output options. GIT_TRACE_SHALLOW Enables trace messages that can help debugging fetching / cloning of shallow repositories. See GIT_TRACE for available trace output options. GIT_TRACE_CURL Enables a curl full trace dump of all incoming and outgoing data, including descriptive information, of the git transport protocol. This is similar to doing curl --trace-ascii on the command line. This option overrides setting the GIT_CURL_VERBOSE environment variable. See GIT_TRACE for available trace output options. GIT_TRACE_CURL_NO_DATA When a curl trace is enabled (see GIT_TRACE_CURL above), do not dump data (that is, only dump info lines and headers). GIT_REDACT_COOKIES This can be set to a comma-separated list of strings. When a curl trace is enabled (see GIT_TRACE_CURL above), whenever a &quot;Cookies:&quot; header sent by the client is dumped, values of cookies whose key is in that list (case-sensitive) are redacted. GIT_LITERAL_PATHSPECS Setting this variable to 1 will cause Git to treat all pathspecs literally, rather than as glob patterns. For example, running GIT_LITERAL_PATHSPECS=1 git log -- &#x27;*.c&#x27; will search for commits that touch the path *.c, not any paths that the glob *.c matches. You might want this if you are feeding literal paths to Git (e.g., paths previously given to you by git ls-tree, --raw diff output, etc). GIT_GLOB_PATHSPECS Setting this variable to 1 will cause Git to treat all pathspecs as glob patterns (aka &quot;glob&quot; magic). GIT_NOGLOB_PATHSPECS Setting this variable to 1 will cause Git to treat all pathspecs as literal (aka &quot;literal&quot; magic). GIT_ICASE_PATHSPECS Setting this variable to 1 will cause Git to treat all pathspecs as case-insensitive. GIT_REFLOG_ACTION When a ref is updated, reflog entries are created to keep track of the reason why the ref was updated (which is typically the name of the high-level command that updated the ref), in addition to the old and new values of the ref. A scripted Porcelain command can use set_reflog_action helper function in git-sh-setup to set its name to this variable when it is invoked as the top level command by the end user, to be recorded in the body of the reflog. GIT_REF_PARANOIA If set to 1, include broken or badly named refs when iterating over lists of refs. In a normal, non-corrupted repository, this does nothing. However, enabling it may help git to detect and abort some operations in the presence of broken refs. Git sets this variable automatically when performing destructive operations like git-prune(1). You should not need to set it yourself unless you want to be paranoid about making sure an operation has touched every ref (e.g., because you are cloning a repository to make a backup). GIT_ALLOW_PROTOCOL If set to a colon-separated list of protocols, behave as if protocol.allow is set to never, and each of the listed protocols has protocol.&lt;name&gt;.allow set to always (overriding any existing configuration). In other words, any protocol not mentioned will be disallowed (i.e., this is a whitelist, not a blacklist). See the description of protocol.allow in git-config(1) for more details. GIT_PROTOCOL_FROM_USER Set to 0 to prevent protocols used by fetch/push/clone which are configured to the user state. This is useful to restrict recursive submodule initialization from an untrusted repository or for programs which feed potentially-untrusted URLS to git commands. See git-config(1) for more details. GIT_PROTOCOL For internal use only. Used in handshaking the wire protocol. Contains a colon : separated list of keys with optional values key[=value]. Presence of unknown keys and values must be ignored. GIT_OPTIONAL_LOCKS If set to 0, Git will complete any requested operation without performing any optional sub-operations that require taking a lock. For example, this will prevent git status from refreshing the index as a side effect. This is useful for processes running in the background which do not want to cause lock contention with other operations on the repository. Defaults to 1. GIT_REDIRECT_STDIN, GIT_REDIRECT_STDOUT, GIT_REDIRECT_STDERR Windows-only: allow redirecting the standard input/output/error handles to paths specified by the environment variables. This is particularly useful in multi-threaded applications where the canonical way to pass standard handles via CreateProcess() is not an option because it would require the handles to be marked inheritable (and consequently every spawned process would inherit them, possibly blocking regular Git operations). The primary intended use case is to use named pipes for communication (e.g. \\\\.\\pipe\\my-git-stdin-123). Two special values are supported: off will simply close the corresponding standard handle, and if GIT_REDIRECT_STDERR is 2&gt;&amp;1, standard error will be redirected to the same handle as standard output. GIT_PRINT_SHA1_ELLIPSIS (deprecated) If set to yes, print an ellipsis following an (abbreviated) SHA-1 value. This affects indications of detached HEADs (git-checkout(1)) and the raw diff output (git-diff(1)). Printing an ellipsis in the cases mentioned is no longer considered adequate and support for it is likely to be removed in the foreseeable future (along with the variable).### DISCUSSION More detail on the following is available from the Git concepts chapter of the user-manual[2] and gitcore-tutorial(7). A Git project normally consists of a working directory with a &quot;.git&quot; subdirectory at the top level. The .git directory contains, among other things, a compressed object database representing the complete history of the project, an &quot;index&quot; file which links that history to the current contents of the working tree, and named pointers into that history such as tags and branch heads. The object database contains objects of three main types: blobs, which hold file data; trees, which point to blobs and other trees to build up directory hierarchies; and commits, which each reference a single tree and some number of parent commits. The commit, equivalent to what other systems call a &quot;changeset&quot; or &quot;version&quot;, represents a step in the project&#x27;s history, and each parent represents an immediately preceding step. Commits with more than one parent represent merges of independent lines of development. All objects are named by the SHA-1 hash of their contents, normally written as a string of 40 hex digits. Such names are globally unique. The entire history leading up to a commit can be vouched for by signing just that commit. A fourth object type, the tag, is provided for this purpose. When first created, objects are stored in individual files, but for efficiency may later be compressed together into &quot;pack files&quot;. Named pointers called refs mark interesting points in history. A ref may contain the SHA-1 name of an object or the name of another ref. Refs with names beginning ref/head/ contain the SHA-1 name of the most recent commit (or &quot;head&quot;) of a branch under development. SHA-1 names of tags of interest are stored under ref/tags/. A special ref named HEAD contains the name of the currently checked-out branch. The index file is initialized with a list of all paths and, for each path, a blob object and a set of attributes. The blob object represents the contents of the file as of the head of the current branch. The attributes (last modified time, size, etc.) are taken from the corresponding file in the working tree. Subsequent changes to the working tree can be found by comparing these attributes. The index may be updated with new content, and new commits may be created from the content stored in the index. The index is also capable of storing multiple entries (called &quot;stages&quot;) for a given pathname. These stages are used to hold the various unmerged version of a file when a merge is in progress.### FURTHER DOCUMENTATION See the references in the &quot;description&quot; section to get started using Git. The following is probably more detail than necessary for a first-time user. The Git concepts chapter of the user-manual[2] and gitcore-tutorial(7) both provide introductions to the underlying Git architecture. See gitworkflows(7) for an overview of recommended workflows. See also the howto[3] documents for some useful examples. The internals are documented in the Git API documentation[4]. Users migrating from CVS may also want to read gitcvs-migration(7).### AUTHORS Git was started by Linus Torvalds, and is currently maintained by Junio C Hamano. Numerous contributions have come from the Git mailing list &lt;git@vger.kernel.org[5]&gt;. http://www.openhub.net/p/git/contributors/summary gives you a more complete list of contributors. If you have a clone of git.git itself, the output of git-shortlog(1) and git-blame(1) can show you the authors for specific parts of the project.### REPORTING BUGS Report bugs to the Git mailing list &lt;git@vger.kernel.org[5]&gt; where the development and maintenance is primarily done. You do not have to be subscribed to the list to send a message there. See the list archive at https://public-inbox.org/git for previous bug reports and other discussions. Issues which are security relevant should be disclosed privately to the Git Security mailing list &lt;git-security@googlegroups.com[6]&gt;.### SEE ALSO gittutorial(7), gittutorial-2(7), giteveryday(7), gitcvs-migration(7), gitglossary(7), gitcore-tutorial(7), gitcli(7), The Git User&#x27;s Manual[1], gitworkflows(7)### GIT Part of the git(1) suite### NOTES 1. Git User&#x27;s Manual git-htmldocs/user-manual.html 2. Git concepts chapter of the user-manual git-htmldocs/user-manual.html#git-concepts 3. howto git-htmldocs/howto-index.html 4. Git API documentation git-htmldocs/technical/api-index.html 5. git@vger.kernel.org mailto:git@vger.kernel.org 6. git-security@googlegroups.com mailto:git-security@googlegroups.com","raw":null,"content":null,"categories":[{"name":"TOOLS","slug":"TOOLS","permalink":"https://mumu-1005.github.io/pishon/categories/TOOLS/"}],"tags":[{"name":"tools","slug":"tools","permalink":"https://mumu-1005.github.io/pishon/tags/tools/"},{"name":"man","slug":"man","permalink":"https://mumu-1005.github.io/pishon/tags/man/"},{"name":"git","slug":"git","permalink":"https://mumu-1005.github.io/pishon/tags/git/"}]},{"title":"POP vs OOP","slug":"OOP","date":"2015-10-16T15:16:31.000Z","updated":"2021-10-16T15:35:31.265Z","comments":true,"path":"/articles/OOP.html","link":"","permalink":"https://mumu-1005.github.io/pishon/articles/OOP.html","excerpt":"","keywords":null,"text":"[TOC] POPProcedure-Oriented Programming 以过程为中心，试图使问题满足语言的过程性方法，强调编程的算法 OOPObject-Oriented Programming 以对象为中心，试图让语言来满足问题的要求，强调数据","raw":null,"content":null,"categories":[],"tags":[{"name":"help","slug":"help","permalink":"https://mumu-1005.github.io/pishon/tags/help/"}]}]}